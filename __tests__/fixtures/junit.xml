<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="1592" failures="1" errors="0" time="38.59">
  <testsuite name="controllers/full-appeal/submit-appeal/enter-code" errors="0" failures="1" skipped="1" timestamp="2023-07-17T14:03:58" time="1.263" tests="32">
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode should render page but not call sendToken when no req.params.id or appeal in session" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode should render page but not call sendToken when no req.params.id or appeal in session" time="0.005">
      <failure>Error: expect(received).toEqual(expected) // deep equality

Expected: true
Received: false
    at Object.toEqual (/home/charlie/Documents/PINS2/src/appeal-planning-decision/packages/forms-web-app/__tests__/unit/controllers/common/enter-code.test.js:70:18)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode should redirect to enter-code/:id when an appeal id exists in session and no req.params.id provided" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode should redirect to enter-code/:id when an appeal id exists in session and no req.params.id provided" time="0">
      <skipped/>
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode should delete newCode from session if present" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode should delete newCode from session if present" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should render page if sendToken call succeeds" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should render page if sendToken call succeeds" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should set confirm email url if action is set" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should set confirm email url if action is set" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should render page but not call sendToken if validation errors in req.session" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should render page but not call sendToken if validation errors in req.session" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should render page if sendToken call fails" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should render page if sendToken call fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should set req.session.enterCode.action if value is not set" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should set req.session.enterCode.action if value is not set" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should use any preexisting req.session.enterCode.action value" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should use any preexisting req.session.enterCode.action value" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should delete req.session.enterCode.newCode if it exists" name="controllers/full-appeal/submit-appeal/enter-code getEnterCode when req.params.id is provided should delete req.session.enterCode.newCode if it exists" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with errors if input validation fails" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with errors if input validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render need new code page if too many attempts have been made" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render need new code page if too many attempts have been made" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render code expired page when token is expired" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render code expired page when token is expired" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with error message if token invalid" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with error message if token invalid" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render email confirmed page if email action" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render email confirmed page if email action" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with error message if token ok but appeal not found" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with error message if token ok but appeal not found" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render appeal already submitted page when appeal is already complete" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render appeal already submitted page when appeal is already complete" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render task list page when entering valid token" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render task list page when entering valid token" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode Should accept a test code value when the LPA is the test LPA and is test environment returns true" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode Should accept a test code value when the LPA is the test LPA and is test environment returns true" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with error message if test token used but test environment is false" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with error message if test token used but test environment is false" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with error message if test tokenused but not test LPA code and test environment is true" name="controllers/full-appeal/submit-appeal/enter-code postEnterCode should render page with error message if test tokenused but not test LPA code and test environment is true" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should render page" name="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should render page" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should redirect if user id is not in a valid format" name="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should redirect if user id is not in a valid format" time="0.034">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should redirect if user id is not supplied" name="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should redirect if user id is not supplied" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should send new code param to view and remove from session" name="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should send new code param to view and remove from session" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should send token to user if user exists" name="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should send token to user if user exists" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should not send token to user if user lookup fails, but still render page" name="controllers/full-appeal/submit-appeal/enter-code getEnterCodeLPA should not send token to user if user lookup fails, but still render page" time="0.018">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should post the code" name="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should post the code" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should redirect on too many attempts" name="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should redirect on too many attempts" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should redirect on token expired" name="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should redirect on token expired" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should redirect on test environment" name="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should redirect on test environment" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should set the user session" name="controllers/full-appeal/submit-appeal/enter-code postEnterCodeLPA should set the user session" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/submit-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:03:58" time="2.127" tests="1">
    <testcase classname="routes/submit-appeal should define the expected routes" name="routes/submit-appeal should define the expected routes" time="0.397">
    </testcase>
  </testsuite>
  <testsuite name="routes/householder-planning/eligibility/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:03:58" time="2.29" tests="1">
    <testcase classname="routes/householder-planning/eligibility/index should define the expected routes" name="routes/householder-planning/eligibility/index should define the expected routes" time="0.486">
    </testcase>
  </testsuite>
  <testsuite name="routes/householder-planning/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:03:58" time="2.403" tests="1">
    <testcase classname="routes/householder-planning/index should define the expected routes" name="routes/householder-planning/index should define the expected routes" time="0.421">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:03:58" time="2.447" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/index should define the expected routes" name="routes/full-appeal/submit-appeal/index should define the expected routes" time="0.119">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:03:58" time="2.495" tests="1">
    <testcase classname="routes/full-appeal/index should define the expected routes" name="routes/full-appeal/index should define the expected routes" time="0.488">
    </testcase>
  </testsuite>
  <testsuite name="routes/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:03:58" time="2.685" tests="1">
    <testcase classname="routes/index should define the expected routes" name="routes/index should define the expected routes" time="0.108">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/who-are-you" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:03:59" time="1.6" tests="1">
    <testcase classname="routes/appellant-submission/who-are-you should define the expected routes" name="routes/appellant-submission/who-are-you should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-planning/granted-or-refused" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:00" time="0.939" tests="1">
    <testcase classname="routes/full-planning/granted-or-refused should define the expected routes" name="routes/full-planning/granted-or-refused should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/householder-planning/eligibility/decision-date-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:00" time="0.744" tests="1">
    <testcase classname="routes/householder-planning/eligibility/decision-date-householder should define the expected routes" name="routes/householder-planning/eligibility/decision-date-householder should define the expected routes" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:00" time="1.016" tests="1">
    <testcase classname="routes/appellant-submission/index should define the expected routes" name="routes/appellant-submission/index should define the expected routes" time="0.722">
    </testcase>
  </testsuite>
  <testsuite name="controllers/householder-planning/eligibility/decision-date-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:01" time="0.759" tests="8">
    <testcase classname="controllers/householder-planning/eligibility/decision-date-householder getDecisionDateHouseholder should call the correct template with no decision date given" name="controllers/householder-planning/eligibility/decision-date-householder getDecisionDateHouseholder should call the correct template with no decision date given" time="0.003">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/decision-date-householder getDecisionDateHouseholder should call the correct template with a decision date given" name="controllers/householder-planning/eligibility/decision-date-householder getDecisionDateHouseholder should call the correct template with a decision date given" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should save the appeal and redirect to enforcement-notice-householder if application decision is granted and date is within six months" name="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should save the appeal and redirect to enforcement-notice-householder if application decision is granted and date is within six months" time="0.002">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should save the appeal and redirect to enforcement-notice-householder if application decision is refused and date is within twelve weeks" name="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should save the appeal and redirect to enforcement-notice-householder if application decision is refused and date is within twelve weeks" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should not save the appeal and redirect to you-cannot-appeal if application decision is granted and date is older than six months" name="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should not save the appeal and redirect to you-cannot-appeal if application decision is granted and date is older than six months" time="0">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should not save the appeal and redirect to you-cannot-appeal if application decision is refused and date is older than twelve weeks" name="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should not save the appeal and redirect to you-cannot-appeal if application decision is refused and date is older than twelve weeks" time="0">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should display the decision date template with errors if any field is invalid" name="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should display the decision date template with errors if any field is invalid" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should re-render the template with errors if there is any api call error" name="controllers/householder-planning/eligibility/decision-date-householder postDecisionDateHouseholder should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/upload-decision" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:00" time="1.058" tests="5">
    <testcase classname="controllers/appellant-submission/upload-decision getUploadDecision should call the correct template" name="controllers/appellant-submission/upload-decision getUploadDecision should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/upload-decision postUploadDecision should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/upload-decision postUploadDecision should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/upload-decision postUploadDecision should log an error if the api call fails, and remain on the same page" name="controllers/appellant-submission/upload-decision postUploadDecision should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/upload-decision postUploadDecision should not require req.files to be valid" name="controllers/appellant-submission/upload-decision postUploadDecision should not require req.files to be valid" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/upload-decision postUploadDecision should redirect to `/appellant-submission/task-list` if valid" name="controllers/appellant-submission/upload-decision postUploadDecision should redirect to `/appellant-submission/task-list` if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/decision-date" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:01" time="0.896" tests="1">
    <testcase classname="routes/eligibility/decision-date should define the expected routes" name="routes/eligibility/decision-date should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie/cookie-consent-accepted" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:01" time="0.951" tests="6">
    <testcase classname="lib/client-side/cookie/cookie-consent-accepted banner is showing hideConsentAcceptedBanner" name="lib/client-side/cookie/cookie-consent-accepted banner is showing hideConsentAcceptedBanner" time="0.022">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-accepted banner is showing showCookieConsentAcceptedBanner" name="lib/client-side/cookie/cookie-consent-accepted banner is showing showCookieConsentAcceptedBanner" time="0.006">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-accepted banner is showing addCookieConsentAcceptedListener" name="lib/client-side/cookie/cookie-consent-accepted banner is showing addCookieConsentAcceptedListener" time="0.016">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-accepted banner is hidden hideConsentAcceptedBanner" name="lib/client-side/cookie/cookie-consent-accepted banner is hidden hideConsentAcceptedBanner" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-accepted banner is hidden showCookieConsentAcceptedBanner" name="lib/client-side/cookie/cookie-consent-accepted banner is hidden showCookieConsentAcceptedBanner" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-accepted banner is hidden addCookieConsentAcceptedListener" name="lib/client-side/cookie/cookie-consent-accepted banner is hidden addCookieConsentAcceptedListener" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/design-access-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:01" time="0.692" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/design-access-statement should define the expected routes" name="routes/full-appeal/submit-appeal/design-access-statement should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/submission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:01" time="0.89" tests="1">
    <testcase classname="routes/appellant-submission/submission should define the expected routes" name="routes/appellant-submission/submission should define the expected routes" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="views/lpa/add-remove-users" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:02" time="0.837" tests="3">
    <testcase classname="views/lpa/add-remove-users when a user navigates to the add-remove-users page should render the page title as expected" name="views/lpa/add-remove-users when a user navigates to the add-remove-users page should render the page title as expected" time="0.182">
    </testcase>
    <testcase classname="views/lpa/add-remove-users when a user navigates to the add-remove-users page should render the page heading as expected" name="views/lpa/add-remove-users when a user navigates to the add-remove-users page should render the page heading as expected" time="0.113">
    </testcase>
    <testcase classname="views/lpa/add-remove-users when a user navigates to the add-remove-users page should render the backlink as expected" name="views/lpa/add-remove-users when a user navigates to the add-remove-users page should render the backlink as expected" time="0.079">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/site-access-safety" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:01" time="1.008" tests="6">
    <testcase classname="controllers/appellant-submission/site-access-safety getSiteAccessSafety should call the correct template" name="controllers/appellant-submission/site-access-safety getSiteAccessSafety should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access-safety postSiteAccessSafety should re-render the template with errors if there is any validation error" name="controllers/appellant-submission/site-access-safety postSiteAccessSafety should re-render the template with errors if there is any validation error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access-safety postSiteAccessSafety should re-render the template with errors if there is any api call error" name="controllers/appellant-submission/site-access-safety postSiteAccessSafety should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access-safety postSiteAccessSafety issues with concern - should redirect to the task list" name="controllers/appellant-submission/site-access-safety postSiteAccessSafety issues with concern - should redirect to the task list" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access-safety postSiteAccessSafety no issues with concerns - should redirect to the task list - basic expected payload" name="controllers/appellant-submission/site-access-safety postSiteAccessSafety no issues with concerns - should redirect to the task list - basic expected payload" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access-safety postSiteAccessSafety no issues with concerns - should redirect to the task list - acceptable submission, though safety concerns will be ignored when creating or updating the appeal" name="controllers/appellant-submission/site-access-safety postSiteAccessSafety no issues with concerns - should redirect to the task list - acceptable submission, though safety concerns will be ignored when creating or updating the appeal" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/appeal-householder-decision/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:02" time="0.902" tests="1">
    <testcase classname="routes/appeal-householder-decision/index should define the expected routes" name="routes/appeal-householder-decision/index should define the expected routes" time="0.526">
    </testcase>
  </testsuite>
  <testsuite name="views/lpa/confirm-remove-user" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:02" time="1.056" tests="3">
    <testcase classname="views/lpa/confirm-remove-user when a user navigates to the confirm-remove-user page should render the page title as expected" name="views/lpa/confirm-remove-user when a user navigates to the confirm-remove-user page should render the page title as expected" time="0.381">
    </testcase>
    <testcase classname="views/lpa/confirm-remove-user when a user navigates to the confirm-remove-user page should render the page heading as expected" name="views/lpa/confirm-remove-user when a user navigates to the confirm-remove-user page should render the page heading as expected" time="0.115">
    </testcase>
    <testcase classname="views/lpa/confirm-remove-user when a user navigates to the confirm-remove-user page should render the email address as expected" name="views/lpa/confirm-remove-user when a user navigates to the confirm-remove-user page should render the email address as expected" time="0.082">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/site-ownership" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:02" time="1.155" tests="10">
    <testcase classname="controllers/appellant-submission/site-ownership getSiteOwnership should call the correct template" name="controllers/appellant-submission/site-ownership getSiteOwnership should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership postSiteOwnership should re-render the template with errors if there is any validation error" name="controllers/appellant-submission/site-ownership postSiteOwnership should re-render the template with errors if there is any validation error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership postSiteOwnership should redirect to the next valid url if ownsWholeSite" name="controllers/appellant-submission/site-ownership postSiteOwnership should redirect to the next valid url if ownsWholeSite" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership postSiteOwnership should redirect to /appellant-submission/site-ownership-certb if does not ownsWholeSite" name="controllers/appellant-submission/site-ownership postSiteOwnership should redirect to /appellant-submission/site-ownership-certb if does not ownsWholeSite" time="0">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership should null the contents of haveOtherOwnersBeenTold if site-ownership is set to yes" name="controllers/appellant-submission/site-ownership should null the contents of haveOtherOwnersBeenTold if site-ownership is set to yes" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership should null the contents of haveOtherOwnersBeenTold if site-ownership is set to yes" name="controllers/appellant-submission/site-ownership should null the contents of haveOtherOwnersBeenTold if site-ownership is set to yes" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership should null the contents of haveOtherOwnersBeenTold if site-ownership is set to yes" name="controllers/appellant-submission/site-ownership should null the contents of haveOtherOwnersBeenTold if site-ownership is set to yes" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership should retain the contents of haveOtherOwnersBeenTold if site-ownership is set to no" name="controllers/appellant-submission/site-ownership should retain the contents of haveOtherOwnersBeenTold if site-ownership is set to no" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership should retain the contents of haveOtherOwnersBeenTold if site-ownership is set to no" name="controllers/appellant-submission/site-ownership should retain the contents of haveOtherOwnersBeenTold if site-ownership is set to no" time="0">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership should retain the contents of haveOtherOwnersBeenTold if site-ownership is set to no" name="controllers/appellant-submission/site-ownership should retain the contents of haveOtherOwnersBeenTold if site-ownership is set to no" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/appeal-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:02" time="0.962" tests="6">
    <testcase classname="controllers/appellant-submission/appeal-statement getAppealStatement should call the correct template" name="controllers/appellant-submission/appeal-statement getAppealStatement should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement postAppealStatement should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/appeal-statement postAppealStatement should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement postAppealStatement should redirect back to `/appellant-submission/appeal-statement` if validation passes but `i-confirm` not given" name="controllers/appellant-submission/appeal-statement postAppealStatement should redirect back to `/appellant-submission/appeal-statement` if validation passes but `i-confirm` not given" time="0">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement postAppealStatement should log an error if the api call fails, and remain on the same page" name="controllers/appellant-submission/appeal-statement postAppealStatement should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement postAppealStatement should not require req.files to be valid" name="controllers/appellant-submission/appeal-statement postAppealStatement should not require req.files to be valid" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement postAppealStatement should redirect to `/appellant-submission/supporting-documents` if valid" name="controllers/appellant-submission/appeal-statement postAppealStatement should redirect to `/appellant-submission/supporting-documents` if valid" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/who-are-you" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:02" time="0.857" tests="5">
    <testcase classname="controllers/appellant-submission/who-are-you getWhoAreYou should call the correct template" name="controllers/appellant-submission/who-are-you getWhoAreYou should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/who-are-you postWhoAreYou should redirect with original-appellant set to true" name="controllers/appellant-submission/who-are-you postWhoAreYou should redirect with original-appellant set to true" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/who-are-you postWhoAreYou should redirect with original-appellant set to false" name="controllers/appellant-submission/who-are-you postWhoAreYou should redirect with original-appellant set to false" time="0">
    </testcase>
    <testcase classname="controllers/appellant-submission/who-are-you postWhoAreYou should re-render the template with errors if there is any validator error" name="controllers/appellant-submission/who-are-you postWhoAreYou should re-render the template with errors if there is any validator error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/who-are-you postWhoAreYou should re-render the template with errors if there is any api call error" name="controllers/appellant-submission/who-are-you postWhoAreYou should re-render the template with errors if there is any api call error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/appeal-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:02" time="1.003" tests="1">
    <testcase classname="routes/appellant-submission/appeal-statement should define the expected routes" name="routes/appellant-submission/appeal-statement should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/site-access" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:02" time="1.189" tests="5">
    <testcase classname="controllers/appellant-submission/site-access getSiteAccess should call the correct template" name="controllers/appellant-submission/site-access getSiteAccess should call the correct template" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access postSiteAccess should re-render the template with errors if there is any validation error" name="controllers/appellant-submission/site-access postSiteAccess should re-render the template with errors if there is any validation error" time="0.009">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access postSiteAccess should re-render the template with errors if there is any api call error" name="controllers/appellant-submission/site-access postSiteAccess should re-render the template with errors if there is any api call error" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access postSiteAccess should redirect to `/appellant-submission/site-access-safety` if `site-access` is `yes`" name="controllers/appellant-submission/site-access postSiteAccess should redirect to `/appellant-submission/site-access-safety` if `site-access` is `yes`" time="0">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-access postSiteAccess should redirect to `/appellant-submission/site-access-safety` if `site-access` is `no`" name="controllers/appellant-submission/site-access postSiteAccess should redirect to `/appellant-submission/site-access-safety` if `site-access` is `no`" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/how-decide-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:03" time="0.845" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/how-decide-appeal should define the expected routes" name="routes/full-appeal/submit-appeal/how-decide-appeal should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/submission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:03" time="1.101" tests="7">
    <testcase classname="controllers/appellant-submission/submission getSubmission should call the correct template" name="controllers/appellant-submission/submission getSubmission should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission postSubmission should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/submission postSubmission should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission postSubmission should re-render the template with errors if there is any appeals api call error" name="controllers/appellant-submission/submission postSubmission should re-render the template with errors if there is any appeals api call error" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission postSubmission should re-render the template with errors if there is any pdf api call error" name="controllers/appellant-submission/submission postSubmission should re-render the template with errors if there is any pdf api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission postSubmission should redirect back to /submission if validation passes but `i-agree` not given" name="controllers/appellant-submission/submission postSubmission should redirect back to /submission if validation passes but `i-agree` not given" time="0">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission postSubmission should redirect back to /eligibility/decision-date-passed if validation passes but deadline date has passed" name="controllers/appellant-submission/submission postSubmission should redirect back to /eligibility/decision-date-passed if validation passes but deadline date has passed" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission postSubmission should redirect if valid" name="controllers/appellant-submission/submission postSubmission should redirect if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/site-ownership-certb" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:03" time="1.051" tests="4">
    <testcase classname="controllers/appellant-submission/site-ownership-certb getSiteOwnershipCertB should call the correct template" name="controllers/appellant-submission/site-ownership-certb getSiteOwnershipCertB should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership-certb postSiteOwnershipCertB should re-render the template with errors if there is any validation error" name="controllers/appellant-submission/site-ownership-certb postSiteOwnershipCertB should re-render the template with errors if there is any validation error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership-certb postSiteOwnershipCertB should re-render the template with errors if there is any api call error" name="controllers/appellant-submission/site-ownership-certb postSiteOwnershipCertB should re-render the template with errors if there is any api call error" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-ownership-certb postSiteOwnershipCertB should redirect to the next valid url if valid" name="controllers/appellant-submission/site-ownership-certb postSiteOwnershipCertB should redirect to the next valid url if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/granted-or-refused-permission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:03" time="0.907" tests="1">
    <testcase classname="routes/eligibility/granted-or-refused-permission should define the expected routes" name="routes/eligibility/granted-or-refused-permission should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/decision-date" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:03" time="0.857" tests="1">
    <testcase classname="routes/eligibility/decision-date should define the expected routes" name="routes/eligibility/decision-date should define the expected routes" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/upload-application" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:03" time="0.898" tests="5">
    <testcase classname="controllers/appellant-submission/upload-application getUploadApplication should call the correct template" name="controllers/appellant-submission/upload-application getUploadApplication should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/upload-application postUploadApplication should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/upload-application postUploadApplication should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/upload-application postUploadApplication should log an error if the api call fails, and remain on the same page" name="controllers/appellant-submission/upload-application postUploadApplication should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/upload-application postUploadApplication should not require req.files to be valid" name="controllers/appellant-submission/upload-application postUploadApplication should not require req.files to be valid" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/upload-application postUploadApplication should redirect to `/appellant-submission/supporting-documents` if valid" name="controllers/appellant-submission/upload-application postUploadApplication should redirect to `/appellant-submission/supporting-documents` if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="views/lpa/request-new-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:04" time="1.09" tests="3">
    <testcase classname="views/lpa/request-new-code when a code is requested by an LPA User should render the page title as expected" name="views/lpa/request-new-code when a code is requested by an LPA User should render the page title as expected" time="0.237">
    </testcase>
    <testcase classname="views/lpa/request-new-code when a code is requested by an LPA User should render the page heading as expected" name="views/lpa/request-new-code when a code is requested by an LPA User should render the page heading as expected" time="0.135">
    </testcase>
    <testcase classname="views/lpa/request-new-code when a code is requested by an LPA User should render the errors as expected" name="views/lpa/request-new-code when a code is requested by an LPA User should render the errors as expected" time="0.14">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/site-access" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:04" time="0.987" tests="1">
    <testcase classname="routes/appellant-submission/site-access should define the expected routes" name="routes/appellant-submission/site-access should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/eligibility/decision-date" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:04" time="0.602" tests="10">
    <testcase classname="controllers/eligibility/decision-date getDecisionDate should call the correct template decision date unevaluated" name="controllers/eligibility/decision-date getDecisionDate should call the correct template decision date unevaluated" time="0.003">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date getDecisionDate should call the correct template with existing decision date" name="controllers/eligibility/decision-date getDecisionDate should call the correct template with existing decision date" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date postDecisionDate should display the decision date passed template if the decision date is passed" name="controllers/eligibility/decision-date postDecisionDate should display the decision date passed template if the decision date is passed" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date postDecisionDate should display the decision date template with errors if any field is invalid" name="controllers/eligibility/decision-date postDecisionDate should display the decision date template with errors if any field is invalid" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date postDecisionDate should redirect to planning department as deadline date is not passed" name="controllers/eligibility/decision-date postDecisionDate should redirect to planning department as deadline date is not passed" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date postDecisionDate should redirect to decision drop out as deadline date is passed" name="controllers/eligibility/decision-date postDecisionDate should redirect to decision drop out as deadline date is passed" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date should re-render the template with errors if there is any validation error" name="controllers/eligibility/decision-date should re-render the template with errors if there is any validation error" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date should re-render the template with errors if there is any api call error" name="controllers/eligibility/decision-date should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date getDecisionDatePassed should call the correct template with deadline not valued" name="controllers/eligibility/decision-date getDecisionDatePassed should call the correct template with deadline not valued" time="0">
    </testcase>
    <testcase classname="controllers/eligibility/decision-date getDecisionDatePassed should call the correct template with deadline date being 12 weeks after decision date" name="controllers/eligibility/decision-date getDecisionDatePassed should call the correct template with deadline date being 12 weeks after decision date" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/identifying-the-owners" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:04" time="0.808" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/identifying-the-owners should define the expected routes" name="routes/full-appeal/submit-appeal/identifying-the-owners should define the expected routes" time="0.313">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/supporting-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:04" time="1.023" tests="1">
    <testcase classname="routes/appellant-submission/supporting-documents should define the expected routes" name="routes/appellant-submission/supporting-documents should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/site-ownership-certb" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:04" time="0.864" tests="1">
    <testcase classname="routes/appellant-submission/site-ownership-certb should define the expected routes" name="routes/appellant-submission/site-ownership-certb should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="views/lpa/confirm-add-user" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:04" time="1.147" tests="3">
    <testcase classname="views/lpa/confirm-add-user when a user navigates to the confirm-add-user page should render the page title as expected" name="views/lpa/confirm-add-user when a user navigates to the confirm-add-user page should render the page title as expected" time="0.217">
    </testcase>
    <testcase classname="views/lpa/confirm-add-user when a user navigates to the confirm-add-user page should render the page heading as expected" name="views/lpa/confirm-add-user when a user navigates to the confirm-add-user page should render the page heading as expected" time="0.149">
    </testcase>
    <testcase classname="views/lpa/confirm-add-user when a user navigates to the confirm-add-user page should render the email address as expected" name="views/lpa/confirm-add-user when a user navigates to the confirm-add-user page should render the email address as expected" time="0.152">
    </testcase>
  </testsuite>
  <testsuite name="middleware/skip-middleware-for-paths" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:05" time="0.292" tests="2">
    <testcase classname="middleware/skip-middleware-for-paths does not call function if path contains any of the paths to match" name="middleware/skip-middleware-for-paths does not call function if path contains any of the paths to match" time="0.002">
    </testcase>
    <testcase classname="middleware/skip-middleware-for-paths calls function if path does not contain any of the paths to match" name="middleware/skip-middleware-for-paths calls function if path does not contain any of the paths to match" time="0">
    </testcase>
  </testsuite>
  <testsuite name="views/your-planning-appeal/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:05" time="0.756" tests="2">
    <testcase classname="views/your-planning-appeal/index when an appeal is entered by appellant should render the page as expected with appellant details" name="views/your-planning-appeal/index when an appeal is entered by appellant should render the page as expected with appellant details" time="0.157">
    </testcase>
    <testcase classname="views/your-planning-appeal/index when an appeal is entered by agent should render the page as expected with appellant details" name="views/your-planning-appeal/index when an appeal is entered by agent should render the page as expected with appellant details" time="0.11">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/granted-or-refused" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:05" time="0.82" tests="1">
    <testcase classname="routes/full-appeal/granted-or-refused should define the expected routes" name="routes/full-appeal/granted-or-refused should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:05" time="0.941" tests="1">
    <testcase classname="routes/appellant-submission/application-number should define the expected routes" name="routes/appellant-submission/application-number should define the expected routes" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/site-location" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:05" time="1.037" tests="4">
    <testcase classname="controllers/appellant-submission/site-location getSiteLocation should call the correct template" name="controllers/appellant-submission/site-location getSiteLocation should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-location postSiteLocation should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/site-location postSiteLocation should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-location postSiteLocation should log an error if the api call fails, and remain on the same page" name="controllers/appellant-submission/site-location postSiteLocation should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/site-location postSiteLocation should redirect to `/appellant-submission/site-ownership` if valid" name="controllers/appellant-submission/site-location postSiteLocation should redirect to `/appellant-submission/site-ownership` if valid" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/your-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:05" time="0.996" tests="1">
    <testcase classname="routes/appellant-submission/your-details should define the expected routes" name="routes/appellant-submission/your-details should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/declaration" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:05" time="0.862" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/declaration should define the expected routes" name="routes/full-appeal/submit-appeal/declaration should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/site-ownership" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.836" tests="1">
    <testcase classname="routes/appellant-submission/site-ownership should define the expected routes" name="routes/appellant-submission/site-ownership should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="views/lpa/your-email-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.615" tests="2">
    <testcase classname="views/lpa/your-email-address should render the page title as expected" name="views/lpa/your-email-address should render the page title as expected" time="0.173">
    </testcase>
    <testcase classname="views/lpa/your-email-address should render the page heading as expected" name="views/lpa/your-email-address should render the page heading as expected" time="0.166">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/date-decision-due" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.861" tests="9">
    <testcase classname="controllers/full-appeal/date-decision-due getDateDecisionDue should call the correct template date decision due unevaluated" name="controllers/full-appeal/date-decision-due getDateDecisionDue should call the correct template date decision due unevaluated" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/date-decision-due getDateDecisionDue should call the correct template with existing date decision due" name="controllers/full-appeal/date-decision-due getDateDecisionDue should call the correct template with existing date decision due" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/date-decision-due postDateDecisionDue should display the out of time shutter page template if the date decision due is passed the threshold" name="controllers/full-appeal/date-decision-due postDateDecisionDue should display the out of time shutter page template if the date decision due is passed the threshold" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/date-decision-due postDateDecisionDue should display the date decision due template with errors if any field is invalid" name="controllers/full-appeal/date-decision-due postDateDecisionDue should display the date decision due template with errors if any field is invalid" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/date-decision-due postDateDecisionDue should display the date decision due template with errors if any field is invalid" name="controllers/full-appeal/date-decision-due postDateDecisionDue should display the date decision due template with errors if any field is invalid" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/date-decision-due postDateDecisionDue should display the date decision due template with errors if any field is missing" name="controllers/full-appeal/date-decision-due postDateDecisionDue should display the date decision due template with errors if any field is missing" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/date-decision-due postDateDecisionDue should redirect to enforcement notice as deadline date is not passed" name="controllers/full-appeal/date-decision-due postDateDecisionDue should redirect to enforcement notice as deadline date is not passed" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/date-decision-due postDateDecisionDue should redirect to out of time as deadline date is passed" name="controllers/full-appeal/date-decision-due postDateDecisionDue should redirect to out of time as deadline date is passed" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/date-decision-due postDateDecisionDue should re-render the date decision due template with errors if there is any api call error" name="controllers/full-appeal/date-decision-due postDateDecisionDue should re-render the date decision due template with errors if there is any api call error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/householder-planning/eligibility/date-decision-due-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.902" tests="1">
    <testcase classname="routes/householder-planning/eligibility/date-decision-due-householder should define the expected routes" name="routes/householder-planning/eligibility/date-decision-due-householder should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/prior-approval-existing-home" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.675" tests="1">
    <testcase classname="routes/full-appeal/prior-approval-existing-home should define the expected routes" name="routes/full-appeal/prior-approval-existing-home should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/site-location" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.908" tests="1">
    <testcase classname="routes/appellant-submission/site-location should define the expected routes" name="routes/appellant-submission/site-location should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/site-access-safety" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.778" tests="1">
    <testcase classname="routes/appellant-submission/site-access-safety should define the expected routes" name="routes/appellant-submission/site-access-safety should define the expected routes" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/options" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="0.509" tests="6">
    <testcase classname="validators/common/options should not return an error if a valid value is given" name="validators/common/options should not return an error if a valid value is given" time="0.005">
    </testcase>
    <testcase classname="validators/common/options should not return an error if custom options are given and a valid value is given" name="validators/common/options should not return an error if custom options are given and a valid value is given" time="0.001">
    </testcase>
    <testcase classname="validators/common/options should return an error if an value is not given" name="validators/common/options should return an error if an value is not given" time="0.002">
    </testcase>
    <testcase classname="validators/common/options should return an error if a custom error string is given and an value is not given" name="validators/common/options should return an error if a custom error string is given and an value is not given" time="0.009">
    </testcase>
    <testcase classname="validators/common/options should return an error if a custom error function is given and an value is not given" name="validators/common/options should return an error if a custom error function is given and an value is not given" time="0.002">
    </testcase>
    <testcase classname="validators/common/options should return an error if an invalid value is given" name="validators/common/options should return an error if an invalid value is given" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/supporting-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.929" tests="6">
    <testcase classname="controllers/appellant-submission/supporting-documents getSupportingDocuments should call the correct template" name="controllers/appellant-submission/supporting-documents getSupportingDocuments should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/supporting-documents postSupportingDocuments should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/supporting-documents postSupportingDocuments should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/supporting-documents postSupportingDocuments should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/supporting-documents postSupportingDocuments should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/supporting-documents postSupportingDocuments should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/supporting-documents postSupportingDocuments should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/supporting-documents postSupportingDocuments should log an error if the api call fails, and remain on the same page" name="controllers/appellant-submission/supporting-documents postSupportingDocuments should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/supporting-documents postSupportingDocuments should not require req.files to be valid" name="controllers/appellant-submission/supporting-documents postSupportingDocuments should not require req.files to be valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/your-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:06" time="0.998" tests="5">
    <testcase classname="controllers/appellant-submission/your-details getYourDetails should call the correct template" name="controllers/appellant-submission/your-details getYourDetails should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/your-details postYourDetails should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/your-details postYourDetails should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/your-details postYourDetails should log an error if the api call fails, and remain on the same page" name="controllers/appellant-submission/your-details postYourDetails should log an error if the api call fails, and remain on the same page" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/your-details postYourDetails should redirect to task list if valid and original appellant" name="controllers/appellant-submission/your-details postYourDetails should redirect to task list if valid and original appellant" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/your-details postYourDetails should redirect to the applicant name page if valid and not the original appellant" name="controllers/appellant-submission/your-details postYourDetails should redirect to the applicant name page if valid and not the original appellant" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie/cookie-consent-rejected" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="0.537" tests="6">
    <testcase classname="lib/client-side/cookie/cookie-consent-rejected banner is showing hideConsentRejectedBanner" name="lib/client-side/cookie/cookie-consent-rejected banner is showing hideConsentRejectedBanner" time="0.033">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-rejected banner is showing showCookieConsentRejectedBanner" name="lib/client-side/cookie/cookie-consent-rejected banner is showing showCookieConsentRejectedBanner" time="0.003">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-rejected banner is showing addCookieConsentRejectedListener" name="lib/client-side/cookie/cookie-consent-rejected banner is showing addCookieConsentRejectedListener" time="0.013">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-rejected banner is hidden hideConsentRejectedBanner" name="lib/client-side/cookie/cookie-consent-rejected banner is hidden hideConsentRejectedBanner" time="0.003">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-rejected banner is hidden showCookieConsentRejectedBanner" name="lib/client-side/cookie/cookie-consent-rejected banner is hidden showCookieConsentRejectedBanner" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent-rejected banner is hidden addCookieConsentRejectedListener" name="lib/client-side/cookie/cookie-consent-rejected banner is hidden addCookieConsentRejectedListener" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/before-you-start" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="0.691" tests="1">
    <testcase classname="routes/before-you-start should define the expected routes" name="routes/before-you-start should define the expected routes" time="0.373">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/draft-planning-obligation" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="0.529" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/draft-planning-obligation should define the expected routes" name="routes/full-appeal/submit-appeal/draft-planning-obligation should define the expected routes" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="0.738" tests="1">
    <testcase classname="routes/eligibility/index should define the expected routes" name="routes/eligibility/index should define the expected routes" time="0.519">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/telling-the-landowners" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="0.412" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/telling-the-landowners getTellingTheLandowners should call the correct template" name="controllers/full-appeal/submit-appeal/telling-the-landowners getTellingTheLandowners should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/telling-the-landowners postTellingTheLandowners should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/telling-the-landowners postTellingTheLandowners should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/telling-the-landowners postTellingTheLandowners should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/telling-the-landowners postTellingTheLandowners should re-render the template with errors if an error is thrown" time="0.021">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/telling-the-landowners postTellingTheLandowners should redirect to the correct page user confirms the page" name="controllers/full-appeal/submit-appeal/telling-the-landowners postTellingTheLandowners should redirect to the correct page user confirms the page" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="1.032" tests="1">
    <testcase classname="routes/eligibility/planning-department should define the expected routes" name="routes/eligibility/planning-department should define the expected routes" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/granted-or-refused" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="0.647" tests="11">
    <testcase classname="controllers/full-appeal/granted-or-refused getGrantedOrRefusedPlanningApplication should call the correct template" name="controllers/full-appeal/granted-or-refused getGrantedOrRefusedPlanningApplication should call the correct template" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/decision-date&apos; if passed &apos;permissionStatus&apos; is &apos;granted&apos;" name="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/decision-date&apos; if passed &apos;permissionStatus&apos; is &apos;granted&apos;" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/decision-date&apos; if passed &apos;permissionStatus&apos; is &apos;refused&apos;" name="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/decision-date&apos; if passed &apos;permissionStatus&apos; is &apos;refused&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/date-decision-due&apos; if passed &apos;permissionStatus&apos; is &apos;nodecisionreceived&apos;" name="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/date-decision-due&apos; if passed &apos;permissionStatus&apos; is &apos;nodecisionreceived&apos;" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/granted-or-refused&apos; if passed &apos;permissionStatus&apos; is &apos;default&apos;" name="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/granted-or-refused&apos; if passed &apos;permissionStatus&apos; is &apos;default&apos;" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/granted-or-refused&apos; if &apos;permissionStatus&apos; is not passed" name="controllers/full-appeal/granted-or-refused forwardPage should return &apos;/full-appeal/granted-or-refused&apos; if &apos;permissionStatus&apos; is not passed" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning should re-render the template with errors if there is any validation error" name="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning should re-render the template with errors if there is any validation error" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning should re-render the template with errors if there is any api call error" name="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning &apos;should redirect to &apos;/full-appeal/decision-date&apos; if &apos;applicationDecision&apos; is &apos;refused&apos;" name="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning &apos;should redirect to &apos;/full-appeal/decision-date&apos; if &apos;applicationDecision&apos; is &apos;refused&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning should redirect to &apos;/full-appeal/decision-date&apos; if &apos;applicationDecision&apos; is &apos;granted&apos;" name="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning should redirect to &apos;/full-appeal/decision-date&apos; if &apos;applicationDecision&apos; is &apos;granted&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning should redirect to &apos;/full-appeal/date-decision-due&apos; if &apos;applicationDecision&apos; is &apos;nodecisionreceived&apos;" name="controllers/full-appeal/granted-or-refused postGrantedOrRefusedPlanning should redirect to &apos;/full-appeal/date-decision-due&apos; if &apos;applicationDecision&apos; is &apos;nodecisionreceived&apos;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="services/pdf.service" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:07" time="0.642" tests="10">
    <testcase classname="services/pdf.service getHtmlAppeal should throw if fetch fails" name="services/pdf.service getHtmlAppeal should throw if fetch fails" time="0.026">
    </testcase>
    <testcase classname="services/pdf.service getHtmlAppeal should throw if the remote API response is not ok" name="services/pdf.service getHtmlAppeal should throw if the remote API response is not ok" time="0.008">
    </testcase>
    <testcase classname="services/pdf.service getHtmlAppeal should throw if the response code is anything other than a 202" name="services/pdf.service getHtmlAppeal should throw if the response code is anything other than a 202" time="0.002">
    </testcase>
    <testcase classname="services/pdf.service getHtmlAppeal should return the expected response if the fetch status is 200 for appellant submission" name="services/pdf.service getHtmlAppeal should return the expected response if the fetch status is 200 for appellant submission" time="0.002">
    </testcase>
    <testcase classname="services/pdf.service getHtmlAppeal should return the expected response if the fetch status is 200 for full appeal" name="services/pdf.service getHtmlAppeal should return the expected response if the fetch status is 200 for full appeal" time="0.001">
    </testcase>
    <testcase classname="services/pdf.service storePdfAppeal should throw if the get html appeal API response is not ok" name="services/pdf.service storePdfAppeal should throw if the get html appeal API response is not ok" time="0.001">
    </testcase>
    <testcase classname="services/pdf.service storePdfAppeal should throw if the create document API response is not ok" name="services/pdf.service storePdfAppeal should throw if the create document API response is not ok" time="0.001">
    </testcase>
    <testcase classname="services/pdf.service storePdfAppeal should return the expected response if no error were triggered fetch status is 200" name="services/pdf.service storePdfAppeal should return the expected response if no error were triggered fetch status is 200" time="0.001">
    </testcase>
    <testcase classname="services/pdf.service storeTextAsDocument should throw if the create document API response is not ok" name="services/pdf.service storeTextAsDocument should throw if the create document API response is not ok" time="0.01">
    </testcase>
    <testcase classname="services/pdf.service storeTextAsDocument should return the expected response if no error were triggered fetch status is 200" name="services/pdf.service storeTextAsDocument should return the expected response if no error were triggered fetch status is 200" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/design-access-statement-submitted" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.64" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/design-access-statement-submitted should define the expected routes" name="routes/full-appeal/submit-appeal/design-access-statement-submitted should define the expected routes" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="routes/householder-planning/eligibility/conditions-householder-permission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.634" tests="1">
    <testcase classname="routes/householder-planning/eligibility/conditions-householder-permission should define the expected routes" name="routes/householder-planning/eligibility/conditions-householder-permission should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/before-you-start/can-use-service" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.654" tests="9">
    <testcase classname="controllers/before-you-start/can-use-service Testing controller for HAS Appeals Check Your Answers page Test getCanUseService method calls the HAS Check Your Answers page - HAS conditions" name="controllers/before-you-start/can-use-service Testing controller for HAS Appeals Check Your Answers page Test getCanUseService method calls the HAS Check Your Answers page - HAS conditions" time="0.005">
    </testcase>
    <testcase classname="controllers/before-you-start/can-use-service Testing controller for HAS Appeals Check Your Answers page Test getCanUseService method calls the HP Check Your Answers page when typeOfPlanningApplication is householder-planning - date of decision" name="controllers/before-you-start/can-use-service Testing controller for HAS Appeals Check Your Answers page Test getCanUseService method calls the HP Check Your Answers page when typeOfPlanningApplication is householder-planning - date of decision" time="0.001">
    </testcase>
    <testcase classname="controllers/before-you-start/can-use-service Testing controller for HAS Appeals Check Your Answers page Test getCanUseService method calls the HP Check Your Answers page when typeOfPlanningApplication is householder-planning - date decision due" name="controllers/before-you-start/can-use-service Testing controller for HAS Appeals Check Your Answers page Test getCanUseService method calls the HP Check Your Answers page when typeOfPlanningApplication is householder-planning - date decision due" time="0">
    </testcase>
    <testcase classname="controllers/before-you-start/can-use-service Testing Controller for Prior Approval Test getCanUseService method calls the Full Appeal Check Your Answers page - no prior approval" name="controllers/before-you-start/can-use-service Testing Controller for Prior Approval Test getCanUseService method calls the Full Appeal Check Your Answers page - no prior approval" time="0">
    </testcase>
    <testcase classname="controllers/before-you-start/can-use-service Testing Controller for Prior Approval Test getCanUseService method calls the HAS Check Your Answers page - prior approval" name="controllers/before-you-start/can-use-service Testing Controller for Prior Approval Test getCanUseService method calls the HAS Check Your Answers page - prior approval" time="0">
    </testcase>
    <testcase classname="controllers/before-you-start/can-use-service Testing Controller for Removal Or Variation Of Conditions Test getCanUseService method calls the Full Appeal Check Your Answers page - no HAS conditions" name="controllers/before-you-start/can-use-service Testing Controller for Removal Or Variation Of Conditions Test getCanUseService method calls the Full Appeal Check Your Answers page - no HAS conditions" time="0.001">
    </testcase>
    <testcase classname="controllers/before-you-start/can-use-service Testing controller for Full Planning Appeals Check Your Answers page Test getCanUseService method calls the Full Appeal Check Your Answers page when typeOfPlanningApplication is full-appeal" name="controllers/before-you-start/can-use-service Testing controller for Full Planning Appeals Check Your Answers page Test getCanUseService method calls the Full Appeal Check Your Answers page when typeOfPlanningApplication is full-appeal" time="0.018">
    </testcase>
    <testcase classname="controllers/before-you-start/can-use-service Testing controller for Full Planning Appeals Check Your Answers page Test getCanUseService method calls the Full Appeal Check Your Answers page when typeOfPlanningApplication is full-appeal - date of decision" name="controllers/before-you-start/can-use-service Testing controller for Full Planning Appeals Check Your Answers page Test getCanUseService method calls the Full Appeal Check Your Answers page when typeOfPlanningApplication is full-appeal - date of decision" time="0.001">
    </testcase>
    <testcase classname="controllers/before-you-start/can-use-service Testing controller for Full Planning Appeals Check Your Answers page Test getCanUseService method calls the Full Appeal Check Your Answers page when typeOfPlanningApplication is full-appeal - date decision due" name="controllers/before-you-start/can-use-service Testing controller for Full Planning Appeals Check Your Answers page Test getCanUseService method calls the Full Appeal Check Your Answers page when typeOfPlanningApplication is full-appeal - date decision due" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/before-you-start/can-use-service" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.711" tests="1">
    <testcase classname="routes/before-you-start/can-use-service should define the expected routes" name="routes/before-you-start/can-use-service should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="controllers/your-planning-appeal/your-appeal-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.356" tests="1">
    <testcase classname="controllers/your-planning-appeal/your-appeal-details getYourAppealDetails should call the correct template" name="controllers/your-planning-appeal/your-appeal-details getYourAppealDetails should call the correct template" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie/cookie-consent" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.662" tests="10">
    <testcase classname="lib/client-side/cookie/cookie-consent setCookies" name="lib/client-side/cookie/cookie-consent setCookies" time="0.006">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent hideConsentBanner" name="lib/client-side/cookie/cookie-consent hideConsentBanner" time="0.004">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent getConsentButtons" name="lib/client-side/cookie/cookie-consent getConsentButtons" time="0.004">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent displayConsentButtons" name="lib/client-side/cookie/cookie-consent displayConsentButtons" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent addAcceptCookieConsentListener" name="lib/client-side/cookie/cookie-consent addAcceptCookieConsentListener" time="0.009">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent addRejectCookieConsentListener" name="lib/client-side/cookie/cookie-consent addRejectCookieConsentListener" time="0.004">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent cookieConsentHandler return early if required element is undefined" name="lib/client-side/cookie/cookie-consent cookieConsentHandler return early if required element is undefined" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent cookieConsentHandler return early if required element is undefined" name="lib/client-side/cookie/cookie-consent cookieConsentHandler return early if required element is undefined" time="0.008">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent cookieConsentHandler cookie policy has already been set" name="lib/client-side/cookie/cookie-consent cookieConsentHandler cookie policy has already been set" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-consent cookieConsentHandler cookie policy has not yet been set" name="lib/client-side/cookie/cookie-consent cookieConsentHandler cookie policy has not yet been set" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/submit-appeal/application-saved" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.627" tests="1">
    <testcase classname="routes/submit-appeal/application-saved should define the expected routes" name="routes/submit-appeal/application-saved should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/letter-confirming-application " errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.502" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/letter-confirming-application  getLetterConfirmingApplication should call the correct template" name="controllers/full-appeal/submit-appeal/letter-confirming-application  getLetterConfirmingApplication should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/letter-confirming-application  postLetterConfirmingApplication should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/letter-confirming-application  postLetterConfirmingApplication should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/letter-confirming-application  postLetterConfirmingApplication should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/letter-confirming-application  postLetterConfirmingApplication should re-render the template with errors if an error is thrown" time="0.007">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/letter-confirming-application  postLetterConfirmingApplication should redirect to the correct page if valid and a file is being uploaded" name="controllers/full-appeal/submit-appeal/letter-confirming-application  postLetterConfirmingApplication should redirect to the correct page if valid and a file is being uploaded" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/letter-confirming-application  postLetterConfirmingApplication should redirect to the correct page if valid and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/letter-confirming-application  postLetterConfirmingApplication should redirect to the correct page if valid and a file is not being uploaded" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="lib/appeal-site-address-to-array" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.235" tests="8">
    <testcase classname="lib/appeal-site-address-to-array should format the address as expected - full address" name="lib/appeal-site-address-to-array should format the address as expected - full address" time="0.004">
    </testcase>
    <testcase classname="lib/appeal-site-address-to-array should format the address as expected - minimum viable address" name="lib/appeal-site-address-to-array should format the address as expected - minimum viable address" time="0.001">
    </testcase>
    <testcase classname="lib/appeal-site-address-to-array should format the address as expected - address line 2 is missing" name="lib/appeal-site-address-to-array should format the address as expected - address line 2 is missing" time="0">
    </testcase>
    <testcase classname="lib/appeal-site-address-to-array should format the address as expected - town / city is missing is missing" name="lib/appeal-site-address-to-array should format the address as expected - town / city is missing is missing" time="0">
    </testcase>
    <testcase classname="lib/appeal-site-address-to-array should format the address as expected - undefined returns empty array" name="lib/appeal-site-address-to-array should format the address as expected - undefined returns empty array" time="0">
    </testcase>
    <testcase classname="lib/appeal-site-address-to-array should format the address as expected - empty object returns empty array" name="lib/appeal-site-address-to-array should format the address as expected - empty object returns empty array" time="0">
    </testcase>
    <testcase classname="lib/appeal-site-address-to-array should format the address as expected - unset appeal.appealSiteSection returns empty array" name="lib/appeal-site-address-to-array should format the address as expected - unset appeal.appealSiteSection returns empty array" time="0">
    </testcase>
    <testcase classname="lib/appeal-site-address-to-array should format the address as expected - unset appeal.appealSiteSection.siteAddress returns empty array" name="lib/appeal-site-address-to-array should format the address as expected - unset appeal.appealSiteSection.siteAddress returns empty array" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/plans-drawings-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.761" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/plans-drawings-documents should define the expected routes" name="routes/full-appeal/submit-appeal/plans-drawings-documents should define the expected routes" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/submission-information" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.347" tests="5">
    <testcase classname="controllers/appellant-submission/submission-information getSubmissionInformation should return 400 if appeal id not provided" name="controllers/appellant-submission/submission-information getSubmissionInformation should return 400 if appeal id not provided" time="0.004">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission-information getSubmissionInformation should return 404 if appeal not found" name="controllers/appellant-submission/submission-information getSubmissionInformation should return 404 if appeal not found" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission-information getSubmissionInformation should return 400 if the LPD is not found for the given LPA" name="controllers/appellant-submission/submission-information getSubmissionInformation should return 400 if the LPD is not found for the given LPA" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission-information getSubmissionInformation should define default value if appeal submission date is not defined" name="controllers/appellant-submission/submission-information getSubmissionInformation should define default value if appeal submission date is not defined" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/submission-information getSubmissionInformation should call the correct template with the expected data on the happy path" name="controllers/appellant-submission/submission-information getSubmissionInformation should call the correct template with the expected data on the happy path" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/advertising-your-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:08" time="0.468" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/advertising-your-appeal should define the expected routes" name="routes/full-appeal/submit-appeal/advertising-your-appeal should define the expected routes" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="lib/flash-message" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.254" tests="2">
    <testcase classname="lib/flash-message should add one message to an empty array" name="lib/flash-message should add one message to an empty array" time="0.002">
    </testcase>
    <testcase classname="lib/flash-message should add messages to an existing array" name="lib/flash-message should add messages to an existing array" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/know-the-owners" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.571" tests="7">
    <testcase classname="controllers/full-appeal/submit-appeal/know-the-owners getKnowTheOwners should call the correct template" name="controllers/full-appeal/submit-appeal/know-the-owners getKnowTheOwners should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should re-render the template with errors if submission validation fails" time="0.022">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should re-render the template with errors if an error is thrown" time="0.018">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should redirect to the correct page if `yes` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should redirect to the correct page if `some` has been selected" name="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should redirect to the correct page if `some` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should redirect to the correct page if `no` has been selected" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should assign null to appealSiteSection.identifyingTheOwners if appealSiteSection.knowsTheOwners and body[&apos;know-the-owners&apos;] are different" name="controllers/full-appeal/submit-appeal/know-the-owners postKnowTheOwners should assign null to appealSiteSection.identifyingTheOwners if appealSiteSection.knowsTheOwners and body[&apos;know-the-owners&apos;] are different" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/how-decide-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.564" tests="6">
    <testcase classname="controllers/full-appeal/submit-appeal/how-decide-appeal getHowDecideAppeal should call the correct template" name="controllers/full-appeal/submit-appeal/how-decide-appeal getHowDecideAppeal should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should re-render the template with errors if an error is thrown" time="0.029">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should redirect to the correct page if `Written Representation` has been selected" name="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should redirect to the correct page if `Written Representation` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should redirect to the correct page if `Hearing` has been selected" name="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should redirect to the correct page if `Hearing` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should redirect to the correct page if `Inquiry` has been selected" name="controllers/full-appeal/submit-appeal/how-decide-appeal postHowDecideAppeal should redirect to the correct page if `Inquiry` has been selected" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/new-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.65" tests="14">
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents getNewSupportingDocuments should call the correct template - no planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents getNewSupportingDocuments should call the correct template - no planning obligation submitted" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents getNewSupportingDocuments should call the correct template - planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents getNewSupportingDocuments should call the correct template - planning obligation submitted" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents getNewSupportingDocuments should call the correct template - draft planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents getNewSupportingDocuments should call the correct template - draft planning obligation submitted" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents getNewSupportingDocuments should call the correct template - not started planning obligation yet" name="controllers/full-appeal/submit-appeal/new-documents getNewSupportingDocuments should call the correct template - not started planning obligation yet" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if submission validation fails &amp; no planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if submission validation fails &amp; no planning obligation submitted" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if submission validation fails &amp; planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if submission validation fails &amp; planning obligation submitted" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if submission validation fails &amp; draft planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if submission validation fails &amp; draft planning obligation submitted" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if submission validation fails &amp; planning obligation not yet started" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if submission validation fails &amp; planning obligation not yet started" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if an error is thrown and no planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if an error is thrown and no planning obligation submitted" time="0.018">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if an error is thrown and planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if an error is thrown and planning obligation submitted" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if an error is thrown and draft planning obligation submitted" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if an error is thrown and draft planning obligation submitted" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if an error is thrown and no planning obligation not yet started" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should re-render the template with errors if an error is thrown and no planning obligation not yet started" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should redirect to the correct page if `yes` has been selected" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/new-documents postNewSupportingDocuments should redirect to the correct page if `no` has been selected" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/appeal-householder-decision/cannot-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.627" tests="1">
    <testcase classname="routes/appeal-householder-decision/cannot-appeal should define the expected routes" name="routes/appeal-householder-decision/cannot-appeal should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="views/macros/cookie-banner" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.498" tests="4">
    <testcase classname="views/macros/cookie-banner should have sensible default attributes" name="views/macros/cookie-banner should have sensible default attributes" time="0.078">
    </testcase>
    <testcase classname="views/macros/cookie-banner should allow setting a custom serviceName" name="views/macros/cookie-banner should allow setting a custom serviceName" time="0.099">
    </testcase>
    <testcase classname="views/macros/cookie-banner should allow setting a custom cookiePagePath" name="views/macros/cookie-banner should allow setting a custom cookiePagePath" time="0.037">
    </testcase>
    <testcase classname="views/macros/cookie-banner should allow setting all custom attributes" name="views/macros/cookie-banner should allow setting all custom attributes" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/any-of-following" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.841" tests="1">
    <testcase classname="routes/full-appeal/any-of-following should define the expected routes" name="routes/full-appeal/any-of-following should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/letter-confirming-application" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.803" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/letter-confirming-application should define the expected routes" name="routes/full-appeal/submit-appeal/letter-confirming-application should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/contact-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.466" tests="1">
    <testcase classname="routes/full-appeal/contact-details should define the expected routes" name="routes/full-appeal/contact-details should define the expected routes" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="lib/multi-file-upload-helpers/getValidFiles" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.295" tests="2">
    <testcase classname="lib/multi-file-upload-helpers/getValidFiles returns array of files with invalid files removed" name="lib/multi-file-upload-helpers/getValidFiles returns array of files with invalid files removed" time="0.002">
    </testcase>
    <testcase classname="lib/multi-file-upload-helpers/removeFiles returns array of files with specified files removed " name="lib/multi-file-upload-helpers/removeFiles returns array of files with specified files removed " time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/applicant-name" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.588" tests="1">
    <testcase classname="routes/appellant-submission/applicant-name should define the expected routes" name="routes/appellant-submission/applicant-name should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/new-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.516" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/new-documents should define the expected routes" name="routes/full-appeal/submit-appeal/new-documents should define the expected routes" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="routes/before-you-start/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.587" tests="1">
    <testcase classname="routes/before-you-start/index should define the expected routes" name="routes/before-you-start/index should define the expected routes" time="0.354">
    </testcase>
  </testsuite>
  <testsuite name="views/lpa/enter-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:09" time="0.828" tests="3">
    <testcase classname="views/lpa/enter-code when a code is entered by an LPA User should render the page title as expected" name="views/lpa/enter-code when a code is entered by an LPA User should render the page title as expected" time="0.149">
    </testcase>
    <testcase classname="views/lpa/enter-code when a code is entered by an LPA User should render the page heading as expected" name="views/lpa/enter-code when a code is entered by an LPA User should render the page heading as expected" time="0.169">
    </testcase>
    <testcase classname="views/lpa/enter-code when a code is entered by an LPA User should render the code not received link as expected" name="views/lpa/enter-code when a code is entered by an LPA User should render the code not received link as expected" time="0.105">
    </testcase>
  </testsuite>
  <testsuite name="validators/full-appeal/granted-or-refused" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.659" tests="5">
    <testcase classname="validators/full-appeal/granted-or-refused rules is configured with the expected rules" name="validators/full-appeal/granted-or-refused rules is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/full-appeal/granted-or-refused ruleGrantedOrRefused is configured with the expected rules" name="validators/full-appeal/granted-or-refused ruleGrantedOrRefused is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/granted-or-refused validator should return the expected validation outcome - No selection made on the granted or refused application question" name="validators/full-appeal/granted-or-refused validator should return the expected validation outcome - No selection made on the granted or refused application question" time="0.004">
    </testcase>
    <testcase classname="validators/full-appeal/granted-or-refused validator should return the expected validation outcome - User selected `refused` on the full appeal application question" name="validators/full-appeal/granted-or-refused validator should return the expected validation outcome - User selected `refused` on the full appeal application question" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/granted-or-refused validApplicationDecisionOptions should define the expected valid full appeal application status options" name="validators/full-appeal/granted-or-refused validApplicationDecisionOptions should define the expected valid full appeal application status options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/document" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.302" tests="1">
    <testcase classname="routes/document should define the expected routes" name="routes/document should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/plans-drawings" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.695" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/plans-drawings should define the expected routes" name="routes/full-appeal/submit-appeal/plans-drawings should define the expected routes" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="validators/full-planning/date-decision-due" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.461" tests="3">
    <testcase classname="validators/full-planning/date-decision-due rules has a rule for days in the future" name="validators/full-planning/date-decision-due rules has a rule for days in the future" time="0.007">
    </testcase>
    <testcase classname="validators/full-planning/date-decision-due validator should return the expected validation outcome - invalid (in future) - fail" name="validators/full-planning/date-decision-due validator should return the expected validation outcome - invalid (in future) - fail" time="0.004">
    </testcase>
    <testcase classname="validators/full-planning/date-decision-due validator should return the expected validation outcome - valid date - pass" name="validators/full-planning/date-decision-due validator should return the expected validation outcome - valid date - pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/submit-appeal/enter-appeal-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.865" tests="1">
    <testcase classname="routes/submit-appeal/enter-appeal-details should define the expected routes" name="routes/submit-appeal/enter-appeal-details should define the expected routes" time="0.334">
    </testcase>
  </testsuite>
  <testsuite name="validators/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.626" tests="4">
    <testcase classname="validators/planning-department rules is configured with the expected rules" name="validators/planning-department rules is configured with the expected rules" time="0.016">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - no error" name="validators/planning-department validator should return the expected validation outcome - no error" time="0.013">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - error when given no value" name="validators/planning-department validator should return the expected validation outcome - error when given no value" time="0.003">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - error when given an invalid value" name="validators/planning-department validator should return the expected validation outcome - error when given an invalid value" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/decision-date" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.834" tests="6">
    <testcase classname="controllers/full-appeal/decision-date getDecisionDate should call the correct template with no decision date given" name="controllers/full-appeal/decision-date getDecisionDate should call the correct template with no decision date given" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/decision-date getDecisionDate should call the correct template with a decision date given" name="controllers/full-appeal/decision-date getDecisionDate should call the correct template with a decision date given" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/decision-date postDecisionDate should save the appeal and redirect to enforcement-notice if date is within six months" name="controllers/full-appeal/decision-date postDecisionDate should save the appeal and redirect to enforcement-notice if date is within six months" time="0.008">
    </testcase>
    <testcase classname="controllers/full-appeal/decision-date postDecisionDate should not save the appeal and redirect to shutter page if date is not within six months" name="controllers/full-appeal/decision-date postDecisionDate should not save the appeal and redirect to shutter page if date is not within six months" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/decision-date postDecisionDate should display the decision date template with errors if any field is invalid" name="controllers/full-appeal/decision-date postDecisionDate should display the decision date template with errors if any field is invalid" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/decision-date postDecisionDate should re-render the template with errors if there is any api call error" name="controllers/full-appeal/decision-date postDecisionDate should re-render the template with errors if there is any api call error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/submit-appeal/application-saved" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.573" tests="1">
    <testcase classname="controllers/submit-appeal/application-saved getApplicationSaved method calls the correct template" name="controllers/submit-appeal/application-saved getApplicationSaved method calls the correct template" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="validators/your-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.346" tests="7">
    <testcase classname="validators/your-details rules has a rule for the appellant&apos;s name" name="validators/your-details rules has a rule for the appellant&apos;s name" time="0.005">
    </testcase>
    <testcase classname="validators/your-details rules should have an array of rules" name="validators/your-details rules should have an array of rules" time="0">
    </testcase>
    <testcase classname="validators/your-details validator should return the expected validation outcome - undefined - empty" name="validators/your-details validator should return the expected validation outcome - undefined - empty" time="0.004">
    </testcase>
    <testcase classname="validators/your-details validator should return the expected validation outcome - invalid values 1 - fail" name="validators/your-details validator should return the expected validation outcome - invalid values 1 - fail" time="0.002">
    </testcase>
    <testcase classname="validators/your-details validator should return the expected validation outcome - invalid values 2 - fail - name too short and invalid email" name="validators/your-details validator should return the expected validation outcome - invalid values 2 - fail - name too short and invalid email" time="0.011">
    </testcase>
    <testcase classname="validators/your-details validator should return the expected validation outcome - invalid values 2 - fail - name too long and invalid email" name="validators/your-details validator should return the expected validation outcome - invalid values 2 - fail - name too long and invalid email" time="0.002">
    </testcase>
    <testcase classname="validators/your-details validator should return the expected validation outcome - valid values - pass" name="validators/your-details validator should return the expected validation outcome - valid values - pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/planning-obligation-status" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.642" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/planning-obligation-status should define the expected routes" name="routes/full-appeal/submit-appeal/planning-obligation-status should define the expected routes" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/know-the-owners" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:10" time="0.722" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/know-the-owners should define the expected routes" name="routes/full-appeal/submit-appeal/know-the-owners should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="middleware/check-decision-date-deadline" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.785" tests="10">
    <testcase classname="middleware/check-decision-date-deadline should redirect the user to the you cannot appeal page if the decision date is outside the expiry period for full appeal and the decision date page is not being rendered" name="middleware/check-decision-date-deadline should redirect the user to the you cannot appeal page if the decision date is outside the expiry period for full appeal and the decision date page is not being rendered" time="0.003">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should redirect the user to the you cannot appeal page if the decision date is outside the expiry period for Householder and the decision date page is not being rendered" name="middleware/check-decision-date-deadline should redirect the user to the you cannot appeal page if the decision date is outside the expiry period for Householder and the decision date page is not being rendered" time="0.001">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should continue if the decision date is inside the expiry period for Full-appeal and the decision date page is being rendered" name="middleware/check-decision-date-deadline should continue if the decision date is inside the expiry period for Full-appeal and the decision date page is being rendered" time="0.001">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should continue if the decision date is inside the expiry period for Householder and the decision date page is being rendered" name="middleware/check-decision-date-deadline should continue if the decision date is inside the expiry period for Householder and the decision date page is being rendered" time="0.001">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should redirect the user to the decision date passed page if the decision date is outside the expiry period and the decision date page is not being rendered" name="middleware/check-decision-date-deadline should redirect the user to the decision date passed page if the decision date is outside the expiry period and the decision date page is not being rendered" time="0">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should continue if the decision date is outside the expiry period and the decision date page is being rendered" name="middleware/check-decision-date-deadline should continue if the decision date is outside the expiry period and the decision date page is being rendered" time="0.001">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should continue if there is no appeal data" name="middleware/check-decision-date-deadline should continue if there is no appeal data" time="0">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should continue if the appeal data is null" name="middleware/check-decision-date-deadline should continue if the appeal data is null" time="0.001">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should continue if the decision date is null" name="middleware/check-decision-date-deadline should continue if the decision date is null" time="0">
    </testcase>
    <testcase classname="middleware/check-decision-date-deadline should continue if the decision date is inside the expiry period" name="middleware/check-decision-date-deadline should continue if the decision date is inside the expiry period" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/cannot-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.743" tests="1">
    <testcase classname="controllers/full-appeal/submit-appeal/cannot-appeal getCannotAppeal should call the correct template" name="controllers/full-appeal/submit-appeal/cannot-appeal getCannotAppeal should call the correct template" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/design-access-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.636" tests="9">
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement getDesignAccessStatement should call the correct template" name="controllers/full-appeal/submit-appeal/design-access-statement getDesignAccessStatement should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should re-render the template with errors if an error is thrown" time="0.012">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `granted` and a file is being uploaded" name="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `granted` and a file is being uploaded" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `refused` and a file is being uploaded" name="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `refused` and a file is being uploaded" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `no decision received` and a file is being uploaded" name="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `no decision received` and a file is being uploaded" time="0.013">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `granted` and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `granted` and a file is not being uploaded" time="0.023">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `refused` and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `refused` and a file is not being uploaded" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `no decision received` and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/design-access-statement postDesignAccessStatement should redirect to the correct page if valid and the application decision is `no decision received` and a file is not being uploaded" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="controllers/householder-planning/date-decision-due-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.563" tests="6">
    <testcase classname="controllers/householder-planning/date-decision-due-householder getDateDecisionDueHouseholder should call the correct template with no decision date given" name="controllers/householder-planning/date-decision-due-householder getDateDecisionDueHouseholder should call the correct template with no decision date given" time="0.003">
    </testcase>
    <testcase classname="controllers/householder-planning/date-decision-due-householder getDateDecisionDueHouseholder should call the correct template with a decision date given" name="controllers/householder-planning/date-decision-due-householder getDateDecisionDueHouseholder should call the correct template with a decision date given" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/date-decision-due-householder postDateDecisionDueHouseholder should save the appeal and redirect to enforcement-notice if date is within six months" name="controllers/householder-planning/date-decision-due-householder postDateDecisionDueHouseholder should save the appeal and redirect to enforcement-notice if date is within six months" time="0.002">
    </testcase>
    <testcase classname="controllers/householder-planning/date-decision-due-householder postDateDecisionDueHouseholder should not save the appeal and redirect to shutter page if date is not within six months" name="controllers/householder-planning/date-decision-due-householder postDateDecisionDueHouseholder should not save the appeal and redirect to shutter page if date is not within six months" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/date-decision-due-householder postDateDecisionDueHouseholder should display the decision date template with errors if any field is invalid" name="controllers/householder-planning/date-decision-due-householder postDateDecisionDueHouseholder should display the decision date template with errors if any field is invalid" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/date-decision-due-householder postDateDecisionDueHouseholder should re-render the template with errors if there is any api call error" name="controllers/householder-planning/date-decision-due-householder postDateDecisionDueHouseholder should re-render the template with errors if there is any api call error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/costs" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.41" tests="1">
    <testcase classname="routes/eligibility/costs should define the expected routes" name="routes/eligibility/costs should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="views/macros/multifile-upload-to-list" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.523" tests="9">
    <testcase classname="views/macros/multifile-upload-to-list No files uploaded nothing provided" name="views/macros/multifile-upload-to-list No files uploaded nothing provided" time="0.027">
    </testcase>
    <testcase classname="views/macros/multifile-upload-to-list No files uploaded when value has a length of less than one and attributes is empty" name="views/macros/multifile-upload-to-list No files uploaded when value has a length of less than one and attributes is empty" time="0.006">
    </testcase>
    <testcase classname="views/macros/multifile-upload-to-list No files uploaded when value is not provided and attributes has data-cy tag" name="views/macros/multifile-upload-to-list No files uploaded when value is not provided and attributes has data-cy tag" time="0.005">
    </testcase>
    <testcase classname="views/macros/multifile-upload-to-list single file uploaded no attributes given" name="views/macros/multifile-upload-to-list single file uploaded no attributes given" time="0.007">
    </testcase>
    <testcase classname="views/macros/multifile-upload-to-list single file uploaded attributes given, but no data-cy tag" name="views/macros/multifile-upload-to-list single file uploaded attributes given, but no data-cy tag" time="0.011">
    </testcase>
    <testcase classname="views/macros/multifile-upload-to-list single file uploaded attributes given with data-cy tag" name="views/macros/multifile-upload-to-list single file uploaded attributes given with data-cy tag" time="0.008">
    </testcase>
    <testcase classname="views/macros/multifile-upload-to-list multiple files uploaded no attributes given" name="views/macros/multifile-upload-to-list multiple files uploaded no attributes given" time="0.004">
    </testcase>
    <testcase classname="views/macros/multifile-upload-to-list multiple files uploaded attributes given, but no data-cy tag" name="views/macros/multifile-upload-to-list multiple files uploaded attributes given, but no data-cy tag" time="0.039">
    </testcase>
    <testcase classname="views/macros/multifile-upload-to-list multiple files uploaded attributes given with data-cy tag" name="views/macros/multifile-upload-to-list multiple files uploaded attributes given with data-cy tag" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/enforcement-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:11" time="0.419" tests="1">
    <testcase classname="routes/full-appeal/enforcement-notice should define the expected routes" name="routes/full-appeal/enforcement-notice should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/use-existing-service-enforcement-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.246" tests="1">
    <testcase classname="controllers/full-appeal/use-existing-service-enforcement-notice Test the getUseExistingServiceEnforcementNotice method calls the correct template" name="controllers/full-appeal/use-existing-service-enforcement-notice Test the getUseExistingServiceEnforcementNotice method calls the correct template" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/your-planning-appeal/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.325" tests="3">
    <testcase classname="controllers/your-planning-appeal/index getYourPlanningAppeal should render the correct view with the appeal data" name="controllers/your-planning-appeal/index getYourPlanningAppeal should render the correct view with the appeal data" time="0.002">
    </testcase>
    <testcase classname="controllers/your-planning-appeal/index getYourPlanningAppeal should call next() when appealLPD data is not in session" name="controllers/your-planning-appeal/index getYourPlanningAppeal should call next() when appealLPD data is not in session" time="0.001">
    </testcase>
    <testcase classname="controllers/your-planning-appeal/index getYourPlanningAppeal should call next() when appeal data is not in session" name="controllers/your-planning-appeal/index getYourPlanningAppeal should call next() when appeal data is not in session" time="0">
    </testcase>
  </testsuite>
  <testsuite name="middleware/set-back-link-from-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.32" tests="3">
    <testcase classname="middleware/set-back-link-from-appeal Call next() early if req.session.navigationHistory is not set" name="middleware/set-back-link-from-appeal Call next() early if req.session.navigationHistory is not set" time="0.003">
    </testcase>
    <testcase classname="middleware/set-back-link-from-appeal Call next() early if req.session.appeal.id is not set" name="middleware/set-back-link-from-appeal Call next() early if req.session.appeal.id is not set" time="0.001">
    </testcase>
    <testcase classname="middleware/set-back-link-from-appeal Add back link to navigationHistory on the happy path" name="middleware/set-back-link-from-appeal Add back link to navigationHistory on the happy path" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/lpa-dashboard/get-confirm-remove-user" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.32" tests="4">
    <testcase classname="controllers/lpa-dashboard/get-confirm-remove-user getConfirmRemoveUserUser should render the view correctly" name="controllers/lpa-dashboard/get-confirm-remove-user getConfirmRemoveUserUser should render the view correctly" time="0.002">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/get-confirm-remove-user getConfirmRemoveUserUser should error if user is removing a user from another lpa" name="controllers/lpa-dashboard/get-confirm-remove-user getConfirmRemoveUserUser should error if user is removing a user from another lpa" time="0.018">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/get-confirm-remove-user postConfirmRemoveUserUser should remove the user" name="controllers/lpa-dashboard/get-confirm-remove-user postConfirmRemoveUserUser should remove the user" time="0.001">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/get-confirm-remove-user postConfirmRemoveUserUser should error if user is removing a user from another lpa" name="controllers/lpa-dashboard/get-confirm-remove-user postConfirmRemoveUserUser should error if user is removing a user from another lpa" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/manage-appeals" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.476" tests="1">
    <testcase classname="routes/manage-appeals should define the expected routes" name="routes/manage-appeals should define the expected routes" time="0.184">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appeal-householder-decision/cannot-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.655" tests="1">
    <testcase classname="controllers/appeal-householder-decision/cannot-appeal getCannotAppeal should call the correct template" name="controllers/appeal-householder-decision/cannot-appeal getCannotAppeal should call the correct template" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="is token expired" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.216" tests="2">
    <testcase classname="is token expired returns true if gap between provided dates is greater than expiry limit" name="is token expired returns true if gap between provided dates is greater than expiry limit" time="0.002">
    </testcase>
    <testcase classname="is token expired returns false if gap between provided dates is within expiry limit" name="is token expired returns false if gap between provided dates is within expiry limit" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.661" tests="4">
    <testcase classname="controllers/appellant-submission/application-number getApplicationNumber should call the correct template" name="controllers/appellant-submission/application-number getApplicationNumber should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/appellant-submission/application-number postApplicationNumber should re-render the template with errors if submission validation fails" name="controllers/appellant-submission/application-number postApplicationNumber should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/application-number postApplicationNumber should log an error if the api call fails, and remain on the same page" name="controllers/appellant-submission/application-number postApplicationNumber should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/application-number postApplicationNumber should redirect to `/appellant-submission/upload-application` if valid" name="controllers/appellant-submission/application-number postApplicationNumber should redirect to `/appellant-submission/upload-application` if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/appeals-api-wrapper" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.359" tests="12">
    <testcase classname="lib/appeals-api-wrapper createOrUpdateAppeal should POST when a id is missing" name="lib/appeals-api-wrapper createOrUpdateAppeal should POST when a id is missing" time="0.007">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper createOrUpdateAppeal should PUT when a id is provided" name="lib/appeals-api-wrapper createOrUpdateAppeal should PUT when a id is provided" time="0.002">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper createOrUpdateAppeal should gracefully handle a fetch failure" name="lib/appeals-api-wrapper createOrUpdateAppeal should gracefully handle a fetch failure" time="0.001">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper getExistingAppeal should call the expected URL" name="lib/appeals-api-wrapper getExistingAppeal should call the expected URL" time="0.001">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper getLPAList should call the expected URL" name="lib/appeals-api-wrapper getLPAList should call the expected URL" time="0.001">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper getLPA should call the expected URL" name="lib/appeals-api-wrapper getLPA should call the expected URL" time="0.002">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper saveAppeal should call the expected URL" name="lib/appeals-api-wrapper saveAppeal should call the expected URL" time="0.001">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper saveAppeal should handle api fetch failure" name="lib/appeals-api-wrapper saveAppeal should handle api fetch failure" time="0.001">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper createUser should call the expected URL" name="lib/appeals-api-wrapper createUser should call the expected URL" time="0.001">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper createUser should handle api fetch failure" name="lib/appeals-api-wrapper createUser should handle api fetch failure" time="0.001">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper getUser should get user by id" name="lib/appeals-api-wrapper getUser should get user by id" time="0.001">
    </testcase>
    <testcase classname="lib/appeals-api-wrapper getUser should get user by email" name="lib/appeals-api-wrapper getUser should get user by email" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/appeal-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.634" tests="6">
    <testcase classname="validators/common/appeal-statement rules has a rule for `does-not-include-sensitive-information`" name="validators/common/appeal-statement rules has a rule for `does-not-include-sensitive-information`" time="0.021">
    </testcase>
    <testcase classname="validators/common/appeal-statement rules has a rule for `file-upload`" name="validators/common/appeal-statement rules has a rule for `file-upload`" time="0.001">
    </testcase>
    <testcase classname="validators/common/appeal-statement rules should have the expected number of configured rules" name="validators/common/appeal-statement rules should have the expected number of configured rules" time="0.001">
    </testcase>
    <testcase classname="validators/common/appeal-statement validator should return the expected validation outcome - no value for `does-not-include-sensitive-information` - fail" name="validators/common/appeal-statement validator should return the expected validation outcome - no value for `does-not-include-sensitive-information` - fail" time="0.005">
    </testcase>
    <testcase classname="validators/common/appeal-statement validator should return the expected validation outcome - invalid value for `does-not-include-sensitive-information` - fail" name="validators/common/appeal-statement validator should return the expected validation outcome - invalid value for `does-not-include-sensitive-information` - fail" time="0.002">
    </testcase>
    <testcase classname="validators/common/appeal-statement validator should return the expected validation outcome - valid value for `does-not-include-sensitive-information` - &quot;i-confirm&quot; - pass" name="validators/common/appeal-statement validator should return the expected validation outcome - valid value for `does-not-include-sensitive-information` - &quot;i-confirm&quot; - pass" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/local-planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.289" tests="1">
    <testcase classname="routes/full-appeal/local-planning-department should define the expected routes" name="routes/full-appeal/local-planning-department should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="views/lpa/enter-email" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="1.108" tests="3">
    <testcase classname="views/lpa/enter-email when a user navigates to the enter-email page should render the page title as expected" name="views/lpa/enter-email when a user navigates to the enter-email page should render the page title as expected" time="0.248">
    </testcase>
    <testcase classname="views/lpa/enter-email when a user navigates to the enter-email page should render the page heading as expected" name="views/lpa/enter-email when a user navigates to the enter-email page should render the page heading as expected" time="0.166">
    </testcase>
    <testcase classname="views/lpa/enter-email when a user navigates to the enter-email page should render the label suffix as expected" name="views/lpa/enter-email when a user navigates to the enter-email page should render the label suffix as expected" time="0.142">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.451" tests="1">
    <testcase classname="routes/eligibility/planning-department should define the expected routes" name="routes/eligibility/planning-department should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="validators/appellant-submission/site-location" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.653" tests="23">
    <testcase classname="validators/appellant-submission/site-location rules ruleAddressLine1 is configured with the expected rules" name="validators/appellant-submission/site-location rules ruleAddressLine1 is configured with the expected rules" time="0.019">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location rules ruleAddressLine2 is configured with the expected rules" name="validators/appellant-submission/site-location rules ruleAddressLine2 is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location rules ruleAddressTownCity is configured with the expected rules" name="validators/appellant-submission/site-location rules ruleAddressTownCity is configured with the expected rules" time="0.007">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location rules ruleAddressCounty is configured with the expected rules" name="validators/appellant-submission/site-location rules ruleAddressCounty is configured with the expected rules" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location rules ruleAddressPostCode is configured with the expected rules" name="validators/appellant-submission/site-location rules ruleAddressPostCode is configured with the expected rules" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - full address provided" name="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - full address provided" time="0.031">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - minimum address provided" name="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - minimum address provided" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - address line 2 is missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - address line 2 is missing" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - town / city is missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - town / city is missing" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - county is missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - valid - county is missing" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-one is missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-one is missing" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-postcode is missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-postcode is missing" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-one (required) and site-county (optional) are missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-one (required) and site-county (optional) are missing" time="0.008">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-one and site-postcode are missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-one and site-postcode are missing" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-county (optional) and site-postcode (required) are missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-county (optional) and site-postcode (required) are missing" time="0.017">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - all fields are missing" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - all fields are missing" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-one is too long" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-one is too long" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-two is too long" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-address-line-two is too long" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-town-city is too long" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-town-city is too long" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-county is too long" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-county is too long" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-postcode is too long" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-postcode is too long" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-postcode should begin with a letter" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-postcode should begin with a letter" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-postcode can&apos;t be only letters" name="validators/appellant-submission/site-location validator should return the expected validation outcome - invalid - site-postcode can&apos;t be only letters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/householder-planning/eligibility/conditions-householder-permission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:12" time="0.798" tests="5">
    <testcase classname="controllers/householder-planning/eligibility/conditions-householder-permission getConditionsHouseholderPermission should call the correct template" name="controllers/householder-planning/eligibility/conditions-householder-permission getConditionsHouseholderPermission should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/conditions-householder-permission postConditionsHouseholderPermission should re-render the template with errors if submission validation fails" name="controllers/householder-planning/eligibility/conditions-householder-permission postConditionsHouseholderPermission should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/conditions-householder-permission postConditionsHouseholderPermission should re-render the template with errors if an error is thrown" name="controllers/householder-planning/eligibility/conditions-householder-permission postConditionsHouseholderPermission should re-render the template with errors if an error is thrown" time="0.01">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/conditions-householder-permission postConditionsHouseholderPermission should redirect to the correct page if `yes` has been selected" name="controllers/householder-planning/eligibility/conditions-householder-permission postConditionsHouseholderPermission should redirect to the correct page if `yes` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/conditions-householder-permission postConditionsHouseholderPermission should redirect to the correct page if `no` has been selected" name="controllers/householder-planning/eligibility/conditions-householder-permission postConditionsHouseholderPermission should redirect to the correct page if `no` has been selected" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/appellant-submission/site-access-safety" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.546" tests="10">
    <testcase classname="validators/appellant-submission/site-access-safety rules is configured with the expected rules" name="validators/appellant-submission/site-access-safety rules is configured with the expected rules" time="0.008">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety rules ruleSiteAccessSafety is configured with the expected rules" name="validators/appellant-submission/site-access-safety rules ruleSiteAccessSafety is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety rules ruleSiteAccessSafetyConcerns is configured with the expected rules" name="validators/appellant-submission/site-access-safety rules ruleSiteAccessSafetyConcerns is configured with the expected rules" time="0.02">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - No selection made as to the health and safety issues on the appeal site" name="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - No selection made as to the health and safety issues on the appeal site" time="0.005">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are no health and safety issues on the appeal site" name="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are no health and safety issues on the appeal site" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are health and safety issues on the appeal site, but `site-access-safety-concerns` is undefined" name="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are health and safety issues on the appeal site, but `site-access-safety-concerns` is undefined" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are health and safety issues on the appeal site, but `site-access-safety-concerns` is empty" name="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are health and safety issues on the appeal site, but `site-access-safety-concerns` is empty" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are health and safety issues on the appeal site, but the concerns message is too long" name="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are health and safety issues on the appeal site, but the concerns message is too long" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are health and safety issues on the appeal site and `site-access-safety-concerns` is provided" name="validators/appellant-submission/site-access-safety validator should return the expected validation outcome - There are health and safety issues on the appeal site and `site-access-safety-concerns` is provided" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access-safety validSiteAccessSafetyOptions should define the expected valid site access safety options" name="validators/appellant-submission/site-access-safety validSiteAccessSafetyOptions should define the expected valid site access safety options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/submission-information" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.549" tests="1">
    <testcase classname="routes/submission-information should define the expected routes" name="routes/submission-information should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="controllers/common/appeal-multi-file-upload" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.417" tests="7">
    <testcase classname="controllers/common/appeal-multi-file-upload getAppealMultiFileUpload should render page correctly" name="controllers/common/appeal-multi-file-upload getAppealMultiFileUpload should render page correctly" time="0.004">
    </testcase>
    <testcase classname="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should upload files, set session, and redirect to correct page if valid files added" name="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should upload files, set session, and redirect to correct page if valid files added" time="0.003">
    </testcase>
    <testcase classname="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should remove files correctly" name="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should remove files correctly" time="0.024">
    </testcase>
    <testcase classname="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload can handle removal and addition of files in a single request" name="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload can handle removal and addition of files in a single request" time="0.002">
    </testcase>
    <testcase classname="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should re-render template with errors if errors thrown" name="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should re-render template with errors if errors thrown" time="0.002">
    </testcase>
    <testcase classname="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should handle a request containing valid and invalid files" name="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should handle a request containing valid and invalid files" time="0.002">
    </testcase>
    <testcase classname="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should handle save and return requests correctly" name="controllers/common/appeal-multi-file-upload postAppealMultiFileUpload should handle save and return requests correctly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/telling-the-landowners" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.584" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/telling-the-landowners should define the expected routes" name="routes/full-appeal/submit-appeal/telling-the-landowners should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/why-hearing" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.501" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/why-hearing should define the expected routes" name="routes/full-appeal/submit-appeal/why-hearing should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="services/task.service" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.725" tests="24">
    <testcase classname="services/task.service getNextTask should return next on going task" name="services/task.service getNextTask should return next on going task" time="0.002">
    </testcase>
    <testcase classname="services/task.service getNextTask should return task list as all the remaining section tasks cannot be started yet" name="services/task.service getNextTask should return task list as all the remaining section tasks cannot be started yet" time="0.001">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return early from statusCheckYourAnswer if the appeal is already submitted " name="services/task.service SECTIONS should return early from statusCheckYourAnswer if the appeal is already submitted " time="0">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return COMPLETED from statusSupportingDocuments if the appeal has other documents" name="services/task.service SECTIONS should return COMPLETED from statusSupportingDocuments if the appeal has other documents" time="0.001">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return COMPLETED from statusSupportingDocuments if appeal has no documents but sectionState is complete" name="services/task.service SECTIONS should return COMPLETED from statusSupportingDocuments if appeal has no documents but sectionState is complete" time="0">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return NOT_STARTED from statusAppealStatement if id is empty" name="services/task.service SECTIONS should return NOT_STARTED from statusAppealStatement if id is empty" time="0.001">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return NOT_STARTED from statusSupportingDocuments if uploadedFiles empty and sectionState is not complete" name="services/task.service SECTIONS should return NOT_STARTED from statusSupportingDocuments if uploadedFiles empty and sectionState is not complete" time="0">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return NOT_STARTED from statusDecisionLetter if id is empty" name="services/task.service SECTIONS should return NOT_STARTED from statusDecisionLetter if id is empty" time="0">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return NOT_STARTED from statusOriginalApplication if id is empty" name="services/task.service SECTIONS should return NOT_STARTED from statusOriginalApplication if id is empty" time="0">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return NOT_STARTED from statusHealthAndSafety if healthAndSafety.hasIssues is null" name="services/task.service SECTIONS should return NOT_STARTED from statusHealthAndSafety if healthAndSafety.hasIssues is null" time="0">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return NOT_STARTED from statusSiteAccess if canInspectorSeeWholeSiteFromPublicRoad is null" name="services/task.service SECTIONS should return NOT_STARTED from statusSiteAccess if canInspectorSeeWholeSiteFromPublicRoad is null" time="0.001">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return &quot;NOT STARTED&quot; from statusCheckYourAnswer if all sections have been COMPLETED but the appeal is not submitted " name="services/task.service SECTIONS should return &quot;NOT STARTED&quot; from statusCheckYourAnswer if all sections have been COMPLETED but the appeal is not submitted " time="0">
    </testcase>
    <testcase classname="services/task.service SECTIONS should return &quot;CANNOT START YET&quot; from statusCheckYourAnswer if not all sections have been COMPLETED and the appeal is not submitted " name="services/task.service SECTIONS should return &quot;CANNOT START YET&quot; from statusCheckYourAnswer if not all sections have been COMPLETED and the appeal is not submitted " time="0.001">
    </testcase>
    <testcase classname="services/task.service getNextTask should return the expected next on going task" name="services/task.service getNextTask should return the expected next on going task" time="0">
    </testcase>
    <testcase classname="services/task.service getNextTask should return the expected next on going task" name="services/task.service getNextTask should return the expected next on going task" time="0.001">
    </testcase>
    <testcase classname="services/task.service getNextTask should return the expected next on going task" name="services/task.service getNextTask should return the expected next on going task" time="0">
    </testcase>
    <testcase classname="services/task.service getNextTask should return the expected next on going task" name="services/task.service getNextTask should return the expected next on going task" time="0">
    </testcase>
    <testcase classname="services/task.service getNextTask should fall through to default even when allowing `sections` to be an optional parameter" name="services/task.service getNextTask should fall through to default even when allowing `sections` to be an optional parameter" time="0">
    </testcase>
    <testcase classname="services/task.service getNextTask should allow `sections` to be an optional parameter" name="services/task.service getNextTask should allow `sections` to be an optional parameter" time="0">
    </testcase>
    <testcase classname="services/task.service #getTaskStatus should find the rule in the task object if there is a taskName" name="services/task.service #getTaskStatus should find the rule in the task object if there is a taskName" time="0.015">
    </testcase>
    <testcase classname="services/task.service #getTaskStatus should find the rule in the section object if there is not a taskName" name="services/task.service #getTaskStatus should find the rule in the section object if there is not a taskName" time="0.003">
    </testcase>
    <testcase classname="services/task.service #getTaskStatus should return null if there is an error" name="services/task.service #getTaskStatus should return null if there is an error" time="0">
    </testcase>
    <testcase classname="services/task.service setTaskStatusComplete should return completed task status" name="services/task.service setTaskStatusComplete should return completed task status" time="0.001">
    </testcase>
    <testcase classname="services/task.service setTaskStatusNotStarted should return not started task status" name="services/task.service setTaskStatusNotStarted should return not started task status" time="0">
    </testcase>
  </testsuite>
  <testsuite name="lib/extract-root-domain-name-from-full-domain-name" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.284" tests="9">
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name subdomainArrayToString should return the expected subdomain path - " name="lib/extract-root-domain-name-from-full-domain-name subdomainArrayToString should return the expected subdomain path - " time="0.002">
    </testcase>
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name subdomainArrayToString should return the expected subdomain path - a" name="lib/extract-root-domain-name-from-full-domain-name subdomainArrayToString should return the expected subdomain path - a" time="0.001">
    </testcase>
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name subdomainArrayToString should return the expected subdomain path - a.b" name="lib/extract-root-domain-name-from-full-domain-name subdomainArrayToString should return the expected subdomain path - a.b" time="0">
    </testcase>
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name subdomainArrayToString should return the expected subdomain path - a.b.c" name="lib/extract-root-domain-name-from-full-domain-name subdomainArrayToString should return the expected subdomain path - a.b.c" time="0">
    </testcase>
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - " name="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - " time="0.017">
    </testcase>
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - example.com" name="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - example.com" time="0.001">
    </testcase>
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - www.example.com" name="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - www.example.com" time="0">
    </testcase>
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - appeals-dev.planninginspectorate.gov.uk" name="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - appeals-dev.planninginspectorate.gov.uk" time="0">
    </testcase>
    <testcase classname="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - nested.appeals-dev.planninginspectorate.gov.uk" name="lib/extract-root-domain-name-from-full-domain-name extractRootDomainNameFromHostnameAndSubdomains should return the expected root domain - nested.appeals-dev.planninginspectorate.gov.uk" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/planning-obligation" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.743" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/planning-obligation should define the expected routes" name="routes/full-appeal/submit-appeal/planning-obligation should define the expected routes" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="routes/task-list" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.615" tests="1">
    <testcase classname="routes/task-list should define the expected routes" name="routes/task-list should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="views/includes/body-start" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.57" tests="4">
    <testcase classname="views/includes/body-start Google Tag Manager section should not render if featureFlag.googleTagManager and googleTagManagerId are not set" name="views/includes/body-start Google Tag Manager section should not render if featureFlag.googleTagManager and googleTagManagerId are not set" time="0.02">
    </testcase>
    <testcase classname="views/includes/body-start Google Tag Manager section should not render if featureFlag.googleTagManager is set but googleTagManagerId is not set" name="views/includes/body-start Google Tag Manager section should not render if featureFlag.googleTagManager is set but googleTagManagerId is not set" time="0.003">
    </testcase>
    <testcase classname="views/includes/body-start Google Tag Manager section should not render if featureFlag.googleTagManager is not set but googleTagManagerId is set" name="views/includes/body-start Google Tag Manager section should not render if featureFlag.googleTagManager is not set but googleTagManagerId is set" time="0.016">
    </testcase>
    <testcase classname="views/includes/body-start Google Tag Manager section should render if featureFlag.googleTagManager and googleTagManagerId are set" name="views/includes/body-start Google Tag Manager section should render if featureFlag.googleTagManager and googleTagManagerId are set" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/other-supporting-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.789" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/other-supporting-documents should define the expected routes" name="routes/full-appeal/submit-appeal/other-supporting-documents should define the expected routes" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="routes/appeal-householder-planning/enter-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.673" tests="1">
    <testcase classname="routes/appeal-householder-planning/enter-code should define the expected routes" name="routes/appeal-householder-planning/enter-code should define the expected routes" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/task-list" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.613" tests="3">
    <testcase classname="controllers/appellant-submission/task-list getTaskList All the tasks except check answers should be in not started" name="controllers/appellant-submission/task-list getTaskList All the tasks except check answers should be in not started" time="0.004">
    </testcase>
    <testcase classname="controllers/appellant-submission/task-list getTaskList Some tasks still in progress and check your answer cannot be started" name="controllers/appellant-submission/task-list getTaskList Some tasks still in progress and check your answer cannot be started" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/task-list getTaskList All the mandatory tasks should be completed and check your answer can be started" name="controllers/appellant-submission/task-list getTaskList All the mandatory tasks should be completed and check your answer can be started" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/original-decision-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.555" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/original-decision-notice getOriginalDecisionNotice should call the correct template" name="controllers/full-appeal/submit-appeal/original-decision-notice getOriginalDecisionNotice should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/original-decision-notice postOriginalDecisionNotice should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/original-decision-notice postOriginalDecisionNotice should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/original-decision-notice postOriginalDecisionNotice should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/original-decision-notice postOriginalDecisionNotice should re-render the template with errors if an error is thrown" time="0.01">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/original-decision-notice postOriginalDecisionNotice should redirect to the correct page if valid and a file is being uploaded" name="controllers/full-appeal/submit-appeal/original-decision-notice postOriginalDecisionNotice should redirect to the correct page if valid and a file is being uploaded" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/original-decision-notice postOriginalDecisionNotice should redirect to the correct page if valid and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/original-decision-notice postOriginalDecisionNotice should redirect to the correct page if valid and a file is not being uploaded" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/householder-planning/eligibility/granted-or-refused-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.59" tests="6">
    <testcase classname="controllers/householder-planning/eligibility/granted-or-refused-householder getGrantedOrRefusedHouseholder should call the correct template" name="controllers/householder-planning/eligibility/granted-or-refused-householder getGrantedOrRefusedHouseholder should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder should re-render the template with errors if there is any validation error" name="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder should re-render the template with errors if there is any validation error" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder should re-render the template with errors if there is any api call error" name="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder should re-render the template with errors if there is any api call error" time="0.002">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder &apos;should redirect to &apos;/before-you-start/decision-date-householder&apos; if &apos;applicationDecision&apos; is &apos;refused&apos;" name="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder &apos;should redirect to &apos;/before-you-start/decision-date-householder&apos; if &apos;applicationDecision&apos; is &apos;refused&apos;" time="0.002">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder should redirect to &apos;/before-you-start/decision-date-householder&apos; if &apos;applicationDecision&apos; is &apos;granted&apos;" name="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder should redirect to &apos;/before-you-start/decision-date-householder&apos; if &apos;applicationDecision&apos; is &apos;granted&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder should redirect to &apos;/before-you-start/date-decision-due-householder&apos; if &apos;applicationDecision&apos; is &apos;nodecisionreceived&apos;" name="controllers/householder-planning/eligibility/granted-or-refused-householder postGrantedOrRefusedHouseholder should redirect to &apos;/before-you-start/date-decision-due-householder&apos; if &apos;applicationDecision&apos; is &apos;nodecisionreceived&apos;" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/request-new-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.677" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/request-new-code should define the expected routes" name="routes/full-appeal/submit-appeal/request-new-code should define the expected routes" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/planning-obligation-status" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:13" time="0.954" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-status getPlanningObligationStatus calls getPlanningObligationStatus with the  correct template" name="controllers/full-appeal/submit-appeal/planning-obligation-status getPlanningObligationStatus calls getPlanningObligationStatus with the  correct template" time="0.007">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-status postPlanningObligationStatus clears any finalised planning obligation uploaded files if selected status is draft" name="controllers/full-appeal/submit-appeal/planning-obligation-status postPlanningObligationStatus clears any finalised planning obligation uploaded files if selected status is draft" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-status postPlanningObligationStatus clears any draft planning obligation uploaded files if selected status is finalised" name="controllers/full-appeal/submit-appeal/planning-obligation-status postPlanningObligationStatus clears any draft planning obligation uploaded files if selected status is finalised" time="0.01">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-status postPlanningObligationStatus clears draft/finalised planning obligation uploaded files if selected status is not started" name="controllers/full-appeal/submit-appeal/planning-obligation-status postPlanningObligationStatus clears draft/finalised planning obligation uploaded files if selected status is not started" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/planning-obligations-planned" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.408" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/planning-obligations-planned should define the expected routes" name="routes/full-appeal/submit-appeal/planning-obligations-planned should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/lpa-dashboard/your-appeals" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.527" tests="1">
    <testcase classname="controllers/lpa-dashboard/your-appeals getYourAppeals should render the view with a link to add-remove" name="controllers/lpa-dashboard/your-appeals getYourAppeals should render the view with a link to add-remove" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie/cookie-dom-helpers" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.464" tests="4">
    <testcase classname="lib/client-side/cookie/cookie-dom-helpers showSingleDomElementBySelector can show a hidden element" name="lib/client-side/cookie/cookie-dom-helpers showSingleDomElementBySelector can show a hidden element" time="0.009">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-dom-helpers showSingleDomElementBySelector showing an already shown element" name="lib/client-side/cookie/cookie-dom-helpers showSingleDomElementBySelector showing an already shown element" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-dom-helpers hideSingleDomElementBySelector can hide a visible element" name="lib/client-side/cookie/cookie-dom-helpers hideSingleDomElementBySelector can hide a visible element" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-dom-helpers hideSingleDomElementBySelector hiding an already hidden element" name="lib/client-side/cookie/cookie-dom-helpers hideSingleDomElementBySelector hiding an already hidden element" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/appeal-householder-decision/request-new-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.431" tests="1">
    <testcase classname="routes/appeal-householder-decision/request-new-code should define the expected routes" name="routes/appeal-householder-decision/request-new-code should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="validators/eligibility/granted-or-refused-permission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="1.025" tests="5">
    <testcase classname="validators/eligibility/granted-or-refused-permission rules is configured with the expected rules" name="validators/eligibility/granted-or-refused-permission rules is configured with the expected rules" time="0.005">
    </testcase>
    <testcase classname="validators/eligibility/granted-or-refused-permission ruleGrantedOrRefusedPermission is configured with the expected rules" name="validators/eligibility/granted-or-refused-permission ruleGrantedOrRefusedPermission is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/eligibility/granted-or-refused-permission validator should return the expected validation outcome - No selection made on the granted or refused permission question" name="validators/eligibility/granted-or-refused-permission validator should return the expected validation outcome - No selection made on the granted or refused permission question" time="0.005">
    </testcase>
    <testcase classname="validators/eligibility/granted-or-refused-permission validator should return the expected validation outcome - User selected `refused` on the householder planning permission question" name="validators/eligibility/granted-or-refused-permission validator should return the expected validation outcome - User selected `refused` on the householder planning permission question" time="0.001">
    </testcase>
    <testcase classname="validators/eligibility/granted-or-refused-permission validHouseholderPlanningPermissionStatusOptions should define the expected valid householder planning permission status options" name="validators/eligibility/granted-or-refused-permission validHouseholderPlanningPermissionStatusOptions should define the expected valid householder planning permission status options" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/expect-inquiry-last" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.589" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/expect-inquiry-last getExpectInquiryLast should call the correct template" name="controllers/full-appeal/submit-appeal/expect-inquiry-last getExpectInquiryLast should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/expect-inquiry-last postExpectInquiryLast should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/expect-inquiry-last postExpectInquiryLast should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/expect-inquiry-last postExpectInquiryLast should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/expect-inquiry-last postExpectInquiryLast should re-render the template with errors if an error is thrown" time="0.015">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/expect-inquiry-last postExpectInquiryLast should redirect to the correct page if a valid value has been entered" name="controllers/full-appeal/submit-appeal/expect-inquiry-last postExpectInquiryLast should redirect to the correct page if a valid value has been entered" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/schemas/file-upload" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.416" tests="16">
    <testcase classname="validators/common/schemas/file-upload has a defined custom schema object" name="validators/common/schemas/file-upload has a defined custom schema object" time="0.002">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should return true if req.files is null and a single file has already been uploaded" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should return true if req.files is null and a single file has already been uploaded" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should return true if req.files is null and multiple files already been uploaded" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should return true if req.files is null and multiple files already been uploaded" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should throw the correct error if req.files is null and noFilesError is not given" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should throw the correct error if req.files is null and noFilesError is not given" time="0.021">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should throw the correct error if req.files is null and noFilesError is given" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should throw the correct error if req.files is null and noFilesError is given" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should throw the correct error if a file has not been uploaded and noFilesError is not given" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should throw the correct error if a file has not been uploaded and noFilesError is not given" time="0">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should throw the correct error if a file has not been uploaded and noFilesError is given" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should throw the correct error if a file has not been uploaded and noFilesError is given" time="0">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validMimeType validator when given a single file" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validMimeType validator when given a single file" time="0.002">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validateMimeBinaryType validator when given a single file" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validateMimeBinaryType validator when given a single file" time="0">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validateFileSize validator when given a single file" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validateFileSize validator when given a single file" time="0">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the antivirus validator when given a single file" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the antivirus validator when given a single file" time="0.012">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validMimeType validator when given multiple files" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validMimeType validator when given multiple files" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validateMimeBinaryType validator when given multiple files" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validateMimeBinaryType validator when given multiple files" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validateFileSize validator when given multiple files" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should call the validateFileSize validator when given multiple files" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should return true when given a single valid file" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should return true when given a single valid file" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should return true when given multiple valid files" name="validators/common/schemas/file-upload schema[&apos;file-upload&apos;].custom.options should return true when given multiple valid files" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:14" time="0.548" tests="1">
    <testcase classname="routes/eligibility/planning-department should define the expected routes" name="routes/eligibility/planning-department should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/listed-building" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.414" tests="1">
    <testcase classname="routes/eligibility/listed-building should define the expected routes" name="routes/eligibility/listed-building should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/agricultural-holding" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.478" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/agricultural-holding should define the expected routes" name="routes/full-appeal/submit-appeal/agricultural-holding should define the expected routes" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/planning-application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.436" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/planning-application-number getPlanningApplicationNumber should call the correct template" name="controllers/full-appeal/submit-appeal/planning-application-number getPlanningApplicationNumber should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-application-number postPlanningApplicationNumber should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/planning-application-number postPlanningApplicationNumber should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-application-number postPlanningApplicationNumber should log an error if the api call fails, and remain on the same page" name="controllers/full-appeal/submit-appeal/planning-application-number postPlanningApplicationNumber should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-application-number postPlanningApplicationNumber should redirect to `/full-appeal/email-address` if valid" name="controllers/full-appeal/submit-appeal/planning-application-number postPlanningApplicationNumber should redirect to `/full-appeal/email-address` if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="views/macros/cookie-banner-rejected" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.664" tests="4">
    <testcase classname="views/macros/cookie-banner-rejected should have sensible default attributes" name="views/macros/cookie-banner-rejected should have sensible default attributes" time="0.123">
    </testcase>
    <testcase classname="views/macros/cookie-banner-rejected should allow setting a custom serviceName" name="views/macros/cookie-banner-rejected should allow setting a custom serviceName" time="0.066">
    </testcase>
    <testcase classname="views/macros/cookie-banner-rejected should allow setting a custom cookiePagePath" name="views/macros/cookie-banner-rejected should allow setting a custom cookiePagePath" time="0.066">
    </testcase>
    <testcase classname="views/macros/cookie-banner-rejected should allow setting all custom attributes" name="views/macros/cookie-banner-rejected should allow setting all custom attributes" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/application-form" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.498" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/application-form should define the expected routes" name="routes/full-appeal/submit-appeal/application-form should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa/your-appeals" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.608" tests="1">
    <testcase classname="routes/lpa/your-appeals should define the expected routes" name="routes/lpa/your-appeals should define the expected routes" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/expect-inquiry-last" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.407" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/expect-inquiry-last should define the expected routes" name="routes/full-appeal/submit-appeal/expect-inquiry-last should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/eligibility/granted-or-refused-permission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.788" tests="13">
    <testcase classname="controllers/eligibility/granted-or-refused-permission getNoDecision should call the correct template" name="controllers/eligibility/granted-or-refused-permission getNoDecision should call the correct template" time="0.002">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission getGrantedOrRefusedPlanningPermission should call the correct template" name="controllers/eligibility/granted-or-refused-permission getGrantedOrRefusedPlanningPermission should call the correct template" time="0">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission getGrantedOrRefusedPlanningPermissionOut should call the permission out template" name="controllers/eligibility/granted-or-refused-permission getGrantedOrRefusedPlanningPermissionOut should call the permission out template" time="0">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/granted-or-refused-permission-out&apos; if passed &apos;permissionStatus&apos; is &apos;granted&apos;" name="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/granted-or-refused-permission-out&apos; if passed &apos;permissionStatus&apos; is &apos;granted&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/decision-date&apos; if passed &apos;permissionStatus&apos; is &apos;refused&apos;" name="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/decision-date&apos; if passed &apos;permissionStatus&apos; is &apos;refused&apos;" time="0">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/no-decision&apos; if passed &apos;permissionStatus&apos; is &apos;nodecisionreceived&apos;" name="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/no-decision&apos; if passed &apos;permissionStatus&apos; is &apos;nodecisionreceived&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/granted-or-refused-permission&apos; if passed &apos;permissionStatus&apos; is &apos;default&apos;" name="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/granted-or-refused-permission&apos; if passed &apos;permissionStatus&apos; is &apos;default&apos;" time="0">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/granted-or-refused-permission&apos; if &apos;permissionStatus&apos; is not passed" name="controllers/eligibility/granted-or-refused-permission forwardPage should return &apos;/eligibility/granted-or-refused-permission&apos; if &apos;permissionStatus&apos; is not passed" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission should re-render the template with errors if there is any validation error" name="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission should re-render the template with errors if there is any validation error" time="0.002">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission should re-render the template with errors if there is any api call error" name="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission should re-render the template with errors if there is any api call error" time="0.007">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission &apos;should redirect to &apos;/eligibility/decision-date&apos; if &apos;planningPermissionStatus&apos; is &apos;refused&apos;" name="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission &apos;should redirect to &apos;/eligibility/decision-date&apos; if &apos;planningPermissionStatus&apos; is &apos;refused&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission should redirect to &apos;/eligibility/granted-or-refused-permission-out&apos; if &apos;planningPermissionStatus&apos; is &apos;granted&apos;" name="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission should redirect to &apos;/eligibility/granted-or-refused-permission-out&apos; if &apos;planningPermissionStatus&apos; is &apos;granted&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission should redirect to &apos;/eligibility/no-decision&apos; if &apos;planningPermissionStatus&apos; is &apos;nodecisionreceived&apos;" name="controllers/eligibility/granted-or-refused-permission postGrantedOrRefusedPlanningPermission should redirect to &apos;/eligibility/no-decision&apos; if &apos;planningPermissionStatus&apos; is &apos;nodecisionreceived&apos;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="middleware/ensure-appeal-is-available" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.433" tests="2">
    <testcase classname="middleware/ensure-appeal-is-available Call next() if req.session.appeal.id is set" name="middleware/ensure-appeal-is-available Call next() if req.session.appeal.id is set" time="0.003">
    </testcase>
    <testcase classname="middleware/ensure-appeal-is-available Return 400 if req.session.appeal.id is not set" name="middleware/ensure-appeal-is-available Return 400 if req.session.appeal.id is not set" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="routes/final-comment/input-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.575" tests="1">
    <testcase classname="routes/final-comment/input-code should define the expected routes" name="routes/final-comment/input-code should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/applicant-name" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.625" tests="4">
    <testcase classname="controllers/appellant-submission/applicant-name getApplicantName should call the correct template" name="controllers/appellant-submission/applicant-name getApplicantName should call the correct template" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/applicant-name postApplicantName should re-render the template with errors if there is any validator error" name="controllers/appellant-submission/applicant-name postApplicantName should re-render the template with errors if there is any validator error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/applicant-name postApplicantName should re-render the template with errors if there is any api call error" name="controllers/appellant-submission/applicant-name postApplicantName should re-render the template with errors if there is any api call error" time="0.032">
    </testcase>
    <testcase classname="controllers/appellant-submission/applicant-name postApplicantName should redirect to the task list if valid" name="controllers/appellant-submission/applicant-name postApplicantName should redirect to the task list if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie-preferences" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.481" tests="1">
    <testcase classname="lib/client-side/cookie-preferences calls the expected functions" name="lib/client-side/cookie-preferences calls the expected functions" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/appeal-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:15" time="0.667" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/appeal-statement should define the expected routes" name="routes/full-appeal/submit-appeal/appeal-statement should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/eligibility/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.415" tests="8">
    <testcase classname="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartment method calls the correct template" name="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartment method calls the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartment method calls the correct template" name="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartment method calls the correct template" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartment method with existing LPD calls the correct template" name="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartment method with existing LPD calls the correct template" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartmentOut method calls the correct template" name="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartmentOut method calls the correct template" time="0">
    </testcase>
    <testcase classname="controllers/eligibility/planning-department Planning Department Controller Tests Test the postPlanningDepartment method call with handled department" name="controllers/eligibility/planning-department Planning Department Controller Tests Test the postPlanningDepartment method call with handled department" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartment method call with ineligible department" name="controllers/eligibility/planning-department Planning Department Controller Tests Test the getPlanningDepartment method call with ineligible department" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/planning-department Planning Department Controller Tests Test the postPlanningDepartment method call on error" name="controllers/eligibility/planning-department Planning Department Controller Tests Test the postPlanningDepartment method call on error" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/planning-department Planning Department Controller Tests should log an error if the api call fails, and remain on the same page" name="controllers/eligibility/planning-department Planning Department Controller Tests should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/eligibility/enforcement-notice`" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.417" tests="6">
    <testcase classname="validators/eligibility/enforcement-notice` rules is configured with the expected rules" name="validators/eligibility/enforcement-notice` rules is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/eligibility/enforcement-notice` rules ruleEnforcementNotice is configured with the expected rules" name="validators/eligibility/enforcement-notice` rules ruleEnforcementNotice is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/eligibility/enforcement-notice` validator should return the expected validation outcome - No selection made regarding receipt of an Enforcement Notice" name="validators/eligibility/enforcement-notice` validator should return the expected validation outcome - No selection made regarding receipt of an Enforcement Notice" time="0.005">
    </testcase>
    <testcase classname="validators/eligibility/enforcement-notice` validator should return the expected validation outcome - User selected `yes` to receiving an Enforcement Notice" name="validators/eligibility/enforcement-notice` validator should return the expected validation outcome - User selected `yes` to receiving an Enforcement Notice" time="0.002">
    </testcase>
    <testcase classname="validators/eligibility/enforcement-notice` validator should return the expected validation outcome - User selected `no` to receiving an Enforcement Notice" name="validators/eligibility/enforcement-notice` validator should return the expected validation outcome - User selected `no` to receiving an Enforcement Notice" time="0.001">
    </testcase>
    <testcase classname="validators/eligibility/enforcement-notice` validEnforcementNoticeOptions should define the expected valid enforcement notice options" name="validators/eligibility/enforcement-notice` validEnforcementNoticeOptions should define the expected valid enforcement notice options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/declaration" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.797" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/declaration getDeclaration should call the correct template" name="controllers/full-appeal/submit-appeal/declaration getDeclaration should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/declaration postDeclaration should re-render the template with errors if there is any appeals api call error" name="controllers/full-appeal/submit-appeal/declaration postDeclaration should re-render the template with errors if there is any appeals api call error" time="0.029">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/declaration postDeclaration should re-render the template with errors if there is any pdf api call error" name="controllers/full-appeal/submit-appeal/declaration postDeclaration should re-render the template with errors if there is any pdf api call error" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/declaration postDeclaration should redirect if valid" name="controllers/full-appeal/submit-appeal/declaration postDeclaration should redirect if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/lpa-dashboard/service-invite" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.587" tests="9">
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view without an lpaCode" name="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view without an lpaCode" time="0.017">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA returns a bad value" name="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA returns a bad value" time="0.003">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA returns a bad value" name="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA returns a bad value" time="0.009">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA returns a bad value" name="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA returns a bad value" time="0.001">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA returns a bad value" name="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA returns a bad value" time="0">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA throws an error" name="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if getLPA throws an error" time="0.031">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should redirect to the enter email view if createUser returns an only1Admin error" name="controllers/lpa-dashboard/service-invite getServiceInvite should redirect to the enter email view if createUser returns an only1Admin error" time="0.023">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if createUser throws error" name="controllers/lpa-dashboard/service-invite getServiceInvite should render the unauthorized view if createUser throws error" time="0.002">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/service-invite getServiceInvite should redirect to the enter email view if user created works" name="controllers/lpa-dashboard/service-invite getServiceInvite should redirect to the enter email view if user created works" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa/your-appeals" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.364" tests="1">
    <testcase classname="routes/lpa/your-appeals should define the expected routes" name="routes/lpa/your-appeals should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/other-tenants" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.571" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/other-tenants should define the expected routes" name="routes/full-appeal/submit-appeal/other-tenants should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="lib/full-appeal/error-message/know-the-owners" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.253" tests="3">
    <testcase classname="lib/full-appeal/error-message/know-the-owners should return the correct error message when ownsSomeOfTheLand is true" name="lib/full-appeal/error-message/know-the-owners should return the correct error message when ownsSomeOfTheLand is true" time="0.002">
    </testcase>
    <testcase classname="lib/full-appeal/error-message/know-the-owners should return the correct error message when ownsSomeOfTheLand is false" name="lib/full-appeal/error-message/know-the-owners should return the correct error message when ownsSomeOfTheLand is false" time="0">
    </testcase>
    <testcase classname="lib/full-appeal/error-message/know-the-owners should return the correct error message when ownsSomeOfTheLand is not set" name="lib/full-appeal/error-message/know-the-owners should return the correct error message when ownsSomeOfTheLand is not set" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/draft-statement-common-ground" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.561" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/draft-statement-common-ground should define the expected routes" name="routes/full-appeal/submit-appeal/draft-statement-common-ground should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/prior-approval-existing-home" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.656" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/prior-approval-existing-home getPriorApprovalExistingHome should call the correct template" name="controllers/full-appeal/submit-appeal/prior-approval-existing-home getPriorApprovalExistingHome should call the correct template" time="0.016">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/prior-approval-existing-home postPriorApprovalExistingHome should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/prior-approval-existing-home postPriorApprovalExistingHome should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/prior-approval-existing-home postPriorApprovalExistingHome should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/prior-approval-existing-home postPriorApprovalExistingHome should re-render the template with errors if an error is thrown" time="0.015">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/prior-approval-existing-home postPriorApprovalExistingHome should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/prior-approval-existing-home postPriorApprovalExistingHome should redirect to the correct page if `yes` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/prior-approval-existing-home postPriorApprovalExistingHome should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/prior-approval-existing-home postPriorApprovalExistingHome should redirect to the correct page if `no` has been selected" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/planning-obligation-planned" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.441" tests="7">
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-planned getPlanningObligationPlanned Test getPlanningObligationPlanned method calls the correct template if new plans and drawings" name="controllers/full-appeal/submit-appeal/planning-obligation-planned getPlanningObligationPlanned Test getPlanningObligationPlanned method calls the correct template if new plans and drawings" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-planned getPlanningObligationPlanned Test getPlanningObligationPlanned method calls the correct template if no new plans and drawings" name="controllers/full-appeal/submit-appeal/planning-obligation-planned getPlanningObligationPlanned Test getPlanningObligationPlanned method calls the correct template if no new plans and drawings" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should re-render template with errors if submission validation fails - new plans and drawings" name="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should re-render template with errors if submission validation fails - new plans and drawings" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should re-render template with errors if submission validation fails - no new plans and drawings" name="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should re-render template with errors if submission validation fails - no new plans and drawings" time="0.006">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should re-render the template with errors if an error is thrown" time="0.013">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should redirect to correct page if plan-to-submit-planning-obligation is yes" name="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should redirect to correct page if plan-to-submit-planning-obligation is yes" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should remove any uploaded planning obligation files and redirect to correct page if plan-to-submit-planning-obligation is no" name="controllers/full-appeal/submit-appeal/planning-obligation-planned postPlanningObligationPlanned should remove any uploaded planning obligation files and redirect to correct page if plan-to-submit-planning-obligation is no" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/design-access-statement-submitted" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:16" time="0.615" tests="7">
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement-submitted getDesignAccessStatementSubmitted should call the correct template" name="controllers/full-appeal/submit-appeal/design-access-statement-submitted getDesignAccessStatementSubmitted should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should re-render the template with errors if an error is thrown" time="0.014">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should redirect to the correct page if `yes` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should redirect to the correct page if `no` has been selected and the application decision is `granted`" name="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should redirect to the correct page if `no` has been selected and the application decision is `granted`" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should redirect to the correct page if `no` has been selected and the application decision is `refused`" name="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should redirect to the correct page if `no` has been selected and the application decision is `refused`" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should redirect to the correct page if `no` has been selected and the application decision is `no decision received`" name="controllers/full-appeal/submit-appeal/design-access-statement-submitted postDesignAccessStatementSubmitted should redirect to the correct page if `no` has been selected and the application decision is `no decision received`" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/declaration-information" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.482" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/declaration-information should define the expected routes" name="routes/full-appeal/submit-appeal/declaration-information should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.272" tests="1">
    <testcase classname="lib/client-side/index calls the expected functions" name="lib/client-side/index calls the expected functions" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/visible-from-road" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.57" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/visible-from-road should define the expected routes" name="routes/full-appeal/submit-appeal/visible-from-road should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/task-list" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.524" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/task-list should define the expected routes" name="routes/full-appeal/submit-appeal/task-list should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/type-of-planning-application" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.902" tests="9">
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should call the correct template on getTypeOfPlanningApplication" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should call the correct template on getTypeOfPlanningApplication" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the listed building page" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the listed building page" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the shutter page" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the shutter page" time="0.006">
    </testcase>
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the shutter page" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the shutter page" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the about appeal page" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the about appeal page" time="0.009">
    </testcase>
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the prior approval page" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the prior approval page" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the removal or variation of conditions page" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should redirect to the removal or variation of conditions page" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should render errors on the page" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should render errors on the page" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should render page with failed appeal update message" name="controllers/full-appeal/type-of-planning-application Type of Planning Application Controller Tests should render page with failed appeal update message" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/identifying-the-owners" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.405" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/identifying-the-owners getIdentifyingTheOwners should call the correct template" name="controllers/full-appeal/submit-appeal/identifying-the-owners getIdentifyingTheOwners should call the correct template" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/identifying-the-owners postIdentifyingTheOwners should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/identifying-the-owners postIdentifyingTheOwners should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/identifying-the-owners postIdentifyingTheOwners should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/identifying-the-owners postIdentifyingTheOwners should re-render the template with errors if an error is thrown" time="0.012">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/identifying-the-owners postIdentifyingTheOwners should redirect to the correct page user confirms the page" name="controllers/full-appeal/submit-appeal/identifying-the-owners postIdentifyingTheOwners should redirect to the correct page user confirms the page" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/local-planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.599" tests="1">
    <testcase classname="routes/full-appeal/local-planning-department should define the expected routes" name="routes/full-appeal/local-planning-department should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/appellant-submission/confirmation" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.381" tests="1">
    <testcase classname="routes/appellant-submission/confirmation should define the expected routes" name="routes/appellant-submission/confirmation should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.553" tests="1">
    <testcase classname="routes/eligibility/planning-department should define the expected routes" name="routes/eligibility/planning-department should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/own-all-the-land" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.348" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/own-all-the-land getOwnAllTheLand should call the correct template" name="controllers/full-appeal/submit-appeal/own-all-the-land getOwnAllTheLand should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/own-all-the-land postOwnAllTheLand should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/own-all-the-land postOwnAllTheLand should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/own-all-the-land postOwnAllTheLand should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/own-all-the-land postOwnAllTheLand should re-render the template with errors if an error is thrown" time="0.011">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/own-all-the-land postOwnAllTheLand should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/own-all-the-land postOwnAllTheLand should redirect to the correct page if `yes` has been selected" time="0.006">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/own-all-the-land postOwnAllTheLand should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/own-all-the-land postOwnAllTheLand should redirect to the correct page if `no` has been selected" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/decision-letter" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.575" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/decision-letter should define the expected routes" name="routes/full-appeal/submit-appeal/decision-letter should define the expected routes" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="views/macros/summary-field" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.346" tests="4">
    <testcase classname="views/macros/summary-field should render without a value or attributes" name="views/macros/summary-field should render without a value or attributes" time="0.014">
    </testcase>
    <testcase classname="views/macros/summary-field should render with a value and without attributes" name="views/macros/summary-field should render with a value and without attributes" time="0.004">
    </testcase>
    <testcase classname="views/macros/summary-field should render without a value and with attributes" name="views/macros/summary-field should render without a value and with attributes" time="0.009">
    </testcase>
    <testcase classname="views/macros/summary-field should render with a value and attributes" name="views/macros/summary-field should render with a value and attributes" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="validators/appellant-submission/have-other-owners-been-told-certb" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:17" time="0.371" tests="7">
    <testcase classname="validators/appellant-submission/have-other-owners-been-told-certb rules is configured with the expected rules" name="validators/appellant-submission/have-other-owners-been-told-certb rules is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/appellant-submission/have-other-owners-been-told-certb rules ruleSiteOwnershipCertB is configured with the expected rules" name="validators/appellant-submission/have-other-owners-been-told-certb rules ruleSiteOwnershipCertB is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/have-other-owners-been-told-certb validator should return the expected validation outcome - undefined - empty" name="validators/appellant-submission/have-other-owners-been-told-certb validator should return the expected validation outcome - undefined - empty" time="0.004">
    </testcase>
    <testcase classname="validators/appellant-submission/have-other-owners-been-told-certb validator should return the expected validation outcome - invalid value for `have-other-owners-been-told` - fail" name="validators/appellant-submission/have-other-owners-been-told-certb validator should return the expected validation outcome - invalid value for `have-other-owners-been-told` - fail" time="0.006">
    </testcase>
    <testcase classname="validators/appellant-submission/have-other-owners-been-told-certb validator should return the expected validation outcome - valid value for `have-other-owners-been-told` - &quot;yes&quot; - pass" name="validators/appellant-submission/have-other-owners-been-told-certb validator should return the expected validation outcome - valid value for `have-other-owners-been-told` - &quot;yes&quot; - pass" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/have-other-owners-been-told-certb validator should return the expected validation outcome - valid value for `have-other-owners-been-told` - &quot;no&quot; - pass" name="validators/appellant-submission/have-other-owners-been-told-certb validator should return the expected validation outcome - valid value for `have-other-owners-been-told` - &quot;no&quot; - pass" time="0">
    </testcase>
    <testcase classname="validators/appellant-submission/have-other-owners-been-told-certb validSiteOwnershipCertBOptions should define the expected valid site ownership cert B options" name="validators/appellant-submission/have-other-owners-been-told-certb validSiteOwnershipCertBOptions should define the expected valid site ownership cert B options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="lib/documents-api-wrapper" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.566" tests="12">
    <testcase classname="lib/documents-api-wrapper createDocument should throw if fetch fails" name="lib/documents-api-wrapper createDocument should throw if fetch fails" time="0.013">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should throw if the remote API response is not ok" name="lib/documents-api-wrapper createDocument should throw if the remote API response is not ok" time="0.003">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should throw if the response code is not 200 or 202" name="lib/documents-api-wrapper createDocument should throw if the response code is not 200 or 202" time="0.003">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should throw if the document response is missing an `id`" name="lib/documents-api-wrapper createDocument should throw if the document response is missing an `id`" time="0.002">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should throw if the document response &apos;id&apos; is null" name="lib/documents-api-wrapper createDocument should throw if the document response &apos;id&apos; is null" time="0.001">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should throw if the document response &apos;id&apos; is undefined" name="lib/documents-api-wrapper createDocument should throw if the document response &apos;id&apos; is undefined" time="0.001">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should throw if the document response &apos;id&apos; is null" name="lib/documents-api-wrapper createDocument should throw if the document response &apos;id&apos; is null" time="0.001">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should throw if the document response &apos;id&apos; is undefined" name="lib/documents-api-wrapper createDocument should throw if the document response &apos;id&apos; is undefined" time="0">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should return the expected response if the fetch status is 202 with form data input" name="lib/documents-api-wrapper createDocument should return the expected response if the fetch status is 202 with form data input" time="0.002">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should return the expected response if the fetch status is 202 with form data input with name overrided" name="lib/documents-api-wrapper createDocument should return the expected response if the fetch status is 202 with form data input with name overrided" time="0.001">
    </testcase>
    <testcase classname="lib/documents-api-wrapper createDocument should return the expected response if the fetch status is 202 with data buffer input" name="lib/documents-api-wrapper createDocument should return the expected response if the fetch status is 202 with data buffer input" time="0.001">
    </testcase>
    <testcase classname="lib/documents-api-wrapper fetchDocument should return the expected response if the fetch status is 200 with form data input" name="lib/documents-api-wrapper fetchDocument should return the expected response if the fetch status is 200 with form data input" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="views/macros/cookie-banner-accepted" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.492" tests="4">
    <testcase classname="views/macros/cookie-banner-accepted should have sensible default attributes" name="views/macros/cookie-banner-accepted should have sensible default attributes" time="0.068">
    </testcase>
    <testcase classname="views/macros/cookie-banner-accepted should allow setting a custom serviceName" name="views/macros/cookie-banner-accepted should allow setting a custom serviceName" time="0.025">
    </testcase>
    <testcase classname="views/macros/cookie-banner-accepted should allow setting a custom cookiePagePath" name="views/macros/cookie-banner-accepted should allow setting a custom cookiePagePath" time="0.049">
    </testcase>
    <testcase classname="views/macros/cookie-banner-accepted should allow setting all custom attributes" name="views/macros/cookie-banner-accepted should allow setting all custom attributes" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/visible-from-road" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.41" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/visible-from-road getVisibleFromRoad should call the correct template" name="controllers/full-appeal/submit-appeal/visible-from-road getVisibleFromRoad should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/visible-from-road postVisibleFromRoad should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/visible-from-road postVisibleFromRoad should re-render the template with errors if submission validation fails" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/visible-from-road postVisibleFromRoad should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/visible-from-road postVisibleFromRoad should re-render the template with errors if an error is thrown" time="0.036">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/visible-from-road postVisibleFromRoad should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/visible-from-road postVisibleFromRoad should redirect to the correct page if `yes` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/visible-from-road postVisibleFromRoad should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/visible-from-road postVisibleFromRoad should redirect to the correct page if `no` has been selected" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/check-id-is-email-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.464" tests="5">
    <testcase classname="validators/common/check-id-is-email-address rules has a rule for the user&apos;s email" name="validators/common/check-id-is-email-address rules has a rule for the user&apos;s email" time="0.004">
    </testcase>
    <testcase classname="validators/common/check-id-is-email-address rules should have an array containing 1 rule" name="validators/common/check-id-is-email-address rules should have an array containing 1 rule" time="0">
    </testcase>
    <testcase classname="validators/common/check-id-is-email-address rules should validate a valid user id req param" name="validators/common/check-id-is-email-address rules should validate a valid user id req param" time="0.008">
    </testcase>
    <testcase classname="validators/common/check-id-is-email-address rules should validate a valid user id req param with url safe characters" name="validators/common/check-id-is-email-address rules should validate a valid user id req param with url safe characters" time="0.003">
    </testcase>
    <testcase classname="validators/common/check-id-is-email-address rules should invalidate an invalid user id req param" name="validators/common/check-id-is-email-address rules should invalidate an invalid user id req param" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/application-form" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.567" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/application-form getApplicationForm should call the correct template" name="controllers/full-appeal/submit-appeal/application-form getApplicationForm should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-form postApplicationForm should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/application-form postApplicationForm should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-form postApplicationForm should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/application-form postApplicationForm should re-render the template with errors if an error is thrown" time="0.01">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-form postApplicationForm should redirect to the correct page if valid and a file is being uploaded" name="controllers/full-appeal/submit-appeal/application-form postApplicationForm should redirect to the correct page if valid and a file is being uploaded" time="0.007">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-form postApplicationForm should redirect to the correct page if valid and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/application-form postApplicationForm should redirect to the correct page if valid and a file is not being uploaded" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/health-safety-issues" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.477" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/health-safety-issues should define the expected routes" name="routes/full-appeal/submit-appeal/health-safety-issues should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/enter-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.587" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/enter-code should define the expected routes" name="routes/full-appeal/submit-appeal/enter-code should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/numberfield" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.36" tests="9">
    <testcase classname="validators/common/numberfield should not return an error if a valid value is given" name="validators/common/numberfield should not return an error if a valid value is given" time="0.026">
    </testcase>
    <testcase classname="validators/common/numberfield should return an error if a value is not given" name="validators/common/numberfield should return an error if a value is not given" time="0.003">
    </testcase>
    <testcase classname="validators/common/numberfield should return an error if not given a numeric value" name="validators/common/numberfield should return an error if not given a numeric value" time="0.001">
    </testcase>
    <testcase classname="validators/common/numberfield should return an error if given a decimal value" name="validators/common/numberfield should return an error if given a decimal value" time="0.001">
    </testcase>
    <testcase classname="validators/common/numberfield should return an error if given a value with leading zeros" name="validators/common/numberfield should return an error if given a value with leading zeros" time="0.002">
    </testcase>
    <testcase classname="validators/common/numberfield should return an error if no min length is given and a value under the default min length is given" name="validators/common/numberfield should return an error if no min length is given and a value under the default min length is given" time="0.001">
    </testcase>
    <testcase classname="validators/common/numberfield should return an error if a min length is given and a value under the min length is given" name="validators/common/numberfield should return an error if a min length is given and a value under the min length is given" time="0.002">
    </testcase>
    <testcase classname="validators/common/numberfield should return an error if no max length is given and a value over the default max length is given" name="validators/common/numberfield should return an error if no max length is given and a value over the default max length is given" time="0.012">
    </testcase>
    <testcase classname="validators/common/numberfield should return an error if a max length is given and a value over the max length is given" name="validators/common/numberfield should return an error if a max length is given and a value over the max length is given" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/own-some-of-the-land" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.355" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/own-some-of-the-land getOwnSomeOfTheLand should call the correct template" name="controllers/full-appeal/submit-appeal/own-some-of-the-land getOwnSomeOfTheLand should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/own-some-of-the-land postOwnSomeOfTheLand should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/own-some-of-the-land postOwnSomeOfTheLand should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/own-some-of-the-land postOwnSomeOfTheLand should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/own-some-of-the-land postOwnSomeOfTheLand should re-render the template with errors if an error is thrown" time="0.01">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/own-some-of-the-land postOwnSomeOfTheLand should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/own-some-of-the-land postOwnSomeOfTheLand should redirect to the correct page if `yes` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/own-some-of-the-land postOwnSomeOfTheLand should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/own-some-of-the-land postOwnSomeOfTheLand should redirect to the correct page if `no` has been selected" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/use-existing-service-application-type" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.335" tests="1">
    <testcase classname="routes/full-appeal/use-existing-service-application-type should define the expected routes" name="routes/full-appeal/use-existing-service-application-type should define the expected routes" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="validators/householder-planning/eligibility/enforcement-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.314" tests="6">
    <testcase classname="validators/householder-planning/eligibility/enforcement-notice rules is configured with the expected rules" name="validators/householder-planning/eligibility/enforcement-notice rules is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/householder-planning/eligibility/enforcement-notice rules ruleEnforcementNotice is configured with the expected rules" name="validators/householder-planning/eligibility/enforcement-notice rules ruleEnforcementNotice is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/householder-planning/eligibility/enforcement-notice validator should return the expected validation outcome - No selection made regarding receipt of an Enforcement Notice" name="validators/householder-planning/eligibility/enforcement-notice validator should return the expected validation outcome - No selection made regarding receipt of an Enforcement Notice" time="0.005">
    </testcase>
    <testcase classname="validators/householder-planning/eligibility/enforcement-notice validator should return the expected validation outcome - User selected `yes` to receiving an Enforcement Notice" name="validators/householder-planning/eligibility/enforcement-notice validator should return the expected validation outcome - User selected `yes` to receiving an Enforcement Notice" time="0.001">
    </testcase>
    <testcase classname="validators/householder-planning/eligibility/enforcement-notice validator should return the expected validation outcome - User selected `no` to receiving an Enforcement Notice" name="validators/householder-planning/eligibility/enforcement-notice validator should return the expected validation outcome - User selected `no` to receiving an Enforcement Notice" time="0">
    </testcase>
    <testcase classname="validators/householder-planning/eligibility/enforcement-notice validEnforcementNoticeHouseholderOptions should define the expected valid enforcement notice options" name="validators/householder-planning/eligibility/enforcement-notice validEnforcementNoticeHouseholderOptions should define the expected valid enforcement notice options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/new-plans-drawings" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.452" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/new-plans-drawings getNewPlansDrawings should call the correct template" name="controllers/full-appeal/submit-appeal/new-plans-drawings getNewPlansDrawings should call the correct template" time="0.019">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-plans-drawings postNewPlansDrawings should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/new-plans-drawings postNewPlansDrawings should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-plans-drawings postNewPlansDrawings should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/new-plans-drawings postNewPlansDrawings should re-render the template with errors if an error is thrown" time="0.011">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-plans-drawings postNewPlansDrawings should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/new-plans-drawings postNewPlansDrawings should redirect to the correct page if `yes` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/new-plans-drawings postNewPlansDrawings should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/new-plans-drawings postNewPlansDrawings should redirect to the correct page if `no` has been selected" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/certificates" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.657" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/certificates should define the expected routes" name="routes/full-appeal/submit-appeal/certificates should define the expected routes" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="middleware/combine-date-inputs" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.247" tests="5">
    <testcase classname="middleware/combine-date-inputs should return early if `req.body` is not set" name="middleware/combine-date-inputs should return early if `req.body` is not set" time="0.002">
    </testcase>
    <testcase classname="middleware/combine-date-inputs should return early if no date inputs" name="middleware/combine-date-inputs should return early if no date inputs" time="0">
    </testcase>
    <testcase classname="middleware/combine-date-inputs should set the correct empty date if fields are empty" name="middleware/combine-date-inputs should set the correct empty date if fields are empty" time="0.001">
    </testcase>
    <testcase classname="middleware/combine-date-inputs should set the full date if fields are not empty" name="middleware/combine-date-inputs should set the full date if fields are not empty" time="0.001">
    </testcase>
    <testcase classname="middleware/combine-date-inputs should return multiple dates if multiple date inputs used" name="middleware/combine-date-inputs should return multiple dates if multiple date inputs used" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/appeal-site-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.415" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/appeal-site-address should define the expected routes" name="routes/full-appeal/submit-appeal/appeal-site-address should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/own-all-the-land" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.431" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/own-all-the-land should define the expected routes" name="routes/full-appeal/submit-appeal/own-all-the-land should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/file-upload" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:18" time="0.433" tests="2">
    <testcase classname="validators/common/file-upload rules should call checkSchema with the correct schema when noFilesError is not given" name="validators/common/file-upload rules should call checkSchema with the correct schema when noFilesError is not given" time="0.002">
    </testcase>
    <testcase classname="validators/common/file-upload rules should call checkSchema with the correct schema when noFilesError is given" name="validators/common/file-upload rules should call checkSchema with the correct schema when noFilesError is given" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/application-certificates-included" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.557" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/application-certificates-included should define the expected routes" name="routes/full-appeal/submit-appeal/application-certificates-included should define the expected routes" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="controllers/save-and-return" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.356" tests="2">
    <testcase classname="controllers/save-and-return postSaveAndReturn should redirect to the expected route if valid" name="controllers/save-and-return postSaveAndReturn should redirect to the expected route if valid" time="0.006">
    </testcase>
    <testcase classname="controllers/save-and-return continueAppeal should continue with appeal" name="controllers/save-and-return continueAppeal should continue with appeal" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/multifile-upload" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.538" tests="8">
    <testcase classname="validators/common/multifile-upload rules has a rule for given path `files.supporting-documents.*`" name="validators/common/multifile-upload rules has a rule for given path `files.supporting-documents.*`" time="0.004">
    </testcase>
    <testcase classname="validators/common/multifile-upload rules should have the expected number of configured rules" name="validators/common/multifile-upload rules should have the expected number of configured rules" time="0.001">
    </testcase>
    <testcase classname="validators/common/multifile-upload validator should return the expected validation outcome - undefined / empty - pass " name="validators/common/multifile-upload validator should return the expected validation outcome - undefined / empty - pass " time="0.002">
    </testcase>
    <testcase classname="validators/common/multifile-upload validator should return the expected validation outcome - files key is empty - pass" name="validators/common/multifile-upload validator should return the expected validation outcome - files key is empty - pass" time="0.001">
    </testcase>
    <testcase classname="validators/common/multifile-upload validator should return the expected validation outcome - files path is not matched - pass" name="validators/common/multifile-upload validator should return the expected validation outcome - files path is not matched - pass" time="0.001">
    </testcase>
    <testcase classname="validators/common/multifile-upload validator should return the expected validation outcome - files path is matched but mime type is wrong - fail" name="validators/common/multifile-upload validator should return the expected validation outcome - files path is matched but mime type is wrong - fail" time="0.002">
    </testcase>
    <testcase classname="validators/common/multifile-upload validator should return the expected validation outcome - files path is matched but file size is too big - fail" name="validators/common/multifile-upload validator should return the expected validation outcome - files path is matched but file size is too big - fail" time="0.001">
    </testcase>
    <testcase classname="validators/common/multifile-upload validator should return the expected validation outcome - valid file - pass" name="validators/common/multifile-upload validator should return the expected validation outcome - valid file - pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/your-planning-appeal/your-appeal-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.41" tests="1">
    <testcase classname="routes/your-planning-appeal/your-appeal-details should define the expected routes" name="routes/your-planning-appeal/your-appeal-details should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/planning-application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.447" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/planning-application-number should define the expected routes" name="routes/full-appeal/submit-appeal/planning-application-number should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/textfield" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.429" tests="7">
    <testcase classname="validators/common/textfield should not return an error if the condition does not match" name="validators/common/textfield should not return an error if the condition does not match" time="0.006">
    </testcase>
    <testcase classname="validators/common/textfield should not return an error if the condition matches with the default conditional value and a valid value is given" name="validators/common/textfield should not return an error if the condition matches with the default conditional value and a valid value is given" time="0.002">
    </testcase>
    <testcase classname="validators/common/textfield should not return an error if the condition matches with a custom conditional value and a valid value is given" name="validators/common/textfield should not return an error if the condition matches with a custom conditional value and a valid value is given" time="0.001">
    </testcase>
    <testcase classname="validators/common/textfield should not return an error if a condition is not given and a valid value is given" name="validators/common/textfield should not return an error if a condition is not given and a valid value is given" time="0.001">
    </testcase>
    <testcase classname="validators/common/textfield should return an error if no value is given" name="validators/common/textfield should return an error if no value is given" time="0.002">
    </testcase>
    <testcase classname="validators/common/textfield should return an error with the default max length and a value longer than the max length is given" name="validators/common/textfield should return an error with the default max length and a value longer than the max length is given" time="0.002">
    </testcase>
    <testcase classname="validators/common/textfield should return an error with a custom max length and a value longer than the max length is given" name="validators/common/textfield should return an error with a custom max length and a value longer than the max length is given" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="string-functions" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.27" tests="2">
    <testcase classname="string-functions capitalize returns a capitalised string" name="string-functions capitalize returns a capitalised string" time="0.011">
    </testcase>
    <testcase classname="string-functions capitalize returns an empty string if something other than a string is passed" name="string-functions capitalize returns an empty string if something other than a string is passed" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/decision-letter" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.549" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/decision-letter getDecisionLetter should call the correct template" name="controllers/full-appeal/submit-appeal/decision-letter getDecisionLetter should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/decision-letter postDecisionLetter should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/decision-letter postDecisionLetter should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/decision-letter postDecisionLetter should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/decision-letter postDecisionLetter should re-render the template with errors if an error is thrown" time="0.044">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/decision-letter postDecisionLetter should redirect to the correct page if valid and a file is being uploaded" name="controllers/full-appeal/submit-appeal/decision-letter postDecisionLetter should redirect to the correct page if valid and a file is being uploaded" time="0.012">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/decision-letter postDecisionLetter should redirect to the correct page if valid and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/decision-letter postDecisionLetter should redirect to the correct page if valid and a file is not being uploaded" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="validators/householder-planning/decision-date-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.513" tests="4">
    <testcase classname="validators/householder-planning/decision-date-householder rules has a rule for days in the future" name="validators/householder-planning/decision-date-householder rules has a rule for days in the future" time="0.005">
    </testcase>
    <testcase classname="validators/householder-planning/decision-date-householder validator should return the expected validation outcome - invalid (in future) - fail" name="validators/householder-planning/decision-date-householder validator should return the expected validation outcome - invalid (in future) - fail" time="0.004">
    </testcase>
    <testcase classname="validators/householder-planning/decision-date-householder validator should return the expected validation outcome - valid date - same day - pass" name="validators/householder-planning/decision-date-householder validator should return the expected validation outcome - valid date - same day - pass" time="0.001">
    </testcase>
    <testcase classname="validators/householder-planning/decision-date-householder validator should return the expected validation outcome - valid date - pass" name="validators/householder-planning/decision-date-householder validator should return the expected validation outcome - valid date - pass" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/enforcement-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.415" tests="5">
    <testcase classname="controllers/full-appeal/enforcement-notice getEnforcementNotice should call the correct template" name="controllers/full-appeal/enforcement-notice getEnforcementNotice should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/enforcement-notice postEnforcementNotice should re-render the template with errors if there is any validation error" name="controllers/full-appeal/enforcement-notice postEnforcementNotice should re-render the template with errors if there is any validation error" time="0.016">
    </testcase>
    <testcase classname="controllers/full-appeal/enforcement-notice postEnforcementNotice should re-render the template with errors if there is any api call error" name="controllers/full-appeal/enforcement-notice postEnforcementNotice should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/enforcement-notice postEnforcementNotice should redirect to `/full-appeal/use-a-different-service` if `enforcement-notice` is `yes`" name="controllers/full-appeal/enforcement-notice postEnforcementNotice should redirect to `/full-appeal/use-a-different-service` if `enforcement-notice` is `yes`" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/enforcement-notice postEnforcementNotice should redirect to `/before-you-start/can-use-service` if `enforcement-notice` is `no`" name="controllers/full-appeal/enforcement-notice postEnforcementNotice should redirect to `/before-you-start/can-use-service` if `enforcement-notice` is `no`" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/appellant-submission/submission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.474" tests="5">
    <testcase classname="validators/appellant-submission/submission rules is configured with the expected rules" name="validators/appellant-submission/submission rules is configured with the expected rules" time="0.051">
    </testcase>
    <testcase classname="validators/appellant-submission/submission rules should have the expected number of configured rules" name="validators/appellant-submission/submission rules should have the expected number of configured rules" time="0">
    </testcase>
    <testcase classname="validators/appellant-submission/submission validator should return the expected validation outcome - undefined - empty" name="validators/appellant-submission/submission validator should return the expected validation outcome - undefined - empty" time="0.004">
    </testcase>
    <testcase classname="validators/appellant-submission/submission validator should return the expected validation outcome - invalid value - fail" name="validators/appellant-submission/submission validator should return the expected validation outcome - invalid value - fail" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/submission validator should return the expected validation outcome - valid value - &quot;i-agree&quot; - pass" name="validators/appellant-submission/submission validator should return the expected validation outcome - valid value - &quot;i-agree&quot; - pass" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="controllers/before-you-start/use-existing-service-development-type" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.313" tests="1">
    <testcase classname="controllers/before-you-start/use-existing-service-development-type getNoDecision should call the correct template" name="controllers/before-you-start/use-existing-service-development-type getNoDecision should call the correct template" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="validators/appellant-submission/application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.392" tests="5">
    <testcase classname="validators/appellant-submission/application-number rules is configured with the expected rules" name="validators/appellant-submission/application-number rules is configured with the expected rules" time="0.005">
    </testcase>
    <testcase classname="validators/appellant-submission/application-number validator should return the expected validation outcome - valid planning application number provided" name="validators/appellant-submission/application-number validator should return the expected validation outcome - valid planning application number provided" time="0.003">
    </testcase>
    <testcase classname="validators/appellant-submission/application-number validator should return the expected validation outcome - planning application number not provided" name="validators/appellant-submission/application-number validator should return the expected validation outcome - planning application number not provided" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/application-number validator should return the expected validation outcome - planning application number provided but empty" name="validators/appellant-submission/application-number validator should return the expected validation outcome - planning application number provided but empty" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/application-number validator should return the expected validation outcome - planning application number provided but exceeds 30 characters" name="validators/appellant-submission/application-number validator should return the expected validation outcome - planning application number provided but exceeds 30 characters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/are-you-a-tenant" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.491" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/are-you-a-tenant should define the expected routes" name="routes/full-appeal/submit-appeal/are-you-a-tenant should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="validators/custom/date-input" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:19" time="0.538" tests="23">
    <testcase classname="validators/custom/date-input rules has a rule to check for empty day input" name="validators/custom/date-input rules has a rule to check for empty day input" time="0.016">
    </testcase>
    <testcase classname="validators/custom/date-input rules has a rule to check for empty month input" name="validators/custom/date-input rules has a rule to check for empty month input" time="0.001">
    </testcase>
    <testcase classname="validators/custom/date-input rules has a rule for check for empty year input" name="validators/custom/date-input rules has a rule for check for empty year input" time="0.002">
    </testcase>
    <testcase classname="validators/custom/date-input rules has a rule to check for valid day input" name="validators/custom/date-input rules has a rule to check for valid day input" time="0.002">
    </testcase>
    <testcase classname="validators/custom/date-input rules has a rule to check for valid month input" name="validators/custom/date-input rules has a rule to check for valid month input" time="0.001">
    </testcase>
    <testcase classname="validators/custom/date-input rules has a rule for valid year input" name="validators/custom/date-input rules has a rule for valid year input" time="0.001">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (all empty) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (all empty) - fail" time="0.019">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (empty day, month) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (empty day, month) - fail" time="0.003">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (empty day, year) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (empty day, year) - fail" time="0.001">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (empty day) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (empty day) - fail" time="0.001">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (empty month, year) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (empty month, year) - fail" time="0.002">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (empty month) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (empty month) - fail" time="0.001">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (empty year) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (empty year) - fail" time="0.003">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (day not integer) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (day not integer) - fail" time="0.003">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (day &gt; 31) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (day &gt; 31) - fail" time="0.001">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (31 day in 30 day month) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (31 day in 30 day month) - fail" time="0.002">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (29 days in February when not leap year) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (29 days in February when not leap year) - fail" time="0.002">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (month not numeric) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (month not numeric) - fail" time="0.004">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (impossible number months) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (impossible number months) - fail" time="0.003">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (year not numeric) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (year not numeric) - fail" time="0.002">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - invalid (year outside range) - fail" name="validators/custom/date-input validator should return the expected validation outcome - invalid (year outside range) - fail" time="0.009">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - valid date (29 days in leap year) - pass" name="validators/custom/date-input validator should return the expected validation outcome - valid date (29 days in leap year) - pass" time="0.001">
    </testcase>
    <testcase classname="validators/custom/date-input validator should return the expected validation outcome - valid date - pass" name="validators/custom/date-input validator should return the expected validation outcome - valid date - pass" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="controllers/before-you-start/before-you-start-first-page" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.25" tests="1">
    <testcase classname="controllers/before-you-start/before-you-start-first-page Test getBeforeYouStartFirstPage method calls the correct template" name="controllers/before-you-start/before-you-start-first-page Test getBeforeYouStartFirstPage method calls the correct template" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/final-comment/final-comment" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.382" tests="1">
    <testcase classname="routes/final-comment/final-comment should define the expected routes" name="routes/final-comment/final-comment should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="validators/appellant-submission/site-ownership" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.361" tests="7">
    <testcase classname="validators/appellant-submission/site-ownership rules is configured with the expected rules" name="validators/appellant-submission/site-ownership rules is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/appellant-submission/site-ownership rules ruleSiteOwnership is configured with the expected rules" name="validators/appellant-submission/site-ownership rules ruleSiteOwnership is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/appellant-submission/site-ownership validator should return the expected validation outcome - undefined - empty" name="validators/appellant-submission/site-ownership validator should return the expected validation outcome - undefined - empty" time="0.004">
    </testcase>
    <testcase classname="validators/appellant-submission/site-ownership validator should return the expected validation outcome - invalid value for `site-ownership` - fail" name="validators/appellant-submission/site-ownership validator should return the expected validation outcome - invalid value for `site-ownership` - fail" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-ownership validator should return the expected validation outcome - valid value for `site-ownership` - &quot;yes&quot; - pass" name="validators/appellant-submission/site-ownership validator should return the expected validation outcome - valid value for `site-ownership` - &quot;yes&quot; - pass" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-ownership validator should return the expected validation outcome - valid value for `site-ownership` - &quot;no&quot; - pass" name="validators/appellant-submission/site-ownership validator should return the expected validation outcome - valid value for `site-ownership` - &quot;no&quot; - pass" time="0.001">
    </testcase>
    <testcase classname="validators/appellant-submission/site-ownership validSiteOwnershipOptions should define the expected valid site ownership options" name="validators/appellant-submission/site-ownership validSiteOwnershipOptions should define the expected valid site ownership options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/final-comment/comments-question" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.461" tests="1">
    <testcase classname="routes/final-comment/comments-question should define the expected routes" name="routes/final-comment/comments-question should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/local-planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.351" tests="7">
    <testcase classname="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the getPlanningDepartment method calls the correct template" name="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the getPlanningDepartment method calls the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the getPlanningDepartment method calls the correct template" name="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the getPlanningDepartment method calls the correct template" time="0">
    </testcase>
    <testcase classname="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the getPlanningDepartment method with existing LPD calls the correct template" name="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the getPlanningDepartment method with existing LPD calls the correct template" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the postPlanningDepartment method call with handled department" name="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the postPlanningDepartment method call with handled department" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the getPlanningDepartment method call with ineligible department" name="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the getPlanningDepartment method call with ineligible department" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the postPlanningDepartment method call on error" name="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests Test the postPlanningDepartment method call on error" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests should log an error if the api call fails, and remain on the same page" name="controllers/full-appeal/local-planning-department Local Planning Department Controller Tests should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/appeal-householder-decision/email-address-confirmed" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.381" tests="1">
    <testcase classname="routes/appeal-householder-decision/email-address-confirmed should define the expected routes" name="routes/appeal-householder-decision/email-address-confirmed should define the expected routes" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/application-certificates-included" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.408" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/application-certificates-included getApplicationCertificatesIncluded calls correct template" name="controllers/full-appeal/submit-appeal/application-certificates-included getApplicationCertificatesIncluded calls correct template" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-certificates-included postApplicationCertificatesIncluded should re-render the template with errors if submission validtion fails" name="controllers/full-appeal/submit-appeal/application-certificates-included postApplicationCertificatesIncluded should re-render the template with errors if submission validtion fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-certificates-included postApplicationCertificatesIncluded should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/application-certificates-included postApplicationCertificatesIncluded should re-render the template with errors if an error is thrown" time="0.011">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-certificates-included postApplicationCertificatesIncluded it should redirect to the correct page if did-you-submit-separate-certificate is yes" name="controllers/full-appeal/submit-appeal/application-certificates-included postApplicationCertificatesIncluded it should redirect to the correct page if did-you-submit-separate-certificate is yes" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-certificates-included postApplicationCertificatesIncluded it should redirect to the correct page and remove any uploaded files if did-you-submit-separate-certificate is no" name="controllers/full-appeal/submit-appeal/application-certificates-included postApplicationCertificatesIncluded it should redirect to the correct page and remove any uploaded files if did-you-submit-separate-certificate is no" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/householder-planning/date-decision-due-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.464" tests="3">
    <testcase classname="validators/householder-planning/date-decision-due-householder rules has a rule for days in the future" name="validators/householder-planning/date-decision-due-householder rules has a rule for days in the future" time="0.008">
    </testcase>
    <testcase classname="validators/householder-planning/date-decision-due-householder validator should return the expected validation outcome - invalid (in future) - fail" name="validators/householder-planning/date-decision-due-householder validator should return the expected validation outcome - invalid (in future) - fail" time="0.003">
    </testcase>
    <testcase classname="validators/householder-planning/date-decision-due-householder validator should return the expected validation outcome - valid date - pass" name="validators/householder-planning/date-decision-due-householder validator should return the expected validation outcome - valid date - pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/full-appeal/original-applicant" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.41" tests="5">
    <testcase classname="validators/full-appeal/original-applicant rules is configured with the expected rules" name="validators/full-appeal/original-applicant rules is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/full-appeal/original-applicant rules areYouTheOriginalAppellant is configured with the expected rules" name="validators/full-appeal/original-applicant rules areYouTheOriginalAppellant is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/original-applicant validator should return the expected validation outcome - No selection made" name="validators/full-appeal/original-applicant validator should return the expected validation outcome - No selection made" time="0.006">
    </testcase>
    <testcase classname="validators/full-appeal/original-applicant validator should return the expected validation outcome - The planning application was made in my name" name="validators/full-appeal/original-applicant validator should return the expected validation outcome - The planning application was made in my name" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/original-applicant validator should return the expected validation outcome - The planning application was not made in my name" name="validators/full-appeal/original-applicant validator should return the expected validation outcome - The planning application was not made in my name" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/contact-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.442" tests="6">
    <testcase classname="validators/contact-details rules has a rule for the applicant&apos;s name" name="validators/contact-details rules has a rule for the applicant&apos;s name" time="0.005">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - undefined - empty" name="validators/contact-details validator should return the expected validation outcome - undefined - empty" time="0.004">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - invalid values 1 - fail" name="validators/contact-details validator should return the expected validation outcome - invalid values 1 - fail" time="0.024">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - invalid values 2 - fail - name too short" name="validators/contact-details validator should return the expected validation outcome - invalid values 2 - fail - name too short" time="0.01">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - invalid values 2 - fail - name too long" name="validators/contact-details validator should return the expected validation outcome - invalid values 2 - fail - name too long" time="0.007">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - valid values - pass" name="validators/contact-details validator should return the expected validation outcome - valid values - pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/why-hearing" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.687" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/why-hearing getWhyHearing should call the correct template" name="controllers/full-appeal/submit-appeal/why-hearing getWhyHearing should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/why-hearing postWhyHearing should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/why-hearing postWhyHearing should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/why-hearing postWhyHearing should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/why-hearing postWhyHearing should re-render the template with errors if an error is thrown" time="0.011">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/why-hearing postWhyHearing should redirect to the correct page if a valid value has been entered" name="controllers/full-appeal/submit-appeal/why-hearing postWhyHearing should redirect to the correct page if a valid value has been entered" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/full-appeal/status-appeal-documents-section.js" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.278" tests="5">
    <testcase classname="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return NOT_STARTED if &apos;Your appeal statement&apos; page is NOT_STARTED" name="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return NOT_STARTED if &apos;Your appeal statement&apos; page is NOT_STARTED" time="0.019">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return COMPLETED if all pages COMPLETED for hasPlansDrawings=false, hasSupportingDocuments=false" name="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return COMPLETED if all pages COMPLETED for hasPlansDrawings=false, hasSupportingDocuments=false" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return IN_PROGRESS if not all pages COMPLETED for hasPlansDrawings=false, hasSupportingDocuments=false" name="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return IN_PROGRESS if not all pages COMPLETED for hasPlansDrawings=false, hasSupportingDocuments=false" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return COMPLETED if all pages COMPLETED for hasPlansDrawings=true, hasSupportingDocuments=false" name="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return COMPLETED if all pages COMPLETED for hasPlansDrawings=true, hasSupportingDocuments=false" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return COMPLETED if all pages COMPLETED for hasPlansDrawings=true, hasSupportingDocuments=true" name="services/task-status/full-appeal/status-appeal-documents-section.js #statusAppealDocumentsSection should return COMPLETED if all pages COMPLETED for hasPlansDrawings=true, hasSupportingDocuments=true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/guidance-pages" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.489" tests="1">
    <testcase classname="routes/guidance-pages should define the expected routes" name="routes/guidance-pages should define the expected routes" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/new-plans-drawings" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.555" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/new-plans-drawings should define the expected routes" name="routes/full-appeal/submit-appeal/new-plans-drawings should define the expected routes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="views/components/flash-message" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.391" tests="3">
    <testcase classname="views/components/flash-message should render nothing if flashMessages.length &lt;= 0" name="views/components/flash-message should render nothing if flashMessages.length &lt;= 0" time="0.016">
    </testcase>
    <testcase classname="views/components/flash-message should render one flash message" name="views/components/flash-message should render one flash message" time="0.011">
    </testcase>
    <testcase classname="views/components/flash-message should render multiple flash message" name="views/components/flash-message should render multiple flash message" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/schemas/check-document-upload-schema" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.258" tests="5">
    <testcase classname="validators/common/schemas/check-document-upload-schema should return true if req.files contains files" name="validators/common/schemas/check-document-upload-schema should return true if req.files contains files" time="0.012">
    </testcase>
    <testcase classname="validators/common/schemas/check-document-upload-schema should return true if req.files does not contain files but there are uploaded files" name="validators/common/schemas/check-document-upload-schema should return true if req.files does not contain files but there are uploaded files" time="0.002">
    </testcase>
    <testcase classname="validators/common/schemas/check-document-upload-schema should return true if there are uploaded files and only some are being removed" name="validators/common/schemas/check-document-upload-schema should return true if there are uploaded files and only some are being removed" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/check-document-upload-schema should throw error if there are uploaded files but all are being removed" name="validators/common/schemas/check-document-upload-schema should throw error if there are uploaded files but all are being removed" time="0">
    </testcase>
    <testcase classname="validators/common/schemas/check-document-upload-schema should throw error if no files being uploaded/already uploaded" name="validators/common/schemas/check-document-upload-schema should throw error if no files being uploaded/already uploaded" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/task-list" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:20" time="0.862" tests="1">
    <testcase classname="controllers/full-appeal/submit-appeal/task-list getTaskList All the tasks except check answers should be in not started" name="controllers/full-appeal/submit-appeal/task-list getTaskList All the tasks except check answers should be in not started" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="validators/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.46" tests="4">
    <testcase classname="validators/planning-department rules is configured with the expected rules" name="validators/planning-department rules is configured with the expected rules" time="0.004">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - no error yes" name="validators/planning-department validator should return the expected validation outcome - no error yes" time="0.003">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - no error no" name="validators/planning-department validator should return the expected validation outcome - no error no" time="0.001">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - error" name="validators/planning-department validator should return the expected validation outcome - error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/full-appeal/decision-date" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.528" tests="3">
    <testcase classname="validators/full-appeal/decision-date rules has a rule for days in the future" name="validators/full-appeal/decision-date rules has a rule for days in the future" time="0.004">
    </testcase>
    <testcase classname="validators/full-appeal/decision-date validator should return the expected validation outcome - invalid (in future) - fail" name="validators/full-appeal/decision-date validator should return the expected validation outcome - invalid (in future) - fail" time="0.004">
    </testcase>
    <testcase classname="validators/full-appeal/decision-date validator should return the expected validation outcome - valid date - pass" name="validators/full-appeal/decision-date validator should return the expected validation outcome - valid date - pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/application-form" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.709" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/application-form should define the expected routes" name="routes/full-appeal/submit-appeal/application-form should define the expected routes" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/telling-the-tenants" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.779" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/telling-the-tenants should define the expected routes" name="routes/full-appeal/submit-appeal/telling-the-tenants should define the expected routes" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="middleware/flash-message-cleanup" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.316" tests="3">
    <testcase classname="middleware/flash-message-cleanup falls back to an empty array if req.session.flashMessages is undefined" name="middleware/flash-message-cleanup falls back to an empty array if req.session.flashMessages is undefined" time="0.004">
    </testcase>
    <testcase classname="middleware/flash-message-cleanup works with a single flash message" name="middleware/flash-message-cleanup works with a single flash message" time="0.001">
    </testcase>
    <testcase classname="middleware/flash-message-cleanup works with a more than one flash message" name="middleware/flash-message-cleanup works with a more than one flash message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/appeal-already-submitted" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.292" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/appeal-already-submitted should define the expected routes" name="routes/full-appeal/submit-appeal/appeal-already-submitted should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/householder-planning-permission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.6" tests="1">
    <testcase classname="routes/eligibility/householder-planning-permission should define the expected routes" name="routes/eligibility/householder-planning-permission should define the expected routes" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="lib/get-previous-page-path" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.314" tests="6">
    <testcase classname="lib/get-previous-page-path unhappy path - should return root url - referer undefined" name="lib/get-previous-page-path unhappy path - should return root url - referer undefined" time="0.003">
    </testcase>
    <testcase classname="lib/get-previous-page-path unhappy path - should return root url - baseUrl undefined" name="lib/get-previous-page-path unhappy path - should return root url - baseUrl undefined" time="0">
    </testcase>
    <testcase classname="lib/get-previous-page-path unhappy path - should return root url - empty referer" name="lib/get-previous-page-path unhappy path - should return root url - empty referer" time="0">
    </testcase>
    <testcase classname="lib/get-previous-page-path unhappy path - should return root url - referer and base urls do not match" name="lib/get-previous-page-path unhappy path - should return root url - referer and base urls do not match" time="0">
    </testcase>
    <testcase classname="lib/get-previous-page-path happy path - should return the expected path - /some" name="lib/get-previous-page-path happy path - should return the expected path - /some" time="0">
    </testcase>
    <testcase classname="lib/get-previous-page-path happy path - should return the expected path - /some/nested/path?and=stuff" name="lib/get-previous-page-path happy path - should return the expected path - /some/nested/path?and=stuff" time="0">
    </testcase>
  </testsuite>
  <testsuite name="/lib/full-appeal/map-planning-application" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.253" tests="2">
    <testcase classname="/lib/full-appeal/map-planning-application should map full appeal planning application" name="/lib/full-appeal/map-planning-application should map full appeal planning application" time="0.002">
    </testcase>
    <testcase classname="/lib/full-appeal/map-planning-application should map householder planning application" name="/lib/full-appeal/map-planning-application should map householder planning application" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/eligibility/householder-planning-permission" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.419" tests="6">
    <testcase classname="controllers/eligibility/householder-planning-permission getServiceOnlyForHouseholderPlanningPermission calls the correct template" name="controllers/eligibility/householder-planning-permission getServiceOnlyForHouseholderPlanningPermission calls the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/eligibility/householder-planning-permission getHouseholderPlanningPermission should call the correct template" name="controllers/eligibility/householder-planning-permission getHouseholderPlanningPermission should call the correct template" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/householder-planning-permission postHouseholderPlanningPermission should re-render the template with errors if there is any validation error" name="controllers/eligibility/householder-planning-permission postHouseholderPlanningPermission should re-render the template with errors if there is any validation error" time="0.03">
    </testcase>
    <testcase classname="controllers/eligibility/householder-planning-permission postHouseholderPlanningPermission should re-render the template with errors if there is any api call error" name="controllers/eligibility/householder-planning-permission postHouseholderPlanningPermission should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/householder-planning-permission postHouseholderPlanningPermission &apos;should redirect to &apos;/eligibility/granted-or-refused-permission&apos; if &apos;householder-planning-permission&apos; is &apos;yes&apos;" name="controllers/eligibility/householder-planning-permission postHouseholderPlanningPermission &apos;should redirect to &apos;/eligibility/granted-or-refused-permission&apos; if &apos;householder-planning-permission&apos; is &apos;yes&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/householder-planning-permission postHouseholderPlanningPermission &apos;should redirect to &apos;/eligibility/householder-planning-permission-out&apos; if &apos;householder-planning-permission&apos; is &apos;no&apos;" name="controllers/eligibility/householder-planning-permission postHouseholderPlanningPermission &apos;should redirect to &apos;/eligibility/householder-planning-permission-out&apos; if &apos;householder-planning-permission&apos; is &apos;no&apos;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/full-appeal/status-planning-application-documents-section.js" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.676" tests="7">
    <testcase classname="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return NOT_STARTED if Planning application form page is NOT_STARTED" name="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return NOT_STARTED if Planning application form page is NOT_STARTED" time="0.003">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return COMPLETED if all pages COMPLETED for designAccessStatement.isSubmitted=false" name="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return COMPLETED if all pages COMPLETED for designAccessStatement.isSubmitted=false" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return IN_PROGRESS if not all pages COMPLETED for designAccessStatement.isSubmitted=false" name="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return IN_PROGRESS if not all pages COMPLETED for designAccessStatement.isSubmitted=false" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return COMPLETED if all pages COMPLETED for designAccessStatement.isSubmitted=true" name="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return COMPLETED if all pages COMPLETED for designAccessStatement.isSubmitted=true" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return IN_PROGRESS if Decision Letter page is NOT_STARTED and Application decision is `granted`" name="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return IN_PROGRESS if Decision Letter page is NOT_STARTED and Application decision is `granted`" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return IN_PROGRESS if Decision Letter page is NOT_STARTED and Application decision is `refused`" name="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return IN_PROGRESS if Decision Letter page is NOT_STARTED and Application decision is `refused`" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return COMPLETED if Decision Letter page is NOT_STARTED and Application decision is `nodecisionreceived`" name="services/task-status/full-appeal/status-planning-application-documents-section.js #statusPlanningApplicationDocumentsSection should return COMPLETED if Decision Letter page is NOT_STARTED and Application decision is `nodecisionreceived`" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/draft-statement-common-ground" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.564" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/draft-statement-common-ground getDraftStatementCommonGround should call the correct template" name="controllers/full-appeal/submit-appeal/draft-statement-common-ground getDraftStatementCommonGround should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/draft-statement-common-ground postDraftStatementCommonGround should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/draft-statement-common-ground postDraftStatementCommonGround should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/draft-statement-common-ground postDraftStatementCommonGround should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/draft-statement-common-ground postDraftStatementCommonGround should re-render the template with errors if an error is thrown" time="0.03">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/draft-statement-common-ground postDraftStatementCommonGround should redirect to the correct page if valid and a file is being uploaded" name="controllers/full-appeal/submit-appeal/draft-statement-common-ground postDraftStatementCommonGround should redirect to the correct page if valid and a file is being uploaded" time="0.006">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/draft-statement-common-ground postDraftStatementCommonGround should redirect to the correct page if valid and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/draft-statement-common-ground postDraftStatementCommonGround should redirect to the correct page if valid and a file is not being uploaded" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="views/lpa/your-appeals" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:21" time="0.746" tests="2">
    <testcase classname="views/lpa/your-appeals when a user navigates to the your-appeals page should render the page title as expected" name="views/lpa/your-appeals when a user navigates to the your-appeals page should render the page title as expected" time="0.204">
    </testcase>
    <testcase classname="views/lpa/your-appeals when a user navigates to the your-appeals page should render the page heading as expected" name="views/lpa/your-appeals when a user navigates to the your-appeals page should render the page heading as expected" time="0.159">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie-preferences-page" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.38" tests="1">
    <testcase classname="lib/client-side/cookie-preferences-page calls the expected functions" name="lib/client-side/cookie-preferences-page calls the expected functions" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="validators/eligibility/decision-date" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.563" tests="3">
    <testcase classname="validators/eligibility/decision-date rules has a rule for days in the future" name="validators/eligibility/decision-date rules has a rule for days in the future" time="0.004">
    </testcase>
    <testcase classname="validators/eligibility/decision-date validator should return the expected validation outcome - invalid (in future) - fail" name="validators/eligibility/decision-date validator should return the expected validation outcome - invalid (in future) - fail" time="0.004">
    </testcase>
    <testcase classname="validators/eligibility/decision-date validator should return the expected validation outcome - valid date - pass" name="validators/eligibility/decision-date validator should return the expected validation outcome - valid date - pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/original-applicant" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.721" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/original-applicant should define the expected routes" name="routes/full-appeal/submit-appeal/original-applicant should define the expected routes" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="views/macros/bool-to-sentence-case" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.554" tests="3">
    <testcase classname="views/macros/bool-to-sentence-case should handle null input" name="views/macros/bool-to-sentence-case should handle null input" time="0.041">
    </testcase>
    <testcase classname="views/macros/bool-to-sentence-case should display &apos;Yes&apos; whene value is true" name="views/macros/bool-to-sentence-case should display &apos;Yes&apos; whene value is true" time="0.021">
    </testcase>
    <testcase classname="views/macros/bool-to-sentence-case should display &apos;No&apos; whene value is false" name="views/macros/bool-to-sentence-case should display &apos;No&apos; whene value is false" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="healthchecks" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.401" tests="1">
    <testcase classname="healthchecks should configure the health checks" name="healthchecks should configure the health checks" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/schemas/multifile-upload-schema" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.286" tests="3">
    <testcase classname="validators/common/schemas/multifile-upload-schema has a defined custom schema object" name="validators/common/schemas/multifile-upload-schema has a defined custom schema object" time="0.003">
    </testcase>
    <testcase classname="validators/common/schemas/multifile-upload-schema schema[path].custom.options should call the validMimeType validator" name="validators/common/schemas/multifile-upload-schema schema[path].custom.options should call the validMimeType validator" time="0.001">
    </testcase>
    <testcase classname="validators/common/schemas/multifile-upload-schema schema[path].custom.options should call the validateFileSize validator" name="validators/common/schemas/multifile-upload-schema schema[path].custom.options should call the validateFileSize validator" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/applicant-name" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.358" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/applicant-name getApplicantName should call the correct template" name="controllers/full-appeal/submit-appeal/applicant-name getApplicantName should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/applicant-name postApplicantName should re-render the template with errors if there is any validator error" name="controllers/full-appeal/submit-appeal/applicant-name postApplicantName should re-render the template with errors if there is any validator error" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/applicant-name postApplicantName should re-render the template with errors if there is any api call error" name="controllers/full-appeal/submit-appeal/applicant-name postApplicantName should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/applicant-name postApplicantName should redirect to the task list if valid" name="controllers/full-appeal/submit-appeal/applicant-name postApplicantName should redirect to the task list if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa/your-email-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.478" tests="1">
    <testcase classname="routes/lpa/your-email-address should define the expected routes" name="routes/lpa/your-email-address should define the expected routes" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="controllers/eligibility/appeal-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.485" tests="2">
    <testcase classname="controllers/eligibility/appeal-statement getNoDecision should call the correct template" name="controllers/eligibility/appeal-statement getNoDecision should call the correct template" time="0.009">
    </testcase>
    <testcase classname="controllers/eligibility/appeal-statement postAppealStatement should redirect " name="controllers/eligibility/appeal-statement postAppealStatement should redirect " time="0">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/google-analytics" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.563" tests="2">
    <testcase classname="lib/client-side/google-analytics initialiseGoogleAnalytics when the Google Tag Manager feature flag is false" name="lib/client-side/google-analytics initialiseGoogleAnalytics when the Google Tag Manager feature flag is false" time="0.038">
    </testcase>
    <testcase classname="lib/client-side/google-analytics initialiseGoogleAnalytics when the Google Tag Manager feature flag is true" name="lib/client-side/google-analytics initialiseGoogleAnalytics when the Google Tag Manager feature flag is true" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submnit-appeal/applicant-name" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:22" time="0.65" tests="1">
    <testcase classname="routes/full-appeal/submnit-appeal/applicant-name should define the expected routes" name="routes/full-appeal/submnit-appeal/applicant-name should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/google-tag-manager" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.311" tests="2">
    <testcase classname="lib/client-side/google-tag-manager grant consent when the Google Tag Manager applyConsent is called" name="lib/client-side/google-tag-manager grant consent when the Google Tag Manager applyConsent is called" time="0.004">
    </testcase>
    <testcase classname="lib/client-side/google-tag-manager deny consent when the Google Tag Manager denyConsent is called" name="lib/client-side/google-tag-manager deny consent when the Google Tag Manager denyConsent is called" time="0">
    </testcase>
  </testsuite>
  <testsuite name="validators/full-appeal/appeal-site-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.378" tests="24">
    <testcase classname="validators/full-appeal/appeal-site-address rules should have the expected number of rules" name="validators/full-appeal/appeal-site-address rules should have the expected number of rules" time="0.004">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address rules ruleAddressLine1 is configured with the expected rules" name="validators/full-appeal/appeal-site-address rules ruleAddressLine1 is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address rules ruleAddressLine2 is configured with the expected rules" name="validators/full-appeal/appeal-site-address rules ruleAddressLine2 is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address rules ruleAddressTownCity is configured with the expected rules" name="validators/full-appeal/appeal-site-address rules ruleAddressTownCity is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address rules ruleAddressCounty is configured with the expected rules" name="validators/full-appeal/appeal-site-address rules ruleAddressCounty is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address rules ruleAddressPostCode is configured with the expected rules" name="validators/full-appeal/appeal-site-address rules ruleAddressPostCode is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - full address provided" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - full address provided" time="0.006">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - minimum address provided" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - minimum address provided" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - address line 2 is missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - address line 2 is missing" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - town / city is missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - town / city is missing" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - county is missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - valid - county is missing" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-one is missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-one is missing" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-postcode is missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-postcode is missing" time="0.012">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-one (required) and site-county (optional) are missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-one (required) and site-county (optional) are missing" time="0.003">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-one and site-postcode are missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-one and site-postcode are missing" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-county (optional) and site-postcode (required) are missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-county (optional) and site-postcode (required) are missing" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - all fields are missing" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - all fields are missing" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-one is too long" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-one is too long" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-two is too long" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-address-line-two is too long" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-town-city is too long" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-town-city is too long" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-county is too long" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-county is too long" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-postcode is too long" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-postcode is too long" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-postcode should begin with a letter" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-postcode should begin with a letter" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-postcode can&apos;t be only letters" name="validators/full-appeal/appeal-site-address validator should return the expected validation outcome - invalid - site-postcode can&apos;t be only letters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/confirmation" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.363" tests="2">
    <testcase classname="controllers/appellant-submission/confirmation getConfirmation should ensure req.session.appeal is reset" name="controllers/appellant-submission/confirmation getConfirmation should ensure req.session.appeal is reset" time="0.006">
    </testcase>
    <testcase classname="controllers/appellant-submission/confirmation getConfirmation should call the correct template" name="controllers/appellant-submission/confirmation getConfirmation should call the correct template" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/telling-the-tenants" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.447" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/telling-the-tenants getTellingTheTenants should call the correct template" name="controllers/full-appeal/submit-appeal/telling-the-tenants getTellingTheTenants should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/telling-the-tenants postTellingTheTenants should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/telling-the-tenants postTellingTheTenants should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/telling-the-tenants postTellingTheTenants should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/telling-the-tenants postTellingTheTenants should re-render the template with errors if an error is thrown" time="0.014">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/telling-the-tenants postTellingTheTenants should redirect to the correct page user confirms the page" name="controllers/full-appeal/submit-appeal/telling-the-tenants postTellingTheTenants should redirect to the correct page user confirms the page" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/use-existing-service-development-type" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.238" tests="1">
    <testcase classname="routes/use-existing-service-development-type should define the expected routes" name="routes/use-existing-service-development-type should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/contact-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.433" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/contact-details getContactDetails should call the correct template" name="controllers/full-appeal/submit-appeal/contact-details getContactDetails should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/contact-details postContactDetails should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/contact-details postContactDetails should re-render the template with errors if submission validation fails" time="0.019">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/contact-details postContactDetails should log an error if the api call fails, and remain on the same page" name="controllers/full-appeal/submit-appeal/contact-details postContactDetails should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/contact-details postContactDetails should redirect to task list if valid and original appellant" name="controllers/full-appeal/submit-appeal/contact-details postContactDetails should redirect to task list if valid and original appellant" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/lpa-dashboard/email-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.465" tests="4">
    <testcase classname="controllers/lpa-dashboard/email-address getEmailAddress should render the view" name="controllers/lpa-dashboard/email-address getEmailAddress should render the view" time="0.003">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/email-address postEmailAddress should redirect to confirm page" name="controllers/lpa-dashboard/email-address postEmailAddress should redirect to confirm page" time="0">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/email-address postEmailAddress should store the new user email address in session" name="controllers/lpa-dashboard/email-address postEmailAddress should store the new user email address in session" time="0">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/email-address postEmailAddress should re-render the template with errors if submission validation fails" name="controllers/lpa-dashboard/email-address postEmailAddress should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/health-safety-issues" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.521" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/health-safety-issues getHealthSafetyIssues should call the correct template" name="controllers/full-appeal/submit-appeal/health-safety-issues getHealthSafetyIssues should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/health-safety-issues postHealthSafetyIssues should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/health-safety-issues postHealthSafetyIssues should re-render the template with errors if submission validation fails" time="0.007">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/health-safety-issues postHealthSafetyIssues should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/health-safety-issues postHealthSafetyIssues should re-render the template with errors if an error is thrown" time="0.018">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/health-safety-issues postHealthSafetyIssues should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/health-safety-issues postHealthSafetyIssues should redirect to the correct page if `yes` has been selected" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/health-safety-issues postHealthSafetyIssues should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/health-safety-issues postHealthSafetyIssues should redirect to the correct page if `no` has been selected" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa/enter-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.464" tests="1">
    <testcase classname="routes/lpa/enter-code should define the expected routes" name="routes/lpa/enter-code should define the expected routes" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/out-of-time-shutter-page" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.258" tests="1">
    <testcase classname="controllers/full-appeal/out-of-time-shutter-page getOutOfTimeShutterPage should render shutter page with valid appeal deadline and erase appeal in session" name="controllers/full-appeal/out-of-time-shutter-page getOutOfTimeShutterPage should render shutter page with valid appeal deadline and erase appeal in session" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/certificates" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.581" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/certificates getCertificates calls correct template" name="controllers/full-appeal/submit-appeal/certificates getCertificates calls correct template" time="0.008">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/certificates postOriginalDecisionNotice should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/certificates postOriginalDecisionNotice should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/certificates postOriginalDecisionNotice should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/certificates postOriginalDecisionNotice should re-render the template with errors if an error is thrown" time="0.011">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/certificates postOriginalDecisionNotice should redirect to the correct page if valid and a file is being uploaded" name="controllers/full-appeal/submit-appeal/certificates postOriginalDecisionNotice should redirect to the correct page if valid and a file is being uploaded" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/certificates postOriginalDecisionNotice should redirect to the correct page if valid and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/certificates postOriginalDecisionNotice should redirect to the correct page if valid and a file is not being uploaded" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/are-you-a-tenant" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.502" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/are-you-a-tenant getAreYouATenant should call the correct template" name="controllers/full-appeal/submit-appeal/are-you-a-tenant getAreYouATenant should call the correct template" time="0.007">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/are-you-a-tenant postAreYouATenant should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/are-you-a-tenant postAreYouATenant should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/are-you-a-tenant postAreYouATenant should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/are-you-a-tenant postAreYouATenant should re-render the template with errors if an error is thrown" time="0.027">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/are-you-a-tenant postAreYouATenant should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/are-you-a-tenant postAreYouATenant should redirect to the correct page if `yes` has been selected" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/are-you-a-tenant postAreYouATenant should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/are-you-a-tenant postAreYouATenant should redirect to the correct page if `no` has been selected" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/claim-costs" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.549" tests="6">
    <testcase classname="controllers/appellant-submission/claim-costs getCosts should call the correct template" name="controllers/appellant-submission/claim-costs getCosts should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/claim-costs getCostsOut should call the correct template" name="controllers/appellant-submission/claim-costs getCostsOut should call the correct template" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/claim-costs postCosts should re-render the template with errors if there is any validation error" name="controllers/appellant-submission/claim-costs postCosts should re-render the template with errors if there is any validation error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/claim-costs postCosts should re-render the template with errors if there is any api call error" name="controllers/appellant-submission/claim-costs postCosts should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/claim-costs postCosts should redirect to /eligibility/appeal-statement if does not claiming costs" name="controllers/appellant-submission/claim-costs postCosts should redirect to /eligibility/appeal-statement if does not claiming costs" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/claim-costs postCosts should redirect to /eligibility/costs-out if claiming costs" name="controllers/appellant-submission/claim-costs postCosts should redirect to /eligibility/costs-out if claiming costs" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/status-your-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.419" tests="5">
    <testcase classname="services/task-status/status-your-details should have the expected status - isOriginalApplicant !== null" name="services/task-status/status-your-details should have the expected status - isOriginalApplicant !== null" time="0.008">
    </testcase>
    <testcase classname="services/task-status/status-your-details should have the expected status - isOriginalApplicant, but no name" name="services/task-status/status-your-details should have the expected status - isOriginalApplicant, but no name" time="0.001">
    </testcase>
    <testcase classname="services/task-status/status-your-details should have the expected status - appealingOnBehalfOf, but no name" name="services/task-status/status-your-details should have the expected status - appealingOnBehalfOf, but no name" time="0">
    </testcase>
    <testcase classname="services/task-status/status-your-details should have the expected status - isOriginalApplicant with name" name="services/task-status/status-your-details should have the expected status - isOriginalApplicant with name" time="0">
    </testcase>
    <testcase classname="services/task-status/status-your-details should have the expected status - appealingOnBehalfOf with name" name="services/task-status/status-your-details should have the expected status - appealingOnBehalfOf with name" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/why-inquiry" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.76" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/why-inquiry should define the expected routes" name="routes/full-appeal/submit-appeal/why-inquiry should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/eligibility/enforcement-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:23" time="0.53" tests="6">
    <testcase classname="controllers/eligibility/enforcement-notice getServiceNotAvailableWhenReceivedEnforcementNotice calls the correct template" name="controllers/eligibility/enforcement-notice getServiceNotAvailableWhenReceivedEnforcementNotice calls the correct template" time="0.002">
    </testcase>
    <testcase classname="controllers/eligibility/enforcement-notice getEnforcementNotice should call the correct template" name="controllers/eligibility/enforcement-notice getEnforcementNotice should call the correct template" time="0">
    </testcase>
    <testcase classname="controllers/eligibility/enforcement-notice postEnforcementNotice should re-render the template with errors if there is any validation error" name="controllers/eligibility/enforcement-notice postEnforcementNotice should re-render the template with errors if there is any validation error" time="0.002">
    </testcase>
    <testcase classname="controllers/eligibility/enforcement-notice postEnforcementNotice should re-render the template with errors if there is any api call error" name="controllers/eligibility/enforcement-notice postEnforcementNotice should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/enforcement-notice postEnforcementNotice should redirect to `/eligibility/enforcement-notice-out` if `enforcement-notice` is `yes`" name="controllers/eligibility/enforcement-notice postEnforcementNotice should redirect to `/eligibility/enforcement-notice-out` if `enforcement-notice` is `yes`" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/enforcement-notice postEnforcementNotice should redirect to `/eligibility/listed-building` if `enforcement-notice` is `no`" name="controllers/eligibility/enforcement-notice postEnforcementNotice should redirect to `/eligibility/listed-building` if `enforcement-notice` is `no`" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="middleware/fetch-appeal-by-url-param" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.462" tests="5">
    <testcase classname="middleware/fetch-appeal-by-url-param req.params[appealKey] is undefined" name="middleware/fetch-appeal-by-url-param req.params[appealKey] is undefined" time="0.004">
    </testcase>
    <testcase classname="middleware/fetch-appeal-by-url-param req.params[appealKey] is not found in req.params" name="middleware/fetch-appeal-by-url-param req.params[appealKey] is not found in req.params" time="0.001">
    </testcase>
    <testcase classname="middleware/fetch-appeal-by-url-param req.params[appealKey] is found but value is undefined" name="middleware/fetch-appeal-by-url-param req.params[appealKey] is found but value is undefined" time="0.001">
    </testcase>
    <testcase classname="middleware/fetch-appeal-by-url-param req.params[appealKey] is found but getExistingAppeal fails" name="middleware/fetch-appeal-by-url-param req.params[appealKey] is found but getExistingAppeal fails" time="0.021">
    </testcase>
    <testcase classname="middleware/fetch-appeal-by-url-param req.params[appealKey] is found and getExistingAppeal succeeds" name="middleware/fetch-appeal-by-url-param req.params[appealKey] is found and getExistingAppeal succeeds" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/check-your-answers" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.337" tests="3">
    <testcase classname="controllers/full-appeal/submit-appeal/check-your-answers getCheckAnswers should call the correct template with empty local planning department" name="controllers/full-appeal/submit-appeal/check-your-answers getCheckAnswers should call the correct template with empty local planning department" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/check-your-answers getCheckAnswers should call the correct template with empty local planning department" name="controllers/full-appeal/submit-appeal/check-your-answers getCheckAnswers should call the correct template with empty local planning department" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/check-your-answers getCheckAnswers should call the correct template with local planning department name" name="controllers/full-appeal/submit-appeal/check-your-answers getCheckAnswers should call the correct template with local planning department name" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie/cookie-config" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.461" tests="4">
    <testcase classname="lib/client-side/cookie/cookie-config COOKIE_POLICY_KEY" name="lib/client-side/cookie/cookie-config COOKIE_POLICY_KEY" time="0.003">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-config CSS_CLASSES" name="lib/client-side/cookie/cookie-config CSS_CLASSES" time="0">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-config DEFAULT_COOKIE_POLICY" name="lib/client-side/cookie/cookie-config DEFAULT_COOKIE_POLICY" time="0">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-config SELECTORS" name="lib/client-side/cookie/cookie-config SELECTORS" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/other-tenants" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.411" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/other-tenants getOtherTenants should call the correct template" name="controllers/full-appeal/submit-appeal/other-tenants getOtherTenants should call the correct template" time="0.007">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/other-tenants postOtherTenants should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/other-tenants postOtherTenants should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/other-tenants postOtherTenants should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/other-tenants postOtherTenants should re-render the template with errors if an error is thrown" time="0.019">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/other-tenants postOtherTenants should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/other-tenants postOtherTenants should redirect to the correct page if `yes` has been selected" time="0.007">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/other-tenants postOtherTenants should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/other-tenants postOtherTenants should redirect to the correct page if `no` has been selected" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/final-comment/upload-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.499" tests="5">
    <testcase classname="controllers/final-comment/upload-documents getUploadDocuments should render the template correctly" name="controllers/final-comment/upload-documents getUploadDocuments should render the template correctly" time="0.012">
    </testcase>
    <testcase classname="controllers/final-comment/upload-documents postUploadDocuments should upload files, set session correctly, and redirect to correct page if valid files added" name="controllers/final-comment/upload-documents postUploadDocuments should upload files, set session correctly, and redirect to correct page if valid files added" time="0.011">
    </testcase>
    <testcase classname="controllers/final-comment/upload-documents postUploadDocuments should remove a file correctly" name="controllers/final-comment/upload-documents postUploadDocuments should remove a file correctly" time="0.029">
    </testcase>
    <testcase classname="controllers/final-comment/upload-documents postUploadDocuments should re-render template with errors if errors thrown" name="controllers/final-comment/upload-documents postUploadDocuments should re-render template with errors if errors thrown" time="0.002">
    </testcase>
    <testcase classname="controllers/final-comment/upload-documents postUploadDocuments should handle a request containing valid and invalid files" name="controllers/final-comment/upload-documents postUploadDocuments should handle a request containing valid and invalid files" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/final-comment/input-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.569" tests="15">
    <testcase classname="controllers/final-comment/input-code getInputCode should call the appeals-api-wrapper getFinalCommentData method with req.params.caseReference if no final comment in session" name="controllers/final-comment/input-code getInputCode should call the appeals-api-wrapper getFinalCommentData method with req.params.caseReference if no final comment in session" time="0.002">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCode should not call getFinalCommentData if final comment exists in session with matching case reference" name="controllers/final-comment/input-code getInputCode should not call getFinalCommentData if final comment exists in session with matching case reference" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCode should call getFinalCommentData if final comment in session with different case reference" name="controllers/final-comment/input-code getInputCode should call getFinalCommentData if final comment in session with different case reference" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCode should re-render input code page if final comment api throws an error" name="controllers/final-comment/input-code getInputCode should re-render input code page if final comment api throws an error" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCode should call the appeals-api-wrapper sendToken method with ID and email address from the finalComment session object" name="controllers/final-comment/input-code getInputCode should call the appeals-api-wrapper sendToken method with ID and email address from the finalComment session object" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCode should render the enter code page" name="controllers/final-comment/input-code getInputCode should render the enter code page" time="0">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCode should show new code success message only once" name="controllers/final-comment/input-code getInputCode should show new code success message only once" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCode should set session.enterCode.action if enterCode does not exist" name="controllers/final-comment/input-code getInputCode should set session.enterCode.action if enterCode does not exist" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCode should set session.enterCode.action if enterCode does exist" name="controllers/final-comment/input-code getInputCode should set session.enterCode.action if enterCode does exist" time="0">
    </testcase>
    <testcase classname="controllers/final-comment/input-code postInputCode should re-render the enter code page in an error state if errors are present in the body" name="controllers/final-comment/input-code postInputCode should re-render the enter code page in an error state if errors are present in the body" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code postInputCode should re-render the enter code page in an error state with the expected error message text, if the entered token is not valid" name="controllers/final-comment/input-code postInputCode should re-render the enter code page in an error state with the expected error message text, if the entered token is not valid" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code postInputCode should redirect to the need-new-code page, if the entered token is not valid and an incorrect code has been entered more than the allowed number of times" name="controllers/final-comment/input-code postInputCode should redirect to the need-new-code page, if the entered token is not valid and an incorrect code has been entered more than the allowed number of times" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code postInputCode should redirect to the need-new-code page, if the entered token has expired" name="controllers/final-comment/input-code postInputCode should redirect to the need-new-code page, if the entered token has expired" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code postInputCode should redirect to the comments-question page if the entered token is valid" name="controllers/final-comment/input-code postInputCode should redirect to the comments-question page if the entered token is valid" time="0.001">
    </testcase>
    <testcase classname="controllers/final-comment/input-code getInputCodeResendCode should set session correctly and redirect to input code page" name="controllers/final-comment/input-code getInputCodeResendCode should set session correctly and redirect to input code page" time="0">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/enter-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.637" tests="7">
    <testcase classname="validators/common/enter-code not enough characters entered" name="validators/common/enter-code not enough characters entered" time="0.031">
    </testcase>
    <testcase classname="validators/common/enter-code too many characters entered" name="validators/common/enter-code too many characters entered" time="0.002">
    </testcase>
    <testcase classname="validators/common/enter-code invalid alpha characters entered" name="validators/common/enter-code invalid alpha characters entered" time="0.002">
    </testcase>
    <testcase classname="validators/common/enter-code invalid alpha characters entered not at start of string" name="validators/common/enter-code invalid alpha characters entered not at start of string" time="0.001">
    </testcase>
    <testcase classname="validators/common/enter-code invalid non alphanumeric characters entered" name="validators/common/enter-code invalid non alphanumeric characters entered" time="0.001">
    </testcase>
    <testcase classname="validators/common/enter-code no characters entered" name="validators/common/enter-code no characters entered" time="0.001">
    </testcase>
    <testcase classname="validators/common/enter-code valid characters entered" name="validators/common/enter-code valid characters entered" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/final-comment/appeal-closed-for-comment" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.66" tests="1">
    <testcase classname="routes/final-comment/appeal-closed-for-comment should define the expected routes" name="routes/final-comment/appeal-closed-for-comment should define the expected routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa-dashboard/confirm-add-user" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.763" tests="1">
    <testcase classname="routes/lpa-dashboard/confirm-add-user should define the expected routes" name="routes/lpa-dashboard/confirm-add-user should define the expected routes" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="routes/householder-planning/eligibility/enforcement-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.83" tests="1">
    <testcase classname="routes/householder-planning/eligibility/enforcement-notice should define the expected routes" name="routes/householder-planning/eligibility/enforcement-notice should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/enforcement-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.677" tests="1">
    <testcase classname="routes/eligibility/enforcement-notice should define the expected routes" name="routes/eligibility/enforcement-notice should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="validators/full-appeal/submit-appeal/application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.567" tests="5">
    <testcase classname="validators/full-appeal/submit-appeal/application-number rules is configured with the expected rules" name="validators/full-appeal/submit-appeal/application-number rules is configured with the expected rules" time="0.005">
    </testcase>
    <testcase classname="validators/full-appeal/submit-appeal/application-number validator should return the expected validation outcome - valid planning application number provided" name="validators/full-appeal/submit-appeal/application-number validator should return the expected validation outcome - valid planning application number provided" time="0.003">
    </testcase>
    <testcase classname="validators/full-appeal/submit-appeal/application-number validator should return the expected validation outcome - planning application number not provided" name="validators/full-appeal/submit-appeal/application-number validator should return the expected validation outcome - planning application number not provided" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/submit-appeal/application-number validator should return the expected validation outcome - planning application number provided but empty" name="validators/full-appeal/submit-appeal/application-number validator should return the expected validation outcome - planning application number provided but empty" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/submit-appeal/application-number validator should return the expected validation outcome - planning application number provided but exceeds 30 characters" name="validators/full-appeal/submit-appeal/application-number validator should return the expected validation outcome - planning application number provided but exceeds 30 characters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/planning-obligation-deadline" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.335" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-deadline getPlanningObligationDeadline calls correct template" name="controllers/full-appeal/submit-appeal/planning-obligation-deadline getPlanningObligationDeadline calls correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-deadline postPlanningObligationDeadline postPlanningObligationDeadline method calls the correct template if clicked continue" name="controllers/full-appeal/submit-appeal/planning-obligation-deadline postPlanningObligationDeadline postPlanningObligationDeadline method calls the correct template if clicked continue" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-deadline postPlanningObligationDeadline postPlanningObligationDeadline method calls the correct template if it contains errors" name="controllers/full-appeal/submit-appeal/planning-obligation-deadline postPlanningObligationDeadline postPlanningObligationDeadline method calls the correct template if it contains errors" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/planning-obligation-deadline postPlanningObligationDeadline postPlanningObligationDeadline method calls the correct template if the service throws errors" name="controllers/full-appeal/submit-appeal/planning-obligation-deadline postPlanningObligationDeadline postPlanningObligationDeadline method calls the correct template if the service throws errors" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="lib/pdf-api-wrapper" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:24" time="0.8" tests="4">
    <testcase classname="lib/pdf-api-wrapper generatePDF should throw an error if the API request fails" name="lib/pdf-api-wrapper generatePDF should throw an error if the API request fails" time="0.039">
    </testcase>
    <testcase classname="lib/pdf-api-wrapper generatePDF should throw an error if the API response is not ok" name="lib/pdf-api-wrapper generatePDF should throw an error if the API response is not ok" time="0.001">
    </testcase>
    <testcase classname="lib/pdf-api-wrapper generatePDF should throw an error if the API response status is not 200" name="lib/pdf-api-wrapper generatePDF should throw an error if the API response status is not 200" time="0.001">
    </testcase>
    <testcase classname="lib/pdf-api-wrapper generatePDF should return the pdf" name="lib/pdf-api-wrapper generatePDF should return the pdf" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/custom/file-size" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.404" tests="24">
    <testcase classname="validators/custom/file-size should be valid when given a smaller file size than the configured maximum" name="validators/custom/file-size should be valid when given a smaller file size than the configured maximum" time="0.002">
    </testcase>
    <testcase classname="validators/custom/file-size should be valid when given a file size that matches the configured maximum" name="validators/custom/file-size should be valid when given a file size that matches the configured maximum" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw custom error message if provided and file oversize" name="validators/custom/file-size should throw custom error message if provided and file oversize" time="0.008">
    </testcase>
    <testcase classname="validators/custom/file-size should be valid and not throw custom error message if provided and file not oversize" name="validators/custom/file-size should be valid and not throw custom error message if provided and file not oversize" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 1" name="validators/custom/file-size should throw when oversize generic file name - 1" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 2" name="validators/custom/file-size should throw when oversize generic file name - 2" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 2048" name="validators/custom/file-size should throw when oversize generic file name - 2048" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 1048577" name="validators/custom/file-size should throw when oversize generic file name - 1048577" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 1073741825" name="validators/custom/file-size should throw when oversize generic file name - 1073741825" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 1099511627777" name="validators/custom/file-size should throw when oversize generic file name - 1099511627777" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 1125899906842625" name="validators/custom/file-size should throw when oversize generic file name - 1125899906842625" time="0.019">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 1.1805916207174113e+21" name="validators/custom/file-size should throw when oversize generic file name - 1.1805916207174113e+21" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 1.2089258196146292e+24" name="validators/custom/file-size should throw when oversize generic file name - 1.2089258196146292e+24" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize generic file name - 1.2379400392853803e+27" name="validators/custom/file-size should throw when oversize generic file name - 1.2379400392853803e+27" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 1" name="validators/custom/file-size should throw when oversize specific file name - 1" time="0.008">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 2" name="validators/custom/file-size should throw when oversize specific file name - 2" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 2048" name="validators/custom/file-size should throw when oversize specific file name - 2048" time="0.003">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 1048577" name="validators/custom/file-size should throw when oversize specific file name - 1048577" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 1073741825" name="validators/custom/file-size should throw when oversize specific file name - 1073741825" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 1099511627777" name="validators/custom/file-size should throw when oversize specific file name - 1099511627777" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 1125899906842625" name="validators/custom/file-size should throw when oversize specific file name - 1125899906842625" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 1.1805916207174113e+21" name="validators/custom/file-size should throw when oversize specific file name - 1.1805916207174113e+21" time="0">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 1.2089258196146292e+24" name="validators/custom/file-size should throw when oversize specific file name - 1.2089258196146292e+24" time="0.001">
    </testcase>
    <testcase classname="validators/custom/file-size should throw when oversize specific file name - 1.2379400392853803e+27" name="validators/custom/file-size should throw when oversize specific file name - 1.2379400392853803e+27" time="0">
    </testcase>
  </testsuite>
  <testsuite name="middleware/flash-message-to-nunjucks" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.337" tests="3">
    <testcase classname="middleware/flash-message-to-nunjucks falls back to an empty array if res.locals.flashMessages is undefined" name="middleware/flash-message-to-nunjucks falls back to an empty array if res.locals.flashMessages is undefined" time="0.004">
    </testcase>
    <testcase classname="middleware/flash-message-to-nunjucks works with a single flash message" name="middleware/flash-message-to-nunjucks works with a single flash message" time="0.001">
    </testcase>
    <testcase classname="middleware/flash-message-to-nunjucks works with a more than one flash message" name="middleware/flash-message-to-nunjucks works with a more than one flash message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/appeal-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.41" tests="5">
    <testcase classname="controllers/appellant-submission/appeal-statement getBeforeAppeal should call the correct template" name="controllers/appellant-submission/appeal-statement getBeforeAppeal should call the correct template" time="0.013">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement getWhenAppeal should call the correct template" name="controllers/appellant-submission/appeal-statement getWhenAppeal should call the correct template" time="0.002">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement getAfterAppeal should call the correct template" name="controllers/appellant-submission/appeal-statement getAfterAppeal should call the correct template" time="0">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement getStagesAppeal should call the correct template" name="controllers/appellant-submission/appeal-statement getStagesAppeal should call the correct template" time="0">
    </testcase>
    <testcase classname="controllers/appellant-submission/appeal-statement getStartAppeal should call the correct template" name="controllers/appellant-submission/appeal-statement getStartAppeal should call the correct template" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/your-planning-appeal/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.484" tests="1">
    <testcase classname="routes/your-planning-appeal/index should define the expected routes" name="routes/your-planning-appeal/index should define the expected routes" time="0.12">
    </testcase>
  </testsuite>
  <testsuite name="views/includes/head" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.568" tests="8">
    <testcase classname="views/includes/head should not render if no ids set" name="views/includes/head should not render if no ids set" time="0.067">
    </testcase>
    <testcase classname="views/includes/head should not render if googleAnalyticsId is set but cookies.cookie_policy.usage is not set" name="views/includes/head should not render if googleAnalyticsId is set but cookies.cookie_policy.usage is not set" time="0.006">
    </testcase>
    <testcase classname="views/includes/head should not render if googleAnalyticsId is not set but cookies.cookie_policy.usage is set" name="views/includes/head should not render if googleAnalyticsId is not set but cookies.cookie_policy.usage is set" time="0.006">
    </testcase>
    <testcase classname="views/includes/head should render if googleAnalyticsId and cookies.cookie_policy.usage are set" name="views/includes/head should render if googleAnalyticsId and cookies.cookie_policy.usage are set" time="0.032">
    </testcase>
    <testcase classname="views/includes/head should not render if only tagmanager set" name="views/includes/head should not render if only tagmanager set" time="0.009">
    </testcase>
    <testcase classname="views/includes/head should not render if googleTagManager and GA are set" name="views/includes/head should not render if googleTagManager and GA are set" time="0.003">
    </testcase>
    <testcase classname="views/includes/head should render tagmanager if tagmanager and id are set" name="views/includes/head should render tagmanager if tagmanager and id are set" time="0.004">
    </testcase>
    <testcase classname="views/includes/head should render tagmanager if all are set" name="views/includes/head should render tagmanager if all are set" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie/cookie-jar" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.562" tests="10">
    <testcase classname="lib/client-side/cookie/cookie-jar createCookie without days - gets default expiry" name="lib/client-side/cookie/cookie-jar createCookie without days - gets default expiry" time="0.02">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar createCookie with positive days" name="lib/client-side/cookie/cookie-jar createCookie with positive days" time="0.004">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar createCookie with 0 days" name="lib/client-side/cookie/cookie-jar createCookie with 0 days" time="0.004">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar createCookie with negative days" name="lib/client-side/cookie/cookie-jar createCookie with negative days" time="0.002">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar createCookie bad days - we all have them" name="lib/client-side/cookie/cookie-jar createCookie bad days - we all have them" time="0.001">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar createCookie secure cookies are implicitly set if in the production environment" name="lib/client-side/cookie/cookie-jar createCookie secure cookies are implicitly set if in the production environment" time="0.006">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar readCookie when cookie does not exist" name="lib/client-side/cookie/cookie-jar readCookie when cookie does not exist" time="0.001">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar readCookie when one cookie exists" name="lib/client-side/cookie/cookie-jar readCookie when one cookie exists" time="0.041">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar readCookie when many cookies exists" name="lib/client-side/cookie/cookie-jar readCookie when many cookies exists" time="0.001">
    </testcase>
    <testcase classname="lib/client-side/cookie/cookie-jar eraseCookie" name="lib/client-side/cookie/cookie-jar eraseCookie" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="#toArray" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.33" tests="3">
    <testcase classname="#toArray should return empty array with undefined candidate" name="#toArray should return empty array with undefined candidate" time="0.002">
    </testcase>
    <testcase classname="#toArray should return array if candidate is not array" name="#toArray should return array if candidate is not array" time="0.001">
    </testcase>
    <testcase classname="#toArray should return array if candidate is array" name="#toArray should return array if candidate is array" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/email-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.479" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/email-address getEmailAddress should call the correct template" name="controllers/full-appeal/submit-appeal/email-address getEmailAddress should call the correct template" time="0.023">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/email-address postEmailAddress should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/email-address postEmailAddress should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/email-address postEmailAddress should log an error if the api call fails, and remain on the same page" name="controllers/full-appeal/submit-appeal/email-address postEmailAddress should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/email-address postEmailAddress should redirect to `/full-appeal/submit-appeal/confirm-email-address` if valid" name="controllers/full-appeal/submit-appeal/email-address postEmailAddress should redirect to `/full-appeal/submit-appeal/confirm-email-address` if valid" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/javascript-requiring-consent" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.4" tests="7">
    <testcase classname="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts return early if cookie is null" name="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts return early if cookie is null" time="0.006">
    </testcase>
    <testcase classname="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts return early if `usage` is not defined" name="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts return early if `usage` is not defined" time="0.001">
    </testcase>
    <testcase classname="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager active disables consent if `usage=false`" name="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager active disables consent if `usage=false`" time="0.001">
    </testcase>
    <testcase classname="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager active enables consent if `usage=true`" name="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager active enables consent if `usage=true`" time="0.001">
    </testcase>
    <testcase classname="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager active does not enable consent if no tag manager id present" name="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager active does not enable consent if no tag manager id present" time="0.001">
    </testcase>
    <testcase classname="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager inactive return early if `usage=false`" name="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager inactive return early if `usage=false`" time="0">
    </testcase>
    <testcase classname="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager inactive calls through if `usage=true`" name="lib/client-side/javascript-requiring-consent initialiseOptionalJavaScripts tagmanager inactive calls through if `usage=true`" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getUseExistingServiceCosts" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.397" tests="1">
    <testcase classname="getUseExistingServiceCosts Test the getUseExistingServiceCosts method calls the correct template" name="getUseExistingServiceCosts Test the getUseExistingServiceCosts method calls the correct template" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="lib/add-key-value-pair" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.722" tests="4">
    <testcase classname="lib/add-key-value-pair should give the expected output - empty input" name="lib/add-key-value-pair should give the expected output - empty input" time="0.004">
    </testcase>
    <testcase classname="lib/add-key-value-pair should give the expected output - adds a key value pair" name="lib/add-key-value-pair should give the expected output - adds a key value pair" time="0.001">
    </testcase>
    <testcase classname="lib/add-key-value-pair should give the expected output - adds a key value pair - existing data" name="lib/add-key-value-pair should give the expected output - adds a key value pair - existing data" time="0.001">
    </testcase>
    <testcase classname="lib/add-key-value-pair should give the expected output - replaces key value if already set" name="lib/add-key-value-pair should give the expected output - replaces key value if already set" time="0">
    </testcase>
  </testsuite>
  <testsuite name="validators/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:25" time="0.756" tests="4">
    <testcase classname="validators/planning-department rules is configured with the expected rules" name="validators/planning-department rules is configured with the expected rules" time="0.005">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - no error yes" name="validators/planning-department validator should return the expected validation outcome - no error yes" time="0.005">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - no error no" name="validators/planning-department validator should return the expected validation outcome - no error no" time="0.001">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - error" name="validators/planning-department validator should return the expected validation outcome - error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/clean-up-session" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.45" tests="3">
    <testcase classname="lib/clean-up-session no req.session object" name="lib/clean-up-session no req.session object" time="0.006">
    </testcase>
    <testcase classname="lib/clean-up-session req.session is only key" name="lib/clean-up-session req.session is only key" time="0">
    </testcase>
    <testcase classname="lib/clean-up-session other keys are not impacted" name="lib/clean-up-session other keys are not impacted" time="0">
    </testcase>
  </testsuite>
  <testsuite name="validators/local-planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.584" tests="5">
    <testcase classname="validators/local-planning-department rules is configured with the expected rules" name="validators/local-planning-department rules is configured with the expected rules" time="0.005">
    </testcase>
    <testcase classname="validators/local-planning-department validator should return the expected validation outcome - eligible local planning department provided" name="validators/local-planning-department validator should return the expected validation outcome - eligible local planning department provided" time="0.009">
    </testcase>
    <testcase classname="validators/local-planning-department validator should return the expected validation outcome - ineligible local planning department provided" name="validators/local-planning-department validator should return the expected validation outcome - ineligible local planning department provided" time="0.001">
    </testcase>
    <testcase classname="validators/local-planning-department validator should return the expected validation outcome - local planning department is not provided" name="validators/local-planning-department validator should return the expected validation outcome - local planning department is not provided" time="0.025">
    </testcase>
    <testcase classname="validators/local-planning-department validator should return the expected validation outcome - unknown local planning department is provided" name="validators/local-planning-department validator should return the expected validation outcome - unknown local planning department is provided" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/appeal-site-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.51" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-site-address getAppealSiteAddress should call the correct template" name="controllers/full-appeal/submit-appeal/appeal-site-address getAppealSiteAddress should call the correct template" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-site-address postAppealSiteAddress should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/appeal-site-address postAppealSiteAddress should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-site-address postAppealSiteAddress should log an error if the api call fails, and remain on the same page" name="controllers/full-appeal/submit-appeal/appeal-site-address postAppealSiteAddress should log an error if the api call fails, and remain on the same page" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-site-address postAppealSiteAddress should redirect to `/full-appeal/submit-appeal/own-all-the-land` if valid" name="controllers/full-appeal/submit-appeal/appeal-site-address postAppealSiteAddress should redirect to `/full-appeal/submit-appeal/own-all-the-land` if valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/appeal-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.647" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-statement getAppealStatement should call the correct template" name="controllers/full-appeal/submit-appeal/appeal-statement getAppealStatement should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-statement postAppealStatement should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/appeal-statement postAppealStatement should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-statement postAppealStatement should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/appeal-statement postAppealStatement should re-render the template with errors if an error is thrown" time="0.014">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-statement postAppealStatement should redirect to the correct page if valid and a file is being uploaded" name="controllers/full-appeal/submit-appeal/appeal-statement postAppealStatement should redirect to the correct page if valid and a file is being uploaded" time="0.01">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-statement postAppealStatement should redirect to the correct page if valid and a file is not being uploaded" name="controllers/full-appeal/submit-appeal/appeal-statement postAppealStatement should redirect to the correct page if valid and a file is not being uploaded" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="lib/session" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.501" tests="3">
    <testcase classname="lib/session should throw if unable to find the session secret" name="lib/session should throw if unable to find the session secret" time="0.015">
    </testcase>
    <testcase classname="lib/session should configure the MongoDBStore with the expected config" name="lib/session should configure the MongoDBStore with the expected config" time="0.01">
    </testcase>
    <testcase classname="lib/session should configure the MongoDBStore with the expected config when useSecureSessionCookie" name="lib/session should configure the MongoDBStore with the expected config when useSecureSessionCookie" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/before-you-start/use-existing-service-listed-building" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.305" tests="1">
    <testcase classname="controllers/before-you-start/use-existing-service-listed-building getNoDecision should call the correct template" name="controllers/before-you-start/use-existing-service-listed-building getNoDecision should call the correct template" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/use-existing-service-local-planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.446" tests="1">
    <testcase classname="controllers/full-appeal/use-existing-service-local-planning-department Test getUseExistingServiceLocalPlanningDepartment method calls the correct template" name="controllers/full-appeal/use-existing-service-local-planning-department Test getUseExistingServiceLocalPlanningDepartment method calls the correct template" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/agricultural-holding" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.461" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/agricultural-holding getAgriculturalHolding should call the correct template" name="controllers/full-appeal/submit-appeal/agricultural-holding getAgriculturalHolding should call the correct template" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/agricultural-holding postAgriculturalHolding should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/agricultural-holding postAgriculturalHolding should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/agricultural-holding postAgriculturalHolding should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/agricultural-holding postAgriculturalHolding should re-render the template with errors if an error is thrown" time="0.022">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/agricultural-holding postAgriculturalHolding should redirect to the correct page if `yes` has been selected" name="controllers/full-appeal/submit-appeal/agricultural-holding postAgriculturalHolding should redirect to the correct page if `yes` has been selected" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/agricultural-holding postAgriculturalHolding should redirect to the correct page if `no` has been selected" name="controllers/full-appeal/submit-appeal/agricultural-holding postAgriculturalHolding should redirect to the correct page if `no` has been selected" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/enter-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.527" tests="3">
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code getYourEmailAddress controllers/common/getYourEmailAddress.js" name="controllers/full-appeal/submit-appeal/enter-code getYourEmailAddress controllers/common/getYourEmailAddress.js" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postYourEmailAddress /controllers/common/getYourEmailAddress.js" name="controllers/full-appeal/submit-appeal/enter-code postYourEmailAddress /controllers/common/getYourEmailAddress.js" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/enter-code postYourEmailAddress /controllers.common.getYourEmailAddress.js missing email address" name="controllers/full-appeal/submit-appeal/enter-code postYourEmailAddress /controllers.common.getYourEmailAddress.js missing email address" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="middleware/final-comment/check-final-comment-deadline" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.534" tests="6">
    <testcase classname="middleware/final-comment/check-final-comment-deadline should render error page when final comment is not found in session" name="middleware/final-comment/check-final-comment-deadline should render error page when final comment is not found in session" time="0.005">
    </testcase>
    <testcase classname="middleware/final-comment/check-final-comment-deadline should render error page when final comment secureCodeEnteredCorrectly is not true" name="middleware/final-comment/check-final-comment-deadline should render error page when final comment secureCodeEnteredCorrectly is not true" time="0.005">
    </testcase>
    <testcase classname="middleware/final-comment/check-final-comment-deadline should call the next middleware when within the deadline date" name="middleware/final-comment/check-final-comment-deadline should call the next middleware when within the deadline date" time="0.021">
    </testcase>
    <testcase classname="middleware/final-comment/check-final-comment-deadline should allow past middleware check when testing override is enabled and override within debug date" name="middleware/final-comment/check-final-comment-deadline should allow past middleware check when testing override is enabled and override within debug date" time="0.002">
    </testcase>
    <testcase classname="middleware/final-comment/check-final-comment-deadline should redirect to APPEAL_CLOSED_FOR_COMMENT if override is set but override not within debug date" name="middleware/final-comment/check-final-comment-deadline should redirect to APPEAL_CLOSED_FOR_COMMENT if override is set but override not within debug date" time="0.007">
    </testcase>
    <testcase classname="middleware/final-comment/check-final-comment-deadline should redirect to APPEAL_CLOSED_FOR_COMMENT if override is set but and not in test" name="middleware/final-comment/check-final-comment-deadline should redirect to APPEAL_CLOSED_FOR_COMMENT if override is set but and not in test" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/submit-appeal/enter-appeal-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.595" tests="4">
    <testcase classname="controllers/submit-appeal/enter-appeal-details getEnterAppealDetails getEnterAppealDetails method calls the correct template" name="controllers/submit-appeal/enter-appeal-details getEnterAppealDetails getEnterAppealDetails method calls the correct template" time="0.005">
    </testcase>
    <testcase classname="controllers/submit-appeal/enter-appeal-details postEnterAppealDetails should redirect to correct page if valid user input" name="controllers/submit-appeal/enter-appeal-details postEnterAppealDetails should redirect to correct page if valid user input" time="0.002">
    </testcase>
    <testcase classname="controllers/submit-appeal/enter-appeal-details postEnterAppealDetails should re-render the template with errors if submission validation fails" name="controllers/submit-appeal/enter-appeal-details postEnterAppealDetails should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/submit-appeal/enter-appeal-details postEnterAppealDetails should re-render the template with errors if an error is thrown" name="controllers/submit-appeal/enter-appeal-details postEnterAppealDetails should re-render the template with errors if an error is thrown" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="validators/planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.72" tests="5">
    <testcase classname="validators/planning-department rules is configured with the expected rules" name="validators/planning-department rules is configured with the expected rules" time="0.006">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - eligible local planning department provided" name="validators/planning-department validator should return the expected validation outcome - eligible local planning department provided" time="0.005">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - ineligible local planning department provided" name="validators/planning-department validator should return the expected validation outcome - ineligible local planning department provided" time="0.001">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - local planning department is not provided" name="validators/planning-department validator should return the expected validation outcome - local planning department is not provided" time="0.002">
    </testcase>
    <testcase classname="validators/planning-department validator should return the expected validation outcome - unknown local planning department is provided" name="validators/planning-department validator should return the expected validation outcome - unknown local planning department is provided" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/eligibility/appeal-statement" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.339" tests="1">
    <testcase classname="routes/eligibility/appeal-statement should define the expected routes" name="routes/eligibility/appeal-statement should define the expected routes" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="lib/get-your-planning-appeal-link" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.441" tests="4">
    <testcase classname="lib/get-your-planning-appeal-link should return the expected link - a" name="lib/get-your-planning-appeal-link should return the expected link - a" time="0.007">
    </testcase>
    <testcase classname="lib/get-your-planning-appeal-link should return the expected link - bb" name="lib/get-your-planning-appeal-link should return the expected link - bb" time="0">
    </testcase>
    <testcase classname="lib/get-your-planning-appeal-link should return the expected link - 123456789" name="lib/get-your-planning-appeal-link should return the expected link - 123456789" time="0.001">
    </testcase>
    <testcase classname="lib/get-your-planning-appeal-link should return the expected link - zxc-qwe" name="lib/get-your-planning-appeal-link should return the expected link - zxc-qwe" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.483" tests="1">
    <testcase classname="routes/index should define the expected routes" name="routes/index should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="middleware/fetch-appeal-lpd-by-appeal-lpa-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.659" tests="4">
    <testcase classname="middleware/fetch-appeal-lpd-by-appeal-lpa-code req.session.appeal is undefined" name="middleware/fetch-appeal-lpd-by-appeal-lpa-code req.session.appeal is undefined" time="0.004">
    </testcase>
    <testcase classname="middleware/fetch-appeal-lpd-by-appeal-lpa-code req.session.appeal.lpaCode is undefined" name="middleware/fetch-appeal-lpd-by-appeal-lpa-code req.session.appeal.lpaCode is undefined" time="0.001">
    </testcase>
    <testcase classname="middleware/fetch-appeal-lpd-by-appeal-lpa-code getDepartmentFromId throws" name="middleware/fetch-appeal-lpd-by-appeal-lpa-code getDepartmentFromId throws" time="0.002">
    </testcase>
    <testcase classname="middleware/fetch-appeal-lpd-by-appeal-lpa-code happy path" name="middleware/fetch-appeal-lpd-by-appeal-lpa-code happy path" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:26" time="0.917" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/application-number should define the expected routes" name="routes/full-appeal/submit-appeal/application-number should define the expected routes" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="validators/cookies" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.687" tests="7">
    <testcase classname="validators/cookies rules is configured with the expected rules" name="validators/cookies rules is configured with the expected rules" time="0.004">
    </testcase>
    <testcase classname="validators/cookies rules ruleUsageCookie is configured with the expected rules" name="validators/cookies rules ruleUsageCookie is configured with the expected rules" time="0.002">
    </testcase>
    <testcase classname="validators/cookies validator should return the expected validation outcome - No selection made as to cookie usage - valid, not a required field" name="validators/cookies validator should return the expected validation outcome - No selection made as to cookie usage - valid, not a required field" time="0.004">
    </testcase>
    <testcase classname="validators/cookies validator should return the expected validation outcome - Invalid - value provided but not an allowable value" name="validators/cookies validator should return the expected validation outcome - Invalid - value provided but not an allowable value" time="0.002">
    </testcase>
    <testcase classname="validators/cookies validator should return the expected validation outcome - Usage cookie is agreed" name="validators/cookies validator should return the expected validation outcome - Usage cookie is agreed" time="0.001">
    </testcase>
    <testcase classname="validators/cookies validator should return the expected validation outcome - Usage cookie is not agreed" name="validators/cookies validator should return the expected validation outcome - Usage cookie is not agreed" time="0.001">
    </testcase>
    <testcase classname="validators/cookies validUsageCookieOptions should define the expected valid usage cookie options" name="validators/cookies validUsageCookieOptions should define the expected valid usage cookie options" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/eligibility/householder-planning-permission`" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.599" tests="6">
    <testcase classname="validators/eligibility/householder-planning-permission` rules is configured with the expected rules" name="validators/eligibility/householder-planning-permission` rules is configured with the expected rules" time="0.004">
    </testcase>
    <testcase classname="validators/eligibility/householder-planning-permission` rules ruleHouseholderPlanningPermission is configured with the expected rules" name="validators/eligibility/householder-planning-permission` rules ruleHouseholderPlanningPermission is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/eligibility/householder-planning-permission` validator should return the expected validation outcome - No selection made on the householder planning permission question" name="validators/eligibility/householder-planning-permission` validator should return the expected validation outcome - No selection made on the householder planning permission question" time="0.006">
    </testcase>
    <testcase classname="validators/eligibility/householder-planning-permission` validator should return the expected validation outcome - User selected `yes` on the householder planning permission question" name="validators/eligibility/householder-planning-permission` validator should return the expected validation outcome - User selected `yes` on the householder planning permission question" time="0.001">
    </testcase>
    <testcase classname="validators/eligibility/householder-planning-permission` validator should return the expected validation outcome - User selected `no` on the householder planning permission question" name="validators/eligibility/householder-planning-permission` validator should return the expected validation outcome - User selected `no` on the householder planning permission question" time="0.006">
    </testcase>
    <testcase classname="validators/eligibility/householder-planning-permission` validHouseholderPlanningPermissionOptions should define the expected valid householder planning permission options" name="validators/eligibility/householder-planning-permission` validHouseholderPlanningPermissionOptions should define the expected valid householder planning permission options" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="routes/use-existing-service-listed-building" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.43" tests="1">
    <testcase classname="routes/use-existing-service-listed-building should define the expected routes" name="routes/use-existing-service-listed-building should define the expected routes" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="lib/file-size-display-helper" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.357" tests="20">
    <testcase classname="lib/file-size-display-helper should display the expected file size - 0Bytes" name="lib/file-size-display-helper should display the expected file size - 0Bytes" time="0.003">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1Bytes" name="lib/file-size-display-helper should display the expected file size - 1Bytes" time="0.001">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1KB" name="lib/file-size-display-helper should display the expected file size - 1KB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1KB" name="lib/file-size-display-helper should display the expected file size - 1KB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1MB" name="lib/file-size-display-helper should display the expected file size - 1MB" time="0.001">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1MB" name="lib/file-size-display-helper should display the expected file size - 1MB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1GB" name="lib/file-size-display-helper should display the expected file size - 1GB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1GB" name="lib/file-size-display-helper should display the expected file size - 1GB" time="0.001">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1TB" name="lib/file-size-display-helper should display the expected file size - 1TB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1TB" name="lib/file-size-display-helper should display the expected file size - 1TB" time="0.001">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1PB" name="lib/file-size-display-helper should display the expected file size - 1PB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1PB" name="lib/file-size-display-helper should display the expected file size - 1PB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1EB" name="lib/file-size-display-helper should display the expected file size - 1EB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1EB" name="lib/file-size-display-helper should display the expected file size - 1EB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1ZB" name="lib/file-size-display-helper should display the expected file size - 1ZB" time="0.001">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1ZB" name="lib/file-size-display-helper should display the expected file size - 1ZB" time="0.026">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1YB" name="lib/file-size-display-helper should display the expected file size - 1YB" time="0.001">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 1YB" name="lib/file-size-display-helper should display the expected file size - 1YB" time="0">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 50MB" name="lib/file-size-display-helper should display the expected file size - 50MB" time="0.001">
    </testcase>
    <testcase classname="lib/file-size-display-helper should display the expected file size - 52MB" name="lib/file-size-display-helper should display the expected file size - 52MB" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/check-id-is-mongodb-object-id" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.532" tests="4">
    <testcase classname="validators/common/check-id-is-mongodb-object-id rules has a rule for the user&apos;s id" name="validators/common/check-id-is-mongodb-object-id rules has a rule for the user&apos;s id" time="0.006">
    </testcase>
    <testcase classname="validators/common/check-id-is-mongodb-object-id rules should have an array containing 1 rule" name="validators/common/check-id-is-mongodb-object-id rules should have an array containing 1 rule" time="0">
    </testcase>
    <testcase classname="validators/common/check-id-is-mongodb-object-id rules should validate a valid user id req param" name="validators/common/check-id-is-mongodb-object-id rules should validate a valid user id req param" time="0.004">
    </testcase>
    <testcase classname="validators/common/check-id-is-mongodb-object-id rules should invalidate an invalid user id req param" name="validators/common/check-id-is-mongodb-object-id rules should invalidate an invalid user id req param" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/checkboxes" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.716" tests="8">
    <testcase classname="validators/common/checkboxes should pass validation when all options selected" name="validators/common/checkboxes should pass validation when all options selected" time="0.005">
    </testcase>
    <testcase classname="validators/common/checkboxes should not fail validation if not all options selected" name="validators/common/checkboxes should not fail validation if not all options selected" time="0">
    </testcase>
    <testcase classname="validators/common/checkboxes should not fail validation when there is no selection" name="validators/common/checkboxes should not fail validation when there is no selection" time="0.004">
    </testcase>
    <testcase classname="validators/common/checkboxes should fail validation if request contains an incorrect option" name="validators/common/checkboxes should fail validation if request contains an incorrect option" time="0.004">
    </testcase>
    <testcase classname="validators/full-appeal/telling-the-landowners should pass validation when all options selected" name="validators/full-appeal/telling-the-landowners should pass validation when all options selected" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/telling-the-landowners should fail validation if not all options selected" name="validators/full-appeal/telling-the-landowners should fail validation if not all options selected" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/telling-the-landowners should fail validation when there is no selection" name="validators/full-appeal/telling-the-landowners should fail validation when there is no selection" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/telling-the-landowners should fail validation if request contains an incorrect option" name="validators/full-appeal/telling-the-landowners should fail validation if request contains an incorrect option" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/cookies" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:27" time="0.441" tests="8">
    <testcase classname="controllers/cookies getCookies should not throw if cannot parse req.cookies value" name="controllers/cookies getCookies should not throw if cannot parse req.cookies value" time="0.017">
    </testcase>
    <testcase classname="controllers/cookies getCookies should call the correct template" name="controllers/cookies getCookies should call the correct template" time="0.002">
    </testcase>
    <testcase classname="controllers/cookies postCookies should redirect on the happy path - no data submitted" name="controllers/cookies postCookies should redirect on the happy path - no data submitted" time="0.001">
    </testcase>
    <testcase classname="controllers/cookies postCookies calls the correct template on error" name="controllers/cookies postCookies calls the correct template on error" time="0.001">
    </testcase>
    <testcase classname="controllers/cookies postCookies should redirect on the happy path with data submitted - Not in production, disable usage cookies" name="controllers/cookies postCookies should redirect on the happy path with data submitted - Not in production, disable usage cookies" time="0.014">
    </testcase>
    <testcase classname="controllers/cookies postCookies should redirect on the happy path with data submitted - Not in production, enable usage cookies" name="controllers/cookies postCookies should redirect on the happy path with data submitted - Not in production, enable usage cookies" time="0.002">
    </testcase>
    <testcase classname="controllers/cookies postCookies should redirect on the happy path with data submitted - In production, disable usage cookies" name="controllers/cookies postCookies should redirect on the happy path with data submitted - In production, disable usage cookies" time="0.006">
    </testcase>
    <testcase classname="controllers/cookies postCookies should redirect on the happy path with data submitted - In production,  enable usage cookies" name="controllers/cookies postCookies should redirect on the happy path with data submitted - In production,  enable usage cookies" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="routes/check-answers" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.524" tests="1">
    <testcase classname="routes/check-answers should define the expected routes" name="routes/check-answers should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/email-address-confirmed/:token" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.436" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/email-address-confirmed/:token should define the expected routes" name="routes/full-appeal/submit-appeal/email-address-confirmed/:token should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="middleware/navigation-history" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.572" tests="11">
    <testcase classname="middleware/navigation-history no session, return early" name="middleware/navigation-history no session, return early" time="0.003">
    </testcase>
    <testcase classname="middleware/navigation-history req.session.navigationHistory is not an array" name="middleware/navigation-history req.session.navigationHistory is not an array" time="0.001">
    </testcase>
    <testcase classname="middleware/navigation-history req.session.navigationHistory fall back :: initial visit, requested path matches default fallbackPath" name="middleware/navigation-history req.session.navigationHistory fall back :: initial visit, requested path matches default fallbackPath" time="0.001">
    </testcase>
    <testcase classname="middleware/navigation-history req.session.navigationHistory fall back :: initial visit, requested path does not match fallbackPath" name="middleware/navigation-history req.session.navigationHistory fall back :: initial visit, requested path does not match fallbackPath" time="0.001">
    </testcase>
    <testcase classname="middleware/navigation-history req.session.navigationHistory is a valid array :: initial visit, requested path matches default fallbackPath" name="middleware/navigation-history req.session.navigationHistory is a valid array :: initial visit, requested path matches default fallbackPath" time="0.001">
    </testcase>
    <testcase classname="middleware/navigation-history req.session.navigationHistory is a valid array :: initial visit, requested path does not match fallbackPath" name="middleware/navigation-history req.session.navigationHistory is a valid array :: initial visit, requested path does not match fallbackPath" time="0.001">
    </testcase>
    <testcase classname="middleware/navigation-history req.session.navigationHistory is a valid array :: subsequent visit, one item in the navigationHistory stack ::: requested path matches last page in the navigationHistory stack" name="middleware/navigation-history req.session.navigationHistory is a valid array :: subsequent visit, one item in the navigationHistory stack ::: requested path matches last page in the navigationHistory stack" time="0.001">
    </testcase>
    <testcase classname="middleware/navigation-history req.session.navigationHistory is a valid array :: subsequent visit, two items in the navigationHistory stack ::: requested path matches last page in the navigationHistory stack" name="middleware/navigation-history req.session.navigationHistory is a valid array :: subsequent visit, two items in the navigationHistory stack ::: requested path matches last page in the navigationHistory stack" time="0.001">
    </testcase>
    <testcase classname="middleware/navigation-history req.session.navigationHistory is a valid array :: subsequent visit, two items in the navigationHistory stack ::: requested path matches req.session.navigationHistory[1] in the navigationHistory stack" name="middleware/navigation-history req.session.navigationHistory is a valid array :: subsequent visit, two items in the navigationHistory stack ::: requested path matches req.session.navigationHistory[1] in the navigationHistory stack" time="0.001">
    </testcase>
    <testcase classname="middleware/navigation-history custom config :: override fallbackPath" name="middleware/navigation-history custom config :: override fallbackPath" time="0.014">
    </testcase>
    <testcase classname="middleware/navigation-history custom config :: override stackSize" name="middleware/navigation-history custom config :: override stackSize" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="validators/eligibility/listed-building" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.646" tests="6">
    <testcase classname="validators/eligibility/listed-building rules is configured with the expected rules" name="validators/eligibility/listed-building rules is configured with the expected rules" time="0.006">
    </testcase>
    <testcase classname="validators/eligibility/listed-building validator should return the expected validation outcome - undefined - empty" name="validators/eligibility/listed-building validator should return the expected validation outcome - undefined - empty" time="0.006">
    </testcase>
    <testcase classname="validators/eligibility/listed-building validator should return the expected validation outcome - invalid value - fail" name="validators/eligibility/listed-building validator should return the expected validation outcome - invalid value - fail" time="0.003">
    </testcase>
    <testcase classname="validators/eligibility/listed-building validator should return the expected validation outcome - valid value - &quot;yes&quot; - pass" name="validators/eligibility/listed-building validator should return the expected validation outcome - valid value - &quot;yes&quot; - pass" time="0.001">
    </testcase>
    <testcase classname="validators/eligibility/listed-building validator should return the expected validation outcome - valid value - &quot;no&quot; - pass" name="validators/eligibility/listed-building validator should return the expected validation outcome - valid value - &quot;no&quot; - pass" time="0.001">
    </testcase>
    <testcase classname="validators/eligibility/listed-building validIsListedBuildingOptions should define the expected valid listed building options" name="validators/eligibility/listed-building validIsListedBuildingOptions should define the expected valid listed building options" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa/request-new-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.58" tests="1">
    <testcase classname="routes/lpa/request-new-code should define the expected routes" name="routes/lpa/request-new-code should define the expected routes" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="checkFinalCommentTestEnabled" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.457" tests="4">
    <testcase classname="checkFinalCommentTestEnabled sets session and redirects to input code page with fake case reference when params is test and test config is true" name="checkFinalCommentTestEnabled sets session and redirects to input code page with fake case reference when params is test and test config is true" time="0.007">
    </testcase>
    <testcase classname="checkFinalCommentTestEnabled calls next when params is test and test config is false" name="checkFinalCommentTestEnabled calls next when params is test and test config is false" time="0.001">
    </testcase>
    <testcase classname="checkFinalCommentTestEnabled calls next when params not test and test config is true" name="checkFinalCommentTestEnabled calls next when params not test and test config is true" time="0.018">
    </testcase>
    <testcase classname="checkFinalCommentTestEnabled calls next when params not test and test config is false" name="checkFinalCommentTestEnabled calls next when params not test and test config is false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/own-some-of-the-land" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.99" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/own-some-of-the-land should define the expected routes" name="routes/full-appeal/submit-appeal/own-some-of-the-land should define the expected routes" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="routes/cookie" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.811" tests="1">
    <testcase classname="routes/cookie should define the expected routes" name="routes/cookie should define the expected routes" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="middleware/set-locals-display-cookie-banner-value" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.432" tests="4">
    <testcase classname="middleware/set-locals-display-cookie-banner-value #setLocalslDisplayCookieBannerValue When assigning a value to the display cookie banner locals variable and the cookie policy is defined should add the displayCookieBanner key with a value of false to the mockRes locals key" name="middleware/set-locals-display-cookie-banner-value #setLocalslDisplayCookieBannerValue When assigning a value to the display cookie banner locals variable and the cookie policy is defined should add the displayCookieBanner key with a value of false to the mockRes locals key" time="0.004">
    </testcase>
    <testcase classname="middleware/set-locals-display-cookie-banner-value #setLocalslDisplayCookieBannerValue When assigning a value to the display cookie banner locals variable and the cookie policy is defined should" name="middleware/set-locals-display-cookie-banner-value #setLocalslDisplayCookieBannerValue When assigning a value to the display cookie banner locals variable and the cookie policy is defined should" time="0.001">
    </testcase>
    <testcase classname="middleware/set-locals-display-cookie-banner-value #setLocalslDisplayCookieBannerValue When assigning a value to the display cookie banner locals variable and the cookie policy is not defined should add the displayCookieBanner key with a value of false to the mockRes locals key" name="middleware/set-locals-display-cookie-banner-value #setLocalslDisplayCookieBannerValue When assigning a value to the display cookie banner locals variable and the cookie policy is not defined should add the displayCookieBanner key with a value of false to the mockRes locals key" time="0.001">
    </testcase>
    <testcase classname="middleware/set-locals-display-cookie-banner-value #setLocalslDisplayCookieBannerValue When assigning a value to the display cookie banner locals variable and the cookie policy is not defined should" name="middleware/set-locals-display-cookie-banner-value #setLocalslDisplayCookieBannerValue When assigning a value to the display cookie banner locals variable and the cookie policy is not defined should" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/use-a-different-service" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.444" tests="1">
    <testcase classname="controllers/full-appeal/use-a-different-service Test the getPlanningDepartment method calls the correct template" name="controllers/full-appeal/use-a-different-service Test the getPlanningDepartment method calls the correct template" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appellant-submission/check-answers" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.513" tests="3">
    <testcase classname="controllers/appellant-submission/check-answers getCheckAnswers should call the correct template with empty local planning department" name="controllers/appellant-submission/check-answers getCheckAnswers should call the correct template with empty local planning department" time="0.003">
    </testcase>
    <testcase classname="controllers/appellant-submission/check-answers getCheckAnswers should call the correct template with empty local planning department" name="controllers/appellant-submission/check-answers getCheckAnswers should call the correct template with empty local planning department" time="0.001">
    </testcase>
    <testcase classname="controllers/appellant-submission/check-answers getCheckAnswers should call the correct template with local planning department name" name="controllers/appellant-submission/check-answers getCheckAnswers should call the correct template with local planning department name" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/lpa-dashboard/get-confirm-add-user" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:28" time="0.595" tests="3">
    <testcase classname="controllers/lpa-dashboard/get-confirm-add-user getConfirmAddUser should render the view correctly" name="controllers/lpa-dashboard/get-confirm-add-user getConfirmAddUser should render the view correctly" time="0.004">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/get-confirm-add-user postConfirmAddUser should call createUser with email address and redirect to correct page" name="controllers/lpa-dashboard/get-confirm-add-user postConfirmAddUser should call createUser with email address and redirect to correct page" time="0.001">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/get-confirm-add-user postConfirmAddUser should re-render template with errors if any api errors" name="controllers/lpa-dashboard/get-confirm-add-user postConfirmAddUser should re-render template with errors if any api errors" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="lib/count-task" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.391" tests="4">
    <testcase classname="lib/count-task should return the counted tasks - One section, one task in progress" name="lib/count-task should return the counted tasks - One section, one task in progress" time="0.003">
    </testcase>
    <testcase classname="lib/count-task should return the counted tasks - One section, one task completed" name="lib/count-task should return the counted tasks - One section, one task completed" time="0.001">
    </testcase>
    <testcase classname="lib/count-task should return the counted tasks - One section, two tasks, one completed, one in progress" name="lib/count-task should return the counted tasks - One section, two tasks, one completed, one in progress" time="0">
    </testcase>
    <testcase classname="lib/count-task should return the counted tasks - Two sections, two tasks each, all but one completed" name="lib/count-task should return the counted tasks - Two sections, two tasks each, all but one completed" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa-dashboard/add-remove-users" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.491" tests="1">
    <testcase classname="routes/lpa-dashboard/add-remove-users should define the expected routes" name="routes/lpa-dashboard/add-remove-users should define the expected routes" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="middleware/set-section-and-task-names" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.355" tests="1">
    <testcase classname="middleware/set-section-and-task-names should set req.sectionName and req.taskName with the given values" name="middleware/set-section-and-task-names should set req.sectionName and req.taskName with the given values" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/status-site-ownership" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.476" tests="5">
    <testcase classname="services/task-status/status-site-ownership should return the expected status" name="services/task-status/status-site-ownership should return the expected status" time="0.003">
    </testcase>
    <testcase classname="services/task-status/status-site-ownership should return the expected status" name="services/task-status/status-site-ownership should return the expected status" time="0">
    </testcase>
    <testcase classname="services/task-status/status-site-ownership should return the expected status" name="services/task-status/status-site-ownership should return the expected status" time="0">
    </testcase>
    <testcase classname="services/task-status/status-site-ownership should return the expected status" name="services/task-status/status-site-ownership should return the expected status" time="0">
    </testcase>
    <testcase classname="services/task-status/status-site-ownership should return the expected status" name="services/task-status/status-site-ownership should return the expected status" time="0">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/check-answers" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.649" tests="1">
    <testcase classname="routes/full-appeal/check-answers should define the expected routes" name="routes/full-appeal/check-answers should define the expected routes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="controllers/householder-planning/eligibility/enforcement-notice-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.575" tests="5">
    <testcase classname="controllers/householder-planning/eligibility/enforcement-notice-householder getEnforcementNoticeHouseholder should call the correct template" name="controllers/householder-planning/eligibility/enforcement-notice-householder getEnforcementNoticeHouseholder should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/enforcement-notice-householder postEnforcementNoticeHouseholder should re-render the template with errors if there is any validation error" name="controllers/householder-planning/eligibility/enforcement-notice-householder postEnforcementNoticeHouseholder should re-render the template with errors if there is any validation error" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/enforcement-notice-householder postEnforcementNoticeHouseholder should re-render the template with errors if there is any api call error" name="controllers/householder-planning/eligibility/enforcement-notice-householder postEnforcementNoticeHouseholder should re-render the template with errors if there is any api call error" time="0.036">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/enforcement-notice-householder postEnforcementNoticeHouseholder should redirect to `/householder-planning/eligibility/use-a-different-service` if `enforcement-notice` is `yes`" name="controllers/householder-planning/eligibility/enforcement-notice-householder postEnforcementNoticeHouseholder should redirect to `/householder-planning/eligibility/use-a-different-service` if `enforcement-notice` is `yes`" time="0.002">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/enforcement-notice-householder postEnforcementNoticeHouseholder should redirect to `/householder-planning/eligibility/claiming-costs-householder` if `enforcement-notice` is `no`" name="controllers/householder-planning/eligibility/enforcement-notice-householder postEnforcementNoticeHouseholder should redirect to `/householder-planning/eligibility/claiming-costs-householder` if `enforcement-notice` is `no`" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/contact-details" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.505" tests="7">
    <testcase classname="validators/contact-details rules has a rule for the appellant&apos;s name" name="validators/contact-details rules has a rule for the appellant&apos;s name" time="0.007">
    </testcase>
    <testcase classname="validators/contact-details rules should have an array of rules" name="validators/contact-details rules should have an array of rules" time="0.018">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - undefined - empty" name="validators/contact-details validator should return the expected validation outcome - undefined - empty" time="0.006">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - invalid values 1 - fail" name="validators/contact-details validator should return the expected validation outcome - invalid values 1 - fail" time="0.002">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - invalid values 2 - fail - name too short and invalid email" name="validators/contact-details validator should return the expected validation outcome - invalid values 2 - fail - name too short and invalid email" time="0.003">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - invalid values 2 - fail - name too long and invalid email" name="validators/contact-details validator should return the expected validation outcome - invalid values 2 - fail - name too long and invalid email" time="0.005">
    </testcase>
    <testcase classname="validators/contact-details validator should return the expected validation outcome - valid values - pass" name="validators/contact-details validator should return the expected validation outcome - valid values - pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/client-side/cookie/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.638" tests="2">
    <testcase classname="lib/client-side/cookie/index initialiseCookieConsent when cookie is null" name="lib/client-side/cookie/index initialiseCookieConsent when cookie is null" time="0.018">
    </testcase>
    <testcase classname="lib/client-side/cookie/index initialiseCookieConsent when cookie is not null" name="lib/client-side/cookie/index initialiseCookieConsent when cookie is not null" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="services/lpa-user.service" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.371" tests="5">
    <testcase classname="services/lpa-user.service createLPAUserSession should add user to session " name="services/lpa-user.service createLPAUserSession should add user to session " time="0.004">
    </testcase>
    <testcase classname="services/lpa-user.service getLPAUserFromSession should return user from session " name="services/lpa-user.service getLPAUserFromSession should return user from session " time="0.001">
    </testcase>
    <testcase classname="services/lpa-user.service setLPAUserStatus should set the user status to confirmed" name="services/lpa-user.service setLPAUserStatus should set the user status to confirmed" time="0.001">
    </testcase>
    <testcase classname="services/lpa-user.service setLPAUserStatus should set the user status to added" name="services/lpa-user.service setLPAUserStatus should set the user status to added" time="0.001">
    </testcase>
    <testcase classname="services/lpa-user.service setLPAUserStatus should not set the user status to unknownstatus" name="services/lpa-user.service setLPAUserStatus should not set the user status to unknownstatus" time="0">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/lpa-user-email" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.524" tests="3">
    <testcase classname="validators/common/lpa-user-email rules has a rule for the email" name="validators/common/lpa-user-email rules has a rule for the email" time="0.005">
    </testcase>
    <testcase classname="validators/common/lpa-user-email rules should have an array containing rule" name="validators/common/lpa-user-email rules should have an array containing rule" time="0.001">
    </testcase>
    <testcase classname="validators/common/lpa-user-email validator should return the expected validation outcome - undefined - empty" name="validators/common/lpa-user-email validator should return the expected validation outcome - undefined - empty" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="getUseExistingServiceEnforcementNotice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.402" tests="1">
    <testcase classname="getUseExistingServiceEnforcementNotice Test the getUseExistingServiceEnforcementNotice method calls the correct template" name="getUseExistingServiceEnforcementNotice Test the getUseExistingServiceEnforcementNotice method calls the correct template" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="controllers/householder-planning/eligibility/listed-building-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.59" tests="6">
    <testcase classname="controllers/householder-planning/eligibility/listed-building-householder getListedBuildingHouseholder should call the correct template on getListedBuildingHouseholder" name="controllers/householder-planning/eligibility/listed-building-householder getListedBuildingHouseholder should call the correct template on getListedBuildingHouseholder" time="0.01">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/listed-building-householder getListedBuildingHouseholder should call the correct template on getListedBuildingHouseholder - if full appeal" name="controllers/householder-planning/eligibility/listed-building-householder getListedBuildingHouseholder should call the correct template on getListedBuildingHouseholder - if full appeal" time="0.002">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/listed-building-householder postListedBuildingHouseholder should redirect to the use-existing-service-listed-building page if &apos;yes&apos; is selected" name="controllers/householder-planning/eligibility/listed-building-householder postListedBuildingHouseholder should redirect to the use-existing-service-listed-building page if &apos;yes&apos; is selected" time="0.004">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/listed-building-householder postListedBuildingHouseholder should redirect to the granted-or-refused-householder page if &apos;no&apos; is selected" name="controllers/householder-planning/eligibility/listed-building-householder postListedBuildingHouseholder should redirect to the granted-or-refused-householder page if &apos;no&apos; is selected" time="0.003">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/listed-building-householder postListedBuildingHouseholder should re-render the template with errors if there is any validation error" name="controllers/householder-planning/eligibility/listed-building-householder postListedBuildingHouseholder should re-render the template with errors if there is any validation error" time="0.003">
    </testcase>
    <testcase classname="controllers/householder-planning/eligibility/listed-building-householder postListedBuildingHouseholder should re-render the template with errors if there is any api call error" name="controllers/householder-planning/eligibility/listed-building-householder postListedBuildingHouseholder should re-render the template with errors if there is any api call error" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.65" tests="5">
    <testcase classname="validators/common/application-number rules is configured with the expected rules" name="validators/common/application-number rules is configured with the expected rules" time="0.009">
    </testcase>
    <testcase classname="validators/common/application-number validator should return the expected validation outcome - valid planning application number provided" name="validators/common/application-number validator should return the expected validation outcome - valid planning application number provided" time="0.006">
    </testcase>
    <testcase classname="validators/common/application-number validator should return the expected validation outcome - planning application number not provided" name="validators/common/application-number validator should return the expected validation outcome - planning application number not provided" time="0.002">
    </testcase>
    <testcase classname="validators/common/application-number validator should return the expected validation outcome - planning application number provided but empty" name="validators/common/application-number validator should return the expected validation outcome - planning application number provided but empty" time="0.002">
    </testcase>
    <testcase classname="validators/common/application-number validator should return the expected validation outcome - planning application number provided but exceeds 30 characters" name="validators/common/application-number validator should return the expected validation outcome - planning application number provided but exceeds 30 characters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/list-of-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.73" tests="2">
    <testcase classname="controllers/full-appeal/submit-appeal/list-of-documents getListOfDocuments should call the correct template" name="controllers/full-appeal/submit-appeal/list-of-documents getListOfDocuments should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/list-of-documents postListOfDocuments should redirect to `/full-appeal/submit-appeal/task-list`" name="controllers/full-appeal/submit-appeal/list-of-documents postListOfDocuments should redirect to `/full-appeal/submit-appeal/task-list`" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/why-inquiry" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:29" time="0.871" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/why-inquiry getWhyInquiry should call the correct template" name="controllers/full-appeal/submit-appeal/why-inquiry getWhyInquiry should call the correct template" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/why-inquiry postWhyInquiry should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/why-inquiry postWhyInquiry should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/why-inquiry postWhyInquiry should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/why-inquiry postWhyInquiry should re-render the template with errors if an error is thrown" time="0.054">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/why-inquiry postWhyInquiry should redirect to the correct page if a valid value has been entered" name="controllers/full-appeal/submit-appeal/why-inquiry postWhyInquiry should redirect to the correct page if a valid value has been entered" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/save-and-return" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.687" tests="1">
    <testcase classname="routes/save-and-return should define the expected routes" name="routes/save-and-return should define the expected routes" time="0.078">
    </testcase>
  </testsuite>
  <testsuite name="validation/utils/validate-checkbox-against-options.js" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.514" tests="4">
    <testcase classname="validation/utils/validate-checkbox-against-options.js validateCheckboxValueAgainstOptions should return true with undefined value" name="validation/utils/validate-checkbox-against-options.js validateCheckboxValueAgainstOptions should return true with undefined value" time="0.007">
    </testcase>
    <testcase classname="validation/utils/validate-checkbox-against-options.js validateCheckboxValueAgainstOptions should return true if value is a valid option" name="validation/utils/validate-checkbox-against-options.js validateCheckboxValueAgainstOptions should return true if value is a valid option" time="0.005">
    </testcase>
    <testcase classname="validation/utils/validate-checkbox-against-options.js validateCheckboxValueAgainstOptions should return true if all members of value array are a valid option" name="validation/utils/validate-checkbox-against-options.js validateCheckboxValueAgainstOptions should return true if all members of value array are a valid option" time="0.001">
    </testcase>
    <testcase classname="validation/utils/validate-checkbox-against-options.js validateCheckboxValueAgainstOptions should throw error if a member of value array is a not a valid option" name="validation/utils/validate-checkbox-against-options.js validateCheckboxValueAgainstOptions should throw error if a member of value array is a not a valid option" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/declaration-information" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.657" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should return 400 if appeal id not provided" name="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should return 400 if appeal id not provided" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should return 400 if appealLPD does not exist in sesion" name="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should return 400 if appealLPD does not exist in sesion" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should return 404 if appeal not found" name="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should return 404 if appeal not found" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should define default value if appeal submission date is not defined" name="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should define default value if appeal submission date is not defined" time="0.029">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should call the correct template with the expected data on the happy path" name="controllers/full-appeal/submit-appeal/declaration-information getDeclarationInformation should call the correct template with the expected data on the happy path" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="controllers/document" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.637" tests="2">
    <testcase classname="controllers/document getDocument should return the document" name="controllers/document getDocument should return the document" time="0.005">
    </testcase>
    <testcase classname="controllers/document getDocument should return an error if an error is thrown" name="controllers/document getDocument should return an error if an error is thrown" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="middleware/fetch-existing-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.492" tests="4">
    <testcase classname="middleware/fetch-existing-appeal call next immediately if no session" name="middleware/fetch-existing-appeal call next immediately if no session" time="0.003">
    </testcase>
    <testcase classname="middleware/fetch-existing-appeal set empty appeal and call next immediately if no appeal exists" name="middleware/fetch-existing-appeal set empty appeal and call next immediately if no appeal exists" time="0.002">
    </testcase>
    <testcase classname="middleware/fetch-existing-appeal set empty appeal and call next immediately if no id set" name="middleware/fetch-existing-appeal set empty appeal and call next immediately if no id set" time="0">
    </testcase>
    <testcase classname="middleware/fetch-existing-appeal set session.appeal and call next if api call succeeds" name="middleware/fetch-existing-appeal set session.appeal and call next if api call succeeds" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/householder-planning/claiming-costs-householder" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.802" tests="5">
    <testcase classname="controllers/householder-planning/claiming-costs-householder getClaimingCostsHouseholder should call the correct template on getClaimingCostsHouseholder" name="controllers/householder-planning/claiming-costs-householder getClaimingCostsHouseholder should call the correct template on getClaimingCostsHouseholder" time="0.004">
    </testcase>
    <testcase classname="controllers/householder-planning/claiming-costs-householder postClaimingCostsHouseholder should redirect to the use-a-different-service page if &apos;yes&apos; is selected" name="controllers/householder-planning/claiming-costs-householder postClaimingCostsHouseholder should redirect to the use-a-different-service page if &apos;yes&apos; is selected" time="0.015">
    </testcase>
    <testcase classname="controllers/householder-planning/claiming-costs-householder postClaimingCostsHouseholder should redirect to the results-householder page if &apos;no&apos; is selected" name="controllers/householder-planning/claiming-costs-householder postClaimingCostsHouseholder should redirect to the results-householder page if &apos;no&apos; is selected" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/claiming-costs-householder postClaimingCostsHouseholder should render errors on the page if there are validation errors" name="controllers/householder-planning/claiming-costs-householder postClaimingCostsHouseholder should render errors on the page if there are validation errors" time="0.001">
    </testcase>
    <testcase classname="controllers/householder-planning/claiming-costs-householder postClaimingCostsHouseholder should re-render the template with errors if there is any api call error" name="controllers/householder-planning/claiming-costs-householder postClaimingCostsHouseholder should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/debug" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.447" tests="1">
    <testcase classname="routes/debug should define the expected routes" name="routes/debug should define the expected routes" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="lib/planning-departments-to-nunjucks-list-items" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.6" tests="4">
    <testcase classname="lib/planning-departments-to-nunjucks-list-items departmentsToNunjucksItems should return the expected items list - empty list" name="lib/planning-departments-to-nunjucks-list-items departmentsToNunjucksItems should return the expected items list - empty list" time="0.003">
    </testcase>
    <testcase classname="lib/planning-departments-to-nunjucks-list-items departmentsToNunjucksItems should return the expected items list - one item, not selected" name="lib/planning-departments-to-nunjucks-list-items departmentsToNunjucksItems should return the expected items list - one item, not selected" time="0.001">
    </testcase>
    <testcase classname="lib/planning-departments-to-nunjucks-list-items departmentsToNunjucksItems should return the expected items list - two items, invalid selection" name="lib/planning-departments-to-nunjucks-list-items departmentsToNunjucksItems should return the expected items list - two items, invalid selection" time="0.03">
    </testcase>
    <testcase classname="lib/planning-departments-to-nunjucks-list-items departmentsToNunjucksItems should return the expected items list - three items, valid selection" name="lib/planning-departments-to-nunjucks-list-items departmentsToNunjucksItems should return the expected items list - three items, valid selection" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/any-of-following" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:31" time="0.507" tests="7">
    <testcase classname="controllers/full-appeal/any-of-following should render any of following page" name="controllers/full-appeal/any-of-following should render any of following page" time="0.005">
    </testcase>
    <testcase classname="controllers/full-appeal/any-of-following postAnyOfFollowing should re-render the template with errors if option is not selected" name="controllers/full-appeal/any-of-following postAnyOfFollowing should re-render the template with errors if option is not selected" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/any-of-following postAnyOfFollowing should send user to shutter page when choosing wrong single option" name="controllers/full-appeal/any-of-following postAnyOfFollowing should send user to shutter page when choosing wrong single option" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/any-of-following postAnyOfFollowing should send user to shutter page when choosing wrong multiple options" name="controllers/full-appeal/any-of-following postAnyOfFollowing should send user to shutter page when choosing wrong multiple options" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/any-of-following postAnyOfFollowing should send user to shutter page when sending invalid inputs" name="controllers/full-appeal/any-of-following postAnyOfFollowing should send user to shutter page when sending invalid inputs" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/any-of-following postAnyOfFollowing should send user to enforcement page when choosing none of these option" name="controllers/full-appeal/any-of-following postAnyOfFollowing should send user to enforcement page when choosing none of these option" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/any-of-following postAnyOfFollowing should re-render the template with errors if an error is thrown" name="controllers/full-appeal/any-of-following postAnyOfFollowing should re-render the template with errors if an error is thrown" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/original-applicant" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="0.916" tests="5">
    <testcase classname="controllers/full-appeal/submit-appeal/original-applicant getOriginalApplicant should call the correct template" name="controllers/full-appeal/submit-appeal/original-applicant getOriginalApplicant should call the correct template" time="0.011">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/original-applicant postOriginalApplicant should redirect with original-appellant set to true" name="controllers/full-appeal/submit-appeal/original-applicant postOriginalApplicant should redirect with original-appellant set to true" time="0.014">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/original-applicant postOriginalApplicant should redirect with original-appellant set to false" name="controllers/full-appeal/submit-appeal/original-applicant postOriginalApplicant should redirect with original-appellant set to false" time="0.051">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/original-applicant postOriginalApplicant should re-render the template with errors if there is any validator error" name="controllers/full-appeal/submit-appeal/original-applicant postOriginalApplicant should re-render the template with errors if there is any validator error" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/original-applicant postOriginalApplicant should re-render the template with errors if there is any api call error" name="controllers/full-appeal/submit-appeal/original-applicant postOriginalApplicant should re-render the template with errors if there is any api call error" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="validators/full-appeal/enforcement-notice" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:30" time="1.141" tests="6">
    <testcase classname="validators/full-appeal/enforcement-notice rules is configured with the expected rules" name="validators/full-appeal/enforcement-notice rules is configured with the expected rules" time="0.004">
    </testcase>
    <testcase classname="validators/full-appeal/enforcement-notice rules ruleEnforcementNotice is configured with the expected rules" name="validators/full-appeal/enforcement-notice rules ruleEnforcementNotice is configured with the expected rules" time="0.056">
    </testcase>
    <testcase classname="validators/full-appeal/enforcement-notice validator should return the expected validation outcome - No selection made regarding receipt of an Enforcement Notice" name="validators/full-appeal/enforcement-notice validator should return the expected validation outcome - No selection made regarding receipt of an Enforcement Notice" time="0.034">
    </testcase>
    <testcase classname="validators/full-appeal/enforcement-notice validator should return the expected validation outcome - User selected `yes` to receiving an Enforcement Notice" name="validators/full-appeal/enforcement-notice validator should return the expected validation outcome - User selected `yes` to receiving an Enforcement Notice" time="0.001">
    </testcase>
    <testcase classname="validators/full-appeal/enforcement-notice validator should return the expected validation outcome - User selected `no` to receiving an Enforcement Notice" name="validators/full-appeal/enforcement-notice validator should return the expected validation outcome - User selected `no` to receiving an Enforcement Notice" time="0.002">
    </testcase>
    <testcase classname="validators/full-appeal/enforcement-notice validEnforcementNoticeOptions should define the expected valid enforcement notice options" name="validators/full-appeal/enforcement-notice validEnforcementNoticeOptions should define the expected valid enforcement notice options" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="services/department.service" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:31" time="0.76" tests="7">
    <testcase classname="services/department.service getRefreshedDepartmentData should  give empty result " name="services/department.service getRefreshedDepartmentData should  give empty result " time="0.007">
    </testcase>
    <testcase classname="services/department.service getRefreshedDepartmentData should transform data" name="services/department.service getRefreshedDepartmentData should transform data" time="0.039">
    </testcase>
    <testcase classname="services/department.service getDepartmentData should  give empty result " name="services/department.service getDepartmentData should  give empty result " time="0.001">
    </testcase>
    <testcase classname="services/department.service getDepartmentData should transform data" name="services/department.service getDepartmentData should transform data" time="0.002">
    </testcase>
    <testcase classname="services/department.service getDepartmentFromId should return department by Id" name="services/department.service getDepartmentFromId should return department by Id" time="0.004">
    </testcase>
    <testcase classname="services/department.service getDepartmentFromName should return department by Name" name="services/department.service getDepartmentFromName should return department by Name" time="0.001">
    </testcase>
    <testcase classname="services/department.service resetDepartments should return department by Name" name="services/department.service resetDepartments should return department by Name" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/remove-unwanted-cookies" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:31" time="1.135" tests="9">
    <testcase classname="lib/remove-unwanted-cookies defaultKeepMeCookies should have the expected cookie names" name="lib/remove-unwanted-cookies defaultKeepMeCookies should have the expected cookie names" time="0.013">
    </testcase>
    <testcase classname="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - no existing cookies" name="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - no existing cookies" time="0.002">
    </testcase>
    <testcase classname="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - retains session cookie" name="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - retains session cookie" time="0.001">
    </testcase>
    <testcase classname="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - can force session cookie removal if explicitly excluded in keepTheseCookies" name="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - can force session cookie removal if explicitly excluded in keepTheseCookies" time="0.003">
    </testcase>
    <testcase classname="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - retains cookie_policy" name="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - retains cookie_policy" time="0.001">
    </testcase>
    <testcase classname="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - can force cookie_policy removal if explicitly excluded in keepTheseCookies" name="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - can force cookie_policy removal if explicitly excluded in keepTheseCookies" time="0.06">
    </testcase>
    <testcase classname="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - removes and retains expected with defaults" name="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - removes and retains expected with defaults" time="0.002">
    </testcase>
    <testcase classname="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - removes and retains expected with custom keepTheseCookies" name="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - removes and retains expected with custom keepTheseCookies" time="0.004">
    </testcase>
    <testcase classname="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - removes and retains expected with real world looking setup" name="lib/remove-unwanted-cookies removeUnwantedCookies should retain the expected cookies - removes and retains expected with real world looking setup" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="lib/mime-types" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:31" time="0.944" tests="1">
    <testcase classname="lib/mime-types should define the expected mime types" name="lib/mime-types should define the expected mime types" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/task-statuses" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:31" time="0.498" tests="4">
    <testcase classname="services/task-status/task-statuses should have the expected, defined constants" name="services/task-status/task-statuses should have the expected, defined constants" time="0.004">
    </testcase>
    <testcase classname="services/task-status/task-statuses #getStatusOfPath should return NOT_STARTED if first page is NOT_STARTED" name="services/task-status/task-statuses #getStatusOfPath should return NOT_STARTED if first page is NOT_STARTED" time="0">
    </testcase>
    <testcase classname="services/task-status/task-statuses #getStatusOfPath should return IN_PROGRESS if first page is COMPLETED but no all pages COMPLETED" name="services/task-status/task-statuses #getStatusOfPath should return IN_PROGRESS if first page is COMPLETED but no all pages COMPLETED" time="0">
    </testcase>
    <testcase classname="services/task-status/task-statuses #getStatusOfPath should return COMPLETED if all pages COMPLETED" name="services/task-status/task-statuses #getStatusOfPath should return COMPLETED if all pages COMPLETED" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/full-appeal/status-contact-details.js" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.523" tests="4">
    <testcase classname="services/task-status/full-appeal/status-contact-details.js #statusContactDetails should return NOT_STARTED if originial applicant page is NOT_STARTED" name="services/task-status/full-appeal/status-contact-details.js #statusContactDetails should return NOT_STARTED if originial applicant page is NOT_STARTED" time="0.006">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-contact-details.js #statusContactDetails should return IN_PROGRESS if original applicant and not all sections[isOriginalApplicant, contact] COMPLETED" name="services/task-status/full-appeal/status-contact-details.js #statusContactDetails should return IN_PROGRESS if original applicant and not all sections[isOriginalApplicant, contact] COMPLETED" time="0.003">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-contact-details.js #statusContactDetails should return COMPLETED if original applicant and sections[isOriginalApplicant, contact] COMPLETED" name="services/task-status/full-appeal/status-contact-details.js #statusContactDetails should return COMPLETED if original applicant and sections[isOriginalApplicant, contact] COMPLETED" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-contact-details.js #statusContactDetails should return COMPLETED if not original applicant and sections[isOriginalApplicant, appealingOnBehalfOf, contact] COMPLETED" name="services/task-status/full-appeal/status-contact-details.js #statusContactDetails should return COMPLETED if not original applicant and sections[isOriginalApplicant, appealingOnBehalfOf, contact] COMPLETED" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/is-token-valid" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:31" time="1.205" tests="22">
    <testcase classname="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if id parameter is missing" name="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if id parameter is missing" time="0.003">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if token parameter is missing" name="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if token parameter is missing" time="0.022">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if id parameter is empty" name="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if id parameter is empty" time="0.015">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if token parameter is empty" name="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if token parameter is empty" time="0.005">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if id parameter is of an unexpected type" name="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if id parameter is of an unexpected type" time="0.001">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if token parameter is of an unexpected type" name="lib/is-token-valid isTokenValid should return false without calling checkToken or isTokenExpired if token parameter is of an unexpected type" time="0.002">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should not skip if any testing params arent set" name="lib/is-token-valid isTokenValid should not skip if any testing params arent set" time="0.009">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should not skip if any testing params arent set" name="lib/is-token-valid isTokenValid should not skip if any testing params arent set" time="0.001">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should not skip if any testing params arent set" name="lib/is-token-valid isTokenValid should not skip if any testing params arent set" time="0.003">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should not skip if any testing params arent set" name="lib/is-token-valid isTokenValid should not skip if any testing params arent set" time="0">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should not skip if any testing params arent set" name="lib/is-token-valid isTokenValid should not skip if any testing params arent set" time="0.002">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should not skip if any testing params arent set" name="lib/is-token-valid isTokenValid should not skip if any testing params arent set" time="0.001">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should not skip if any testing params arent set" name="lib/is-token-valid isTokenValid should not skip if any testing params arent set" time="0.002">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false if too many attempts" name="lib/is-token-valid isTokenValid should return false if too many attempts" time="0.098">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should call checkToken if both parameters are valid" name="lib/is-token-valid isTokenValid should call checkToken if both parameters are valid" time="0.002">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false without calling isTokenExpired if returned token document is undefined" name="lib/is-token-valid isTokenValid should return false without calling isTokenExpired if returned token document is undefined" time="0.001">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false without calling isTokenExpired if returned token document is missing id prop" name="lib/is-token-valid isTokenValid should return false without calling isTokenExpired if returned token document is missing id prop" time="0.001">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false if returned token document is missing createdAt prop" name="lib/is-token-valid isTokenValid should return false if returned token document is missing createdAt prop" time="0.001">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false if id in returned token document does not match id parameter" name="lib/is-token-valid isTokenValid should return false if id in returned token document does not match id parameter" time="0.001">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should call isTokenExpired if checkToken returns a token document containing a correct id and createdAt prop" name="lib/is-token-valid isTokenValid should call isTokenExpired if checkToken returns a token document containing a correct id and createdAt prop" time="0">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return false if returned token document id matches id parameter but isTokenExpired returns true" name="lib/is-token-valid isTokenValid should return false if returned token document id matches id parameter but isTokenExpired returns true" time="0">
    </testcase>
    <testcase classname="lib/is-token-valid isTokenValid should return true if returned token document id matches id parameter and isTokenExpired returns false" name="lib/is-token-valid isTokenValid should return true if returned token document id matches id parameter and isTokenExpired returns false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/full-appeal/status-appeal-site-section.js" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.665" tests="11">
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return NOT_STARTED if site address page is NOT_STARTED" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return NOT_STARTED if site address page is NOT_STARTED" time="0.003">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return IN_PROGRESS if not all sections[siteAddress, ownsAllTheLand, agriculturalHolding, visibleFromRoad, healthAndSafety] COMPLETED" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return IN_PROGRESS if not all sections[siteAddress, ownsAllTheLand, agriculturalHolding, visibleFromRoad, healthAndSafety] COMPLETED" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=true, isAgriculturalHolding=false" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=true, isAgriculturalHolding=false" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=true, isAgriculturalHolding=true" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=true, isAgriculturalHolding=true" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=true, isAgriculturalHolding=true, isTenant=true" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=true, isAgriculturalHolding=true, isTenant=true" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=true, isAgriculturalHolding=true, isTenant=true, hasOtherTenants=true" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=true, isAgriculturalHolding=true, isTenant=true, hasOtherTenants=true" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=true, knowsTheOwners=&quot;yes&quot;, isAgriculturalHolding=false" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=true, knowsTheOwners=&quot;yes&quot;, isAgriculturalHolding=false" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=true, knowsTheOwners=&quot;no&quot;, isAgriculturalHolding=false" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=true, knowsTheOwners=&quot;no&quot;, isAgriculturalHolding=false" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=true, knowsTheOwners=&quot;some&quot;, isAgriculturalHolding=false" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=true, knowsTheOwners=&quot;some&quot;, isAgriculturalHolding=false" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=false, knowsTheOwners=&quot;yes&quot;, isAgriculturalHolding=false" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=false, knowsTheOwners=&quot;yes&quot;, isAgriculturalHolding=false" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=false, knowsTheOwners=&quot;some&quot; or &quot;no&quot;, isAgriculturalHolding=false" name="services/task-status/full-appeal/status-appeal-site-section.js #statusAppealSiteSection should return COMPLETED if all pages COMPLETED for ownsAllTheLand=false, ownsSomeOfTheLand=false, knowsTheOwners=&quot;some&quot; or &quot;no&quot;, isAgriculturalHolding=false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/planning-obligation-deadline" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.853" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/planning-obligation-deadline should define the expected routes" name="routes/full-appeal/submit-appeal/planning-obligation-deadline should define the expected routes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/use-existing-service-application-type" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:31" time="1.027" tests="1">
    <testcase classname="controllers/full-appeal/use-existing-service-application-type Test getUseExistingServiceApplicationType method calls the correct template" name="controllers/full-appeal/use-existing-service-application-type Test getUseExistingServiceApplicationType method calls the correct template" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/advertising-your-appeal" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.915" tests="7">
    <testcase classname="controllers/full-appeal/submit-appeal/advertising-your-appeal getAdvertisingYourAppeal should call the correct template" name="controllers/full-appeal/submit-appeal/advertising-your-appeal getAdvertisingYourAppeal should call the correct template" time="0.009">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/advertising-your-appeal getAdvertisingYourAppeal should render isOther=true if ownsSomeOfTheLand is true" name="controllers/full-appeal/submit-appeal/advertising-your-appeal getAdvertisingYourAppeal should render isOther=true if ownsSomeOfTheLand is true" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/advertising-your-appeal getAdvertisingYourAppeal should render isAll=true if knowsTheOwners is &apos;some&apos;" name="controllers/full-appeal/submit-appeal/advertising-your-appeal getAdvertisingYourAppeal should render isAll=true if knowsTheOwners is &apos;some&apos;" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/advertising-your-appeal postAdvertisingYourAppeal should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/advertising-your-appeal postAdvertisingYourAppeal should re-render the template with errors if submission validation fails" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/advertising-your-appeal postAdvertisingYourAppeal should re-render the template with errors if an error is thrown" name="controllers/full-appeal/submit-appeal/advertising-your-appeal postAdvertisingYourAppeal should re-render the template with errors if an error is thrown" time="0.035">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/advertising-your-appeal postAdvertisingYourAppeal should redirect to the correct page user confirms the page" name="controllers/full-appeal/submit-appeal/advertising-your-appeal postAdvertisingYourAppeal should redirect to the correct page user confirms the page" time="0.002">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/advertising-your-appeal postAdvertisingYourAppeal should redirect to &apos;Telling the landowners&apos; page if knowsTheOwners is &apos;some&apos; and user confirms the page" name="controllers/full-appeal/submit-appeal/advertising-your-appeal postAdvertisingYourAppeal should redirect to &apos;Telling the landowners&apos; page if knowsTheOwners is &apos;some&apos; and user confirms the page" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="validators/validation-error-handler" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="1.018" tests="2">
    <testcase classname="validators/validation-error-handler should validate - no errors" name="validators/validation-error-handler should validate - no errors" time="0.028">
    </testcase>
    <testcase classname="validators/validation-error-handler should validate - with errors" name="validators/validation-error-handler should validate - with errors" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/use-existing-service-local-planning-department" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.712" tests="1">
    <testcase classname="routes/full-appeal/use-existing-service-local-planning-department should define the expected routes" name="routes/full-appeal/use-existing-service-local-planning-department should define the expected routes" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="/lib/full-appeal/views" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.603" tests="1">
    <testcase classname="/lib/full-appeal/views should have the expected defined constants" name="/lib/full-appeal/views should have the expected defined constants" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="validators/common/email-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.831" tests="8">
    <testcase classname="validators/common/email-address rules has a rule for the appellant&apos;s email" name="validators/common/email-address rules has a rule for the appellant&apos;s email" time="0.014">
    </testcase>
    <testcase classname="validators/common/email-address rules should have an array containing rule" name="validators/common/email-address rules should have an array containing rule" time="0.003">
    </testcase>
    <testcase classname="validators/common/email-address validator should return the expected validation outcome - undefined - empty" name="validators/common/email-address validator should return the expected validation outcome - undefined - empty" time="0.072">
    </testcase>
    <testcase classname="validators/common/email-address validator should return the expected validation outcome - invalid value 1 - fail, incorrect format" name="validators/common/email-address validator should return the expected validation outcome - invalid value 1 - fail, incorrect format" time="0.018">
    </testcase>
    <testcase classname="validators/common/email-address validator should return the expected validation outcome - invalid value 2 - fail, incorrect format" name="validators/common/email-address validator should return the expected validation outcome - invalid value 2 - fail, incorrect format" time="0.003">
    </testcase>
    <testcase classname="validators/common/email-address validator should return the expected validation outcome - invalid email - fail 1" name="validators/common/email-address validator should return the expected validation outcome - invalid email - fail 1" time="0.011">
    </testcase>
    <testcase classname="validators/common/email-address validator should return the expected validation outcome - invalid email - fail 2" name="validators/common/email-address validator should return the expected validation outcome - invalid email - fail 2" time="0.003">
    </testcase>
    <testcase classname="validators/common/email-address validator should return the expected validation outcome - valid values - pass" name="validators/common/email-address validator should return the expected validation outcome - valid values - pass" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/lpa-dashboard/add-remove-users" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.761" tests="3">
    <testcase classname="controllers/lpa-dashboard/add-remove-users getAddRemoveUsers should render the view with backlink to dashboard and link to email-address" name="controllers/lpa-dashboard/add-remove-users getAddRemoveUsers should render the view with backlink to dashboard and link to email-address" time="0.003">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/add-remove-users getAddRemoveUsers should render view with correct successMessage if req.session.addUserEmailAddress exists" name="controllers/lpa-dashboard/add-remove-users getAddRemoveUsers should render view with correct successMessage if req.session.addUserEmailAddress exists" time="0.001">
    </testcase>
    <testcase classname="controllers/lpa-dashboard/add-remove-users getAddRemoveUsers should render view with correct successMessage if req.session.removeUserEmailAddress exists" name="controllers/lpa-dashboard/add-remove-users getAddRemoveUsers should render view with correct successMessage if req.session.removeUserEmailAddress exists" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/eligibility/listed-building" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:32" time="0.827" tests="6">
    <testcase classname="controllers/eligibility/listed-building getServiceNotAvailableForListedBuildings calls the correct template" name="controllers/eligibility/listed-building getServiceNotAvailableForListedBuildings calls the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/eligibility/listed-building getListedBuilding calls the correct template" name="controllers/eligibility/listed-building getListedBuilding calls the correct template" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/listed-building postListedBuilding should re-render the template with errors if there is any validation error" name="controllers/eligibility/listed-building postListedBuilding should re-render the template with errors if there is any validation error" time="0.002">
    </testcase>
    <testcase classname="controllers/eligibility/listed-building postListedBuilding should re-render the template with errors if there is any api call error" name="controllers/eligibility/listed-building postListedBuilding should re-render the template with errors if there is any api call error" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/listed-building postListedBuilding should redirect to `/before-you-start/use-existing-service-listed-building` if `is-your-appeal-about-a-listed-building` is `yes`" name="controllers/eligibility/listed-building postListedBuilding should redirect to `/before-you-start/use-existing-service-listed-building` if `is-your-appeal-about-a-listed-building` is `yes`" time="0.001">
    </testcase>
    <testcase classname="controllers/eligibility/listed-building postListedBuilding should redirect to `/eligibility/costs` if `is-your-appeal-about-a-listed-building` is `no`" name="controllers/eligibility/listed-building postListedBuilding should redirect to `/eligibility/costs` if `is-your-appeal-about-a-listed-building` is `no`" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/get-base-url" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:33" time="0.507" tests="4">
    <testcase classname="lib/get-base-url unhappy path req.protocol not defined" name="lib/get-base-url unhappy path req.protocol not defined" time="0.004">
    </testcase>
    <testcase classname="lib/get-base-url unhappy path host not defined" name="lib/get-base-url unhappy path host not defined" time="0">
    </testcase>
    <testcase classname="lib/get-base-url happy path - should return the expected base url - http://example.com" name="lib/get-base-url happy path - should return the expected base url - http://example.com" time="0">
    </testcase>
    <testcase classname="lib/get-base-url happy path - should return the expected base url - https://example.org" name="lib/get-base-url happy path - should return the expected base url - https://example.org" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/final-comment/appeal-closed-for-comment" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:33" time="0.618" tests="1">
    <testcase classname="controllers/final-comment/appeal-closed-for-comment getAppealClosedForComment should render the appeal closed for comment page" name="controllers/final-comment/appeal-closed-for-comment getAppealClosedForComment should render the appeal closed for comment page" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/status-appeal-site-address" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:33" time="0.469" tests="5">
    <testcase classname="services/task-status/status-appeal-site-address should return the expected status - NOT STARTED - Not started by default" name="services/task-status/status-appeal-site-address should return the expected status - NOT STARTED - Not started by default" time="0.003">
    </testcase>
    <testcase classname="services/task-status/status-appeal-site-address should return the expected status - NOT STARTED - Requires postcode" name="services/task-status/status-appeal-site-address should return the expected status - NOT STARTED - Requires postcode" time="0.019">
    </testcase>
    <testcase classname="services/task-status/status-appeal-site-address should return the expected status - NOT STARTED - Requires addressLine1" name="services/task-status/status-appeal-site-address should return the expected status - NOT STARTED - Requires addressLine1" time="0.001">
    </testcase>
    <testcase classname="services/task-status/status-appeal-site-address should return the expected status - NOT STARTED - Empty strings are not valid" name="services/task-status/status-appeal-site-address should return the expected status - NOT STARTED - Empty strings are not valid" time="0">
    </testcase>
    <testcase classname="services/task-status/status-appeal-site-address should return the expected status - COMPLETED - Happy path" name="services/task-status/status-appeal-site-address should return the expected status - COMPLETED - Happy path" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa-dashboard/confirm-remove-user" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:33" time="1.004" tests="1">
    <testcase classname="routes/lpa-dashboard/confirm-remove-user should define the expected routes" name="routes/lpa-dashboard/confirm-remove-user should define the expected routes" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="validators/eligibility/costs" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:33" time="0.778" tests="7">
    <testcase classname="validators/eligibility/costs rules is configured with the expected rules" name="validators/eligibility/costs rules is configured with the expected rules" time="0.004">
    </testcase>
    <testcase classname="validators/eligibility/costs rules ruleCosts is configured with the expected rules" name="validators/eligibility/costs rules ruleCosts is configured with the expected rules" time="0.003">
    </testcase>
    <testcase classname="validators/eligibility/costs validator should return the expected validation outcome - undefined - empty" name="validators/eligibility/costs validator should return the expected validation outcome - undefined - empty" time="0.005">
    </testcase>
    <testcase classname="validators/eligibility/costs validator should return the expected validation outcome - invalid value for `claim-costs` - fail" name="validators/eligibility/costs validator should return the expected validation outcome - invalid value for `claim-costs` - fail" time="0.002">
    </testcase>
    <testcase classname="validators/eligibility/costs validator should return the expected validation outcome - valid value for `claim-costs` - &quot;yes&quot; - pass" name="validators/eligibility/costs validator should return the expected validation outcome - valid value for `claim-costs` - &quot;yes&quot; - pass" time="0.001">
    </testcase>
    <testcase classname="validators/eligibility/costs validator should return the expected validation outcome - valid value for `claim-costs` - &quot;no&quot; - pass" name="validators/eligibility/costs validator should return the expected validation outcome - valid value for `claim-costs` - &quot;no&quot; - pass" time="0.001">
    </testcase>
    <testcase classname="validators/eligibility/costs validClaimCostsOptions should define the expected valid claim costs options" name="validators/eligibility/costs validClaimCostsOptions should define the expected valid claim costs options" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/common/enter-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:33" time="0.561" tests="5">
    <testcase classname="controllers/common/enter-code getRequestNewCode should redirect to correct page" name="controllers/common/enter-code getRequestNewCode should redirect to correct page" time="0.008">
    </testcase>
    <testcase classname="controllers/common/enter-code getRequestNewCodeLPA should redirect to correct page" name="controllers/common/enter-code getRequestNewCodeLPA should redirect to correct page" time="0.002">
    </testcase>
    <testcase classname="controllers/common/enter-code postRequestNewCode should redirect to correct page" name="controllers/common/enter-code postRequestNewCode should redirect to correct page" time="0.006">
    </testcase>
    <testcase classname="controllers/common/enter-code postRequestNewCodeLPA should redirect to enter-code page if the email is correct" name="controllers/common/enter-code postRequestNewCodeLPA should redirect to enter-code page if the email is correct" time="0.001">
    </testcase>
    <testcase classname="controllers/common/enter-code postRequestNewCodeLPA should redirect to request-new-code page if the email is incorrect" name="controllers/common/enter-code postRequestNewCodeLPA should redirect to request-new-code page if the email is incorrect" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routes/householder-planning/eligibility/use-existing-service-costs" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:33" time="0.458" tests="1">
    <testcase classname="routes/householder-planning/eligibility/use-existing-service-costs should define the expected routes" name="routes/householder-planning/eligibility/use-existing-service-costs should define the expected routes" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="routes/lpa/request-new-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:33" time="0.81" tests="1">
    <testcase classname="routes/lpa/request-new-code should define the expected routes" name="routes/lpa/request-new-code should define the expected routes" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="controllers/appeal-householder-decision/email-address-confirmed" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.397" tests="1">
    <testcase classname="controllers/appeal-householder-decision/email-address-confirmed getEmailConfirmed calls correct template: token valid" name="controllers/appeal-householder-decision/email-address-confirmed getEmailConfirmed calls correct template: token valid" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="lib/render-template-filter" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.43" tests="1">
    <testcase classname="lib/render-template-filter should call render on the given template path" name="lib/render-template-filter should call render on the given template path" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/appeal-submitted" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.511" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/appeal-submitted should define the expected routes" name="routes/full-appeal/submit-appeal/appeal-submitted should define the expected routes" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="middleware/check-debug-allowed" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.443" tests="2">
    <testcase classname="middleware/check-debug-allowed should call next() when allowTestingOverrides is true" name="middleware/check-debug-allowed should call next() when allowTestingOverrides is true" time="0.004">
    </testcase>
    <testcase classname="middleware/check-debug-allowed should return 404 and render error/not-found when allowTestingOverrides is false" name="middleware/check-debug-allowed should return 404 and render error/not-found when allowTestingOverrides is false" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/index" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.479" tests="1">
    <testcase classname="controllers/index getIndex should redirect to the expected route" name="controllers/index getIndex should redirect to the expected route" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="lib/find-target-value-in-json" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.454" tests="3">
    <testcase classname="lib/find-target-value-in-json finds a value in a JSON object when provided with a target key" name="lib/find-target-value-in-json finds a value in a JSON object when provided with a target key" time="0.015">
    </testcase>
    <testcase classname="lib/find-target-value-in-json returns undefined if target key is not in JSON object" name="lib/find-target-value-in-json returns undefined if target key is not in JSON object" time="0.001">
    </testcase>
    <testcase classname="lib/find-target-value-in-json ignores specified key" name="lib/find-target-value-in-json ignores specified key" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="middleware/check-path-allowed" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.598" tests="10">
    <testcase classname="middleware/check-path-allowed should call next() for the `/before-you-start/local-planning-department` page" name="middleware/check-path-allowed should call next() for the `/before-you-start/local-planning-department` page" time="0.003">
    </testcase>
    <testcase classname="middleware/check-path-allowed should call next() for the `/before-you-start/type-of-planning-application` page" name="middleware/check-path-allowed should call next() for the `/before-you-start/type-of-planning-application` page" time="0">
    </testcase>
    <testcase classname="middleware/check-path-allowed should call next() for the `/before-you-start/use-a-different-service` page" name="middleware/check-path-allowed should call next() for the `/before-you-start/use-a-different-service` page" time="0">
    </testcase>
    <testcase classname="middleware/check-path-allowed should call next() for the `/appellant-submission/submission-information/6e1195ad-176d-4ca3-a944-525218780a7e` page" name="middleware/check-path-allowed should call next() for the `/appellant-submission/submission-information/6e1195ad-176d-4ca3-a944-525218780a7e` page" time="0.001">
    </testcase>
    <testcase classname="middleware/check-path-allowed should call next() for the `/full-appeal/submit-appeal/declaration-information/6e1195ad-176d-4ca3-a944-525218780a7e` page" name="middleware/check-path-allowed should call next() for the `/full-appeal/submit-appeal/declaration-information/6e1195ad-176d-4ca3-a944-525218780a7e` page" time="0.001">
    </testcase>
    <testcase classname="middleware/check-path-allowed should call next() if appealType is set" name="middleware/check-path-allowed should call next() if appealType is set" time="0.001">
    </testcase>
    <testcase classname="middleware/check-path-allowed should redirect to the `/before-you-start` page if the page is not in allowList and the appealType is not set" name="middleware/check-path-allowed should redirect to the `/before-you-start` page if the page is not in allowList and the appealType is not set" time="0.002">
    </testcase>
    <testcase classname="middleware/check-path-allowed should redirect to the `/before-you-start` page if req.session is not set" name="middleware/check-path-allowed should redirect to the `/before-you-start` page if req.session is not set" time="0.001">
    </testcase>
    <testcase classname="middleware/check-path-allowed should redirect to the `/before-you-start` page if req.session.appeal is not set" name="middleware/check-path-allowed should redirect to the `/before-you-start` page if req.session.appeal is not set" time="0">
    </testcase>
    <testcase classname="middleware/check-path-allowed should redirect to the `/before-you-start` page if req.session.appeal is null" name="middleware/check-path-allowed should redirect to the `/before-you-start` page if req.session.appeal is null" time="0">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/email-address-confirmed" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.529" tests="1">
    <testcase classname="controllers/full-appeal/submit-appeal/email-address-confirmed getEmailConfirmed calls correct template: token valid" name="controllers/full-appeal/submit-appeal/email-address-confirmed getEmailConfirmed calls correct template: token valid" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/use-a-different-service" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.598" tests="1">
    <testcase classname="routes/full-appeal/use-a-different-service should define the expected routes" name="routes/full-appeal/use-a-different-service should define the expected routes" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="middleware/remove-unwanted-cookies" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.598" tests="5">
    <testcase classname="middleware/remove-unwanted-cookies req.cookies is undefined" name="middleware/remove-unwanted-cookies req.cookies is undefined" time="0.003">
    </testcase>
    <testcase classname="middleware/remove-unwanted-cookies req.cookies is set but the interesting key does not exist" name="middleware/remove-unwanted-cookies req.cookies is set but the interesting key does not exist" time="0.002">
    </testcase>
    <testcase classname="middleware/remove-unwanted-cookies req.cookies[cookieConfig.COOKIE_POLICY_KEY] is set but the value is not JSON" name="middleware/remove-unwanted-cookies req.cookies[cookieConfig.COOKIE_POLICY_KEY] is set but the value is not JSON" time="0.001">
    </testcase>
    <testcase classname="middleware/remove-unwanted-cookies req.cookies[cookieConfig.COOKIE_POLICY_KEY] is set and usage is enabled" name="middleware/remove-unwanted-cookies req.cookies[cookieConfig.COOKIE_POLICY_KEY] is set and usage is enabled" time="0.001">
    </testcase>
    <testcase classname="middleware/remove-unwanted-cookies req.cookies[cookieConfig.COOKIE_POLICY_KEY] is set and usage is disabled" name="middleware/remove-unwanted-cookies req.cookies[cookieConfig.COOKIE_POLICY_KEY] is set and usage is disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/final-comment/comments-question" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.625" tests="2">
    <testcase classname="controllers/final-comment/comments-question postCommentsQuestion sets session correctly when comments-question yes" name="controllers/final-comment/comments-question postCommentsQuestion sets session correctly when comments-question yes" time="0.009">
    </testcase>
    <testcase classname="controllers/final-comment/comments-question postCommentsQuestion sets session correctly when comments-question no" name="controllers/final-comment/comments-question postCommentsQuestion sets session correctly when comments-question no" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="services/task-status/full-appeal/status-appeal-decision-section.js" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.42" tests="5">
    <testcase classname="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return NOT_STARTED if how-decide-appeal page is NOT_STARTED" name="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return NOT_STARTED if how-decide-appeal page is NOT_STARTED" time="0.003">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return COMPLETED if all pages COMPLETED for procedureType=Written Representation" name="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return COMPLETED if all pages COMPLETED for procedureType=Written Representation" time="0">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return IN_PROGRESS if not all pages COMPLETED for procedureType=Hearing" name="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return IN_PROGRESS if not all pages COMPLETED for procedureType=Hearing" time="0.001">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return COMPLETED if all pages COMPLETED for procedureType=Hearing" name="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return COMPLETED if all pages COMPLETED for procedureType=Hearing" time="0.02">
    </testcase>
    <testcase classname="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return COMPLETED if all pages COMPLETED for procedureType=Inquiry" name="services/task-status/full-appeal/status-appeal-decision-section.js #statusAppealDecisionSection should return COMPLETED if all pages COMPLETED for procedureType=Inquiry" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/application-number" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.725" tests="4">
    <testcase classname="controllers/full-appeal/submit-appeal/application-number getApplicationNumber should call the correct template" name="controllers/full-appeal/submit-appeal/application-number getApplicationNumber should call the correct template" time="0.004">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-number postApplicationNumber should re-render the template with errors if submission validation fails" name="controllers/full-appeal/submit-appeal/application-number postApplicationNumber should re-render the template with errors if submission validation fails" time="0.001">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-number postApplicationNumber should log an error if the api call fails, and remain on the same page" name="controllers/full-appeal/submit-appeal/application-number postApplicationNumber should log an error if the api call fails, and remain on the same page" time="0.034">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/application-number postApplicationNumber should redirect to `/full-appeal/design-access-statement-submitted` if valid" name="controllers/full-appeal/submit-appeal/application-number postApplicationNumber should redirect to `/full-appeal/design-access-statement-submitted` if valid" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="validators/appellant-submission/site-access" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:34" time="0.703" tests="11">
    <testcase classname="validators/appellant-submission/site-access rules is configured with the expected rules" name="validators/appellant-submission/site-access rules is configured with the expected rules" time="0.032">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access rules ruleSiteAccess is configured with the expected rules" name="validators/appellant-submission/site-access rules ruleSiteAccess is configured with the expected rules" time="0.005">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access rules ruleSiteAccessMoreDetail is configured with the expected rules" name="validators/appellant-submission/site-access rules ruleSiteAccessMoreDetail is configured with the expected rules" time="0.005">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access validator should return the expected validation outcome - No selection made as to the visibility of the site" name="validators/appellant-submission/site-access validator should return the expected validation outcome - No selection made as to the visibility of the site" time="0.015">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access validator should return the expected validation outcome - Site can be viewed from public highway" name="validators/appellant-submission/site-access validator should return the expected validation outcome - Site can be viewed from public highway" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, no information provided as to how - `site-access-more-detail` field missing - invalid" name="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, no information provided as to how - `site-access-more-detail` field missing - invalid" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, information provided as to how - valid" name="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, information provided as to how - valid" time="0.019">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, no information provided as to how - `site-access-more-detail` is empty - invalid" name="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, no information provided as to how - `site-access-more-detail` is empty - invalid" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, information provided is max length - valid" name="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, information provided is max length - valid" time="0.003">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, information provided exceeds max length - invalid" name="validators/appellant-submission/site-access validator should return the expected validation outcome - Site cannot be viewed from public highway, information provided exceeds max length - invalid" time="0.002">
    </testcase>
    <testcase classname="validators/appellant-submission/site-access validSiteAccessOptions should define the expected valid site access options" name="validators/appellant-submission/site-access validSiteAccessOptions should define the expected valid site access options" time="0">
    </testcase>
  </testsuite>
  <testsuite name="requireUser" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.51" tests="3">
    <testcase classname="requireUser calls next if enabled user is in session" name="requireUser calls next if enabled user is in session" time="0.003">
    </testcase>
    <testcase classname="requireUser returns a 401 if no user" name="requireUser returns a 401 if no user" time="0.003">
    </testcase>
    <testcase classname="requireUser returns a 401 user not enabled" name="requireUser returns a 401 user not enabled" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="routes/full-appeal/submit-appeal/list-of-documents" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.729" tests="1">
    <testcase classname="routes/full-appeal/submit-appeal/list-of-documents should define the expected routes" name="routes/full-appeal/submit-appeal/list-of-documents should define the expected routes" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="controllers/final-comment/documents-check" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.539" tests="2">
    <testcase classname="controllers/final-comment/documents-check postDocumentsCheck sets session correctly when documents-check yes" name="controllers/final-comment/documents-check postDocumentsCheck sets session correctly when documents-check yes" time="0.009">
    </testcase>
    <testcase classname="controllers/final-comment/documents-check postDocumentsCheck sets session correctly when documents-check no" name="controllers/final-comment/documents-check postDocumentsCheck sets session correctly when documents-check no" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lib/express-validation-errors-to-govuk-error-list" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.694" tests="3">
    <testcase classname="lib/express-validation-errors-to-govuk-error-list should map the given express validation errors to the Gov UK error list format: - no errors" name="lib/express-validation-errors-to-govuk-error-list should map the given express validation errors to the Gov UK error list format: - no errors" time="0.004">
    </testcase>
    <testcase classname="lib/express-validation-errors-to-govuk-error-list should map the given express validation errors to the Gov UK error list format: - one error" name="lib/express-validation-errors-to-govuk-error-list should map the given express validation errors to the Gov UK error list format: - one error" time="0.015">
    </testcase>
    <testcase classname="lib/express-validation-errors-to-govuk-error-list should map the given express validation errors to the Gov UK error list format: - multiple errors" name="lib/express-validation-errors-to-govuk-error-list should map the given express validation errors to the Gov UK error list format: - multiple errors" time="0">
    </testcase>
  </testsuite>
  <testsuite name="middleware/req-files-to-req-body-files" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.88" tests="7">
    <testcase classname="middleware/req-files-to-req-body-files should return early if `req.body` is not set" name="middleware/req-files-to-req-body-files should return early if `req.body` is not set" time="0.02">
    </testcase>
    <testcase classname="middleware/req-files-to-req-body-files should return early if `req.files` is not set" name="middleware/req-files-to-req-body-files should return early if `req.files` is not set" time="0.047">
    </testcase>
    <testcase classname="middleware/req-files-to-req-body-files should set `req.body.files = []` if unable to find the given file property path `req.files` - unset" name="middleware/req-files-to-req-body-files should set `req.body.files = []` if unable to find the given file property path `req.files` - unset" time="0.003">
    </testcase>
    <testcase classname="middleware/req-files-to-req-body-files should set `req.body.files = []` if unable to find the given file property path `req.files` - wrong path" name="middleware/req-files-to-req-body-files should set `req.body.files = []` if unable to find the given file property path `req.files` - wrong path" time="0.001">
    </testcase>
    <testcase classname="middleware/req-files-to-req-body-files should set `req.body.files = [req.files]` when given a single file" name="middleware/req-files-to-req-body-files should set `req.body.files = [req.files]` when given a single file" time="0.001">
    </testcase>
    <testcase classname="middleware/req-files-to-req-body-files should set `req.body.files = [...req.files]` when given multiple files" name="middleware/req-files-to-req-body-files should set `req.body.files = [...req.files]` when given multiple files" time="0.001">
    </testcase>
    <testcase classname="middleware/req-files-to-req-body-files should retain existing req.body.files when working with a different key" name="middleware/req-files-to-req-body-files should retain existing req.body.files when working with a different key" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/appeal-already-submitted" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.398" tests="1">
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-already-submitted getAppealAlreadySubmitted calls correct template" name="controllers/full-appeal/submit-appeal/appeal-already-submitted getAppealAlreadySubmitted calls correct template" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="controllers/debug" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.767" tests="3">
    <testcase classname="controllers/debug set-comment-deadline should 404 if given no deadline" name="controllers/debug set-comment-deadline should 404 if given no deadline" time="0.007">
    </testcase>
    <testcase classname="controllers/debug set-comment-deadline should 404 with bad deadline" name="controllers/debug set-comment-deadline should 404 with bad deadline" time="0.001">
    </testcase>
    <testcase classname="controllers/debug set-comment-deadline should 200 if given deadline" name="controllers/debug set-comment-deadline should 200 if given deadline" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="controllers/common/enter-code" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.739" tests="2">
    <testcase classname="controllers/common/enter-code getNeedNewCode should redirect to correct page" name="controllers/common/enter-code getNeedNewCode should redirect to correct page" time="0.008">
    </testcase>
    <testcase classname="controllers/common/enter-code postRequestNewCode should redirect to enter code page" name="controllers/common/enter-code postRequestNewCode should redirect to enter code page" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="controllers/full-appeal/submit-appeal/appeal-submitted" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:35" time="0.566" tests="2">
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-submitted getAppealSubmitted should ensure req.session.appeal is reset" name="controllers/full-appeal/submit-appeal/appeal-submitted getAppealSubmitted should ensure req.session.appeal is reset" time="0.003">
    </testcase>
    <testcase classname="controllers/full-appeal/submit-appeal/appeal-submitted getAppealSubmitted should call the correct template" name="controllers/full-appeal/submit-appeal/appeal-submitted getAppealSubmitted should call the correct template" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="lib/filter-by-key" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:36" time="0.358" tests="4">
    <testcase classname="lib/filter-by-key should give the expected output - empty input" name="lib/filter-by-key should give the expected output - empty input" time="0.002">
    </testcase>
    <testcase classname="lib/filter-by-key should give the expected output - no match" name="lib/filter-by-key should give the expected output - no match" time="0.001">
    </testcase>
    <testcase classname="lib/filter-by-key should give the expected output - no match, several keys" name="lib/filter-by-key should give the expected output - no match, several keys" time="0">
    </testcase>
    <testcase classname="lib/filter-by-key should give the expected output - with match" name="lib/filter-by-key should give the expected output - with match" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="middleware/navigation-history-to-nunjucks" errors="0" failures="0" skipped="0" timestamp="2023-07-17T14:04:36" time="0.38" tests="1">
    <testcase classname="middleware/navigation-history-to-nunjucks should add the navigation history as a nunjucks global variable" name="middleware/navigation-history-to-nunjucks should add the navigation history as a nunjucks global variable" time="0.004">
    </testcase>
  </testsuite>
</testsuites>